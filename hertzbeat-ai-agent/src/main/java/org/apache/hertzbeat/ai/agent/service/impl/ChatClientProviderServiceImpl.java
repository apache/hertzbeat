package org.apache.hertzbeat.ai.agent.service.impl;

import org.apache.hertzbeat.ai.agent.service.ChatClientProviderService;
import org.springframework.ai.chat.client.ChatClient;
import org.springframework.ai.chat.client.advisor.MessageChatMemoryAdvisor;
import org.springframework.ai.chat.memory.MessageWindowChatMemory;
import org.springframework.ai.tool.ToolCallbackProvider;
import org.springframework.stereotype.Service;

/**
 * Implementation of the {@link ChatClientProviderService}.
 * Provides functionality to interact with the ChatClient for handling chat messages.
 */
@Service
public class ChatClientProviderServiceImpl implements ChatClientProviderService {

    private final ChatClient chatClient;

    /**
     * Constructs a new instance of {@code ChatClientProviderServiceImpl}.
     *
     * @param builder              the ChatClient builder to configure and create ChatClient instances
     * @param toolCallbackProvider the ToolCallbackProvider for tool-related callbacks
     */
    public ChatClientProviderServiceImpl(ChatClient.Builder builder, ToolCallbackProvider toolCallbackProvider) {
        this.chatClient = builder.defaultTools(toolCallbackProvider)
                .defaultAdvisors(
                        MessageChatMemoryAdvisor.builder(
                                        MessageWindowChatMemory.builder().build())
                                .build())
                .build();
    }

    /**
     * Completes the given message by interacting with the ChatClient.
     *
     * @param message the user-provided message
     * @return the response content generated by the ChatClient
     */
    @Override
    public String complete(String message) {
        return this.chatClient.prompt()
                .user(message)
                .call()
                .content();
    }
}
