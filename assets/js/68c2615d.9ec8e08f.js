"use strict";(self.webpackChunkhertzbeat=self.webpackChunkhertzbeat||[]).push([[72006],{15680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>u});var n=a(96540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=m(a),u=i,y=c["".concat(s,".").concat(u)]||c[u]||g[u]||l;return a?n.createElement(y,r(r({ref:t},p),{},{components:a})):n.createElement(y,r({ref:t},p))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var m=2;m<l;m++)r[m]=a[m];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},95494:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>g,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var n=a(58168),i=(a(96540),a(15680));const l={id:"alert_notification_template",title:"Notification Template",sidebar_label:"Notification Template",keywords:["Template","Alert Template","Alarm Template","Notification Template","Message Notification","Alert Webhook Callback Notification"]},r=void 0,o={unversionedId:"help/alert_notification_template",id:"help/alert_notification_template",title:"Notification Template",description:"HertzBeat supports custom notification templates. Templates use placeholder variables for rendering, and the system automatically replaces variables with actual alert data during push notifications.",source:"@site/docs/help/alert_notification_template.md",sourceDirName:"help",slug:"/help/alert_notification_template",permalink:"/docs/help/alert_notification_template",draft:!1,editUrl:"https://github.com/apache/hertzbeat/edit/master/home/docs/help/alert_notification_template.md",tags:[],version:"current",frontMatter:{id:"alert_notification_template",title:"Notification Template",sidebar_label:"Notification Template",keywords:["Template","Alert Template","Alarm Template","Notification Template","Message Notification","Alert Webhook Callback Notification"]},sidebar:"docs",previous:{title:"Alert Huawei Cloud SMN Notifications",permalink:"/docs/help/alert_smn"},next:{title:"Prometheus Task Monitor",permalink:"/docs/help/prometheus"}},s={},m=[{value:"Template Configuration",id:"template-configuration",level:2},{value:"Template Rendering",id:"template-rendering",level:2},{value:"Available Variables and Data Structures",id:"available-variables-and-data-structures",level:2},{value:"GroupAlert Structure Fields",id:"groupalert-structure-fields",level:3},{value:"SingleAlert Structure Fields",id:"singlealert-structure-fields",level:3},{value:"Template Variables and Syntax Explanation",id:"template-variables-and-syntax-explanation",level:2},{value:"Template Example",id:"template-example",level:2}],p={toc:m};function g(e){let{components:t,...l}=e;return(0,i.yg)("wrapper",(0,n.A)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"HertzBeat supports custom notification templates. Templates use placeholder variables for rendering, and the system automatically replaces variables with actual alert data during push notifications.")),(0,i.yg)("h2",{id:"template-configuration"},"Template Configuration"),(0,i.yg)("p",null,"\u3010Notification\u3011->\u3010Notice Template\u3011->\u3010Template Configuration\u3011"),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Template Configuration",src:a(707).A,width:"2878",height:"1362"})),(0,i.yg)("h2",{id:"template-rendering"},"Template Rendering"),(0,i.yg)("p",null,"HertzBeat notification templates are based on FreeMarker syntax, supporting variable placeholders, conditional judgments, loops, formatting, and other advanced features. During template rendering, the system injects alert data objects (e.g., GroupAlert, SingleAlert) into the template, and variables are automatically replaced with actual values."),(0,i.yg)("h2",{id:"available-variables-and-data-structures"},"Available Variables and Data Structures"),(0,i.yg)("h3",{id:"groupalert-structure-fields"},"GroupAlert Structure Fields"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://github.com/apache/hertzbeat/blob/master/hertzbeat-common/src/main/java/org/apache/hertzbeat/common/entity/alerter/GroupAlert.java"},"GroupAlert Definition")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"id"),"\uff1aPrimary key of the alert group"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"groupKey"),"\uff1a Unique identifier for the group"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"status"),"\uff1aGroup status (e.g., firing, resolved)"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"groupLabels"),"\uff1aGroup labels (Map)"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"commonLabels"),"\uff1aCommon labels (Map)"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"commonAnnotations"),"\uff1aCommon annotations (Map)"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"alertFingerprints"),"\uff1aList of alert fingerprints"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"creator"),"\u3001",(0,i.yg)("inlineCode",{parentName:"li"},"modifier"),"\u3001",(0,i.yg)("inlineCode",{parentName:"li"},"gmtCreate"),"\u3001",(0,i.yg)("inlineCode",{parentName:"li"},"gmtUpdate"),"\uff1aMetadata"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"alerts"),"\uff1aList of alert details \uff08",(0,i.yg)("inlineCode",{parentName:"li"},"List<SingleAlert>"),"\uff09")),(0,i.yg)("h3",{id:"singlealert-structure-fields"},"SingleAlert Structure Fields"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://github.com/apache/hertzbeat/blob/master/hertzbeat-common/src/main/java/org/apache/hertzbeat/common/entity/alerter/SingleAlert.java"},"SingleAlert Definition")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"id"),"\uff1aPrimary key of the detail"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"fingerprint"),"\uff1aUnique fingerprint"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"labels"),"\uff1aLabels (Map)"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"annotations"),"\uff1aAnnotations (Map)"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"content"),"\uff1aAlert content"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"status"),"\uff1aStatus (firing|resolved)"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"triggerTimes"),"\uff1aNumber of triggers"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"startAt"),"\u3001",(0,i.yg)("inlineCode",{parentName:"li"},"activeAt"),"\u3001",(0,i.yg)("inlineCode",{parentName:"li"},"endAt"),"\uff1aTimestamps"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"creator"),"\u3001",(0,i.yg)("inlineCode",{parentName:"li"},"modifier"),"\u3001",(0,i.yg)("inlineCode",{parentName:"li"},"gmtCreate"),"\u3001",(0,i.yg)("inlineCode",{parentName:"li"},"gmtUpdate"),"\uff1aMetadata")),(0,i.yg)("h2",{id:"template-variables-and-syntax-explanation"},"Template Variables and Syntax Explanation"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Global Variables"),"\uff1a"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"${status}"),"\uff1aAlert status (e.g., alert, recovery, etc.)"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"${groupKey}"),"\uff1aUnique identifier for the group"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"${commonLabels.xxx}"),"\u3001",(0,i.yg)("inlineCode",{parentName:"li"},"${commonAnnotations.xxx}"),"\uff1aCommon labels and annotations, accessed via ",(0,i.yg)("inlineCode",{parentName:"li"},"xxx")))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Alert Details List"),"\uff1a"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"${alerts}"),"\uff1aCollection of alert details, usually traversed with ",(0,i.yg)("inlineCode",{parentName:"li"},"<#list alerts as alert>")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"${alert.labels.xxx}"),"\u3001",(0,i.yg)("inlineCode",{parentName:"li"},"${alert.annotations.xxx}"),"\uff1aLabels and annotations for a single alert"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"${alert.content}"),"\uff1aAlert content"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"${alert.triggerTimes}"),"\uff1aNumber of triggers"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"${alert.startAt}"),"\uff1aFirst trigger time"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Template Syntax Support"),"\uff1a"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Supports FreeMarker syntax, including conditional statements ",(0,i.yg)("inlineCode",{parentName:"li"},"<#if>"),", loops ",(0,i.yg)("inlineCode",{parentName:"li"},"<#list>"),", JSON stringification ",(0,i.yg)("inlineCode",{parentName:"li"},"?json_string"),", time formatting ",(0,i.yg)("inlineCode",{parentName:"li"},"?number_to_datetime"),", string formatting ",(0,i.yg)("inlineCode",{parentName:"li"},"?string('yyyy-MM-dd HH:mm:ss')"),", etc."),(0,i.yg)("li",{parentName:"ul"},"Allows flexible combination of variables and template syntax to achieve complex message customization."),(0,i.yg)("li",{parentName:"ul"},"For more syntax, refer to the ",(0,i.yg)("a",{parentName:"li",href:"https://freemarker.apache.org/"},"FreeMarker Documentation"))))),(0,i.yg)("h2",{id:"template-example"},"Template Example"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "\ud83d\udd14 HertzBeat Alert Notification",\n  "status": "${status!"UNKNOWN"}",\n  "commonLabels": {\n    <#if commonLabels?? && commonLabels.severity??>\n    "severity": "${commonLabels.severity?switch("critical", "\u2764\ufe0f Critical", "warning", "\ud83d\udc9b Warning", "info", "\ud83d\udc9a Info", "Unknown")}"<#if commonLabels.alertname??>,</#if>\n    </#if>\n    <#if commonLabels?? && commonLabels.alertname??>\n    "alertName": "${commonLabels.alertname}"\n    </#if>\n  },\n  "alerts": [\n    <#if alerts?? && alerts?size gt 0>\n    <#list alerts as alert>\n    {\n      "index": ${alert?index + 1},\n      "labels": {\n        <#if alert.labels?? && alert.labels?size gt 0>\n        <#list alert.labels?keys as key>\n        "${key}": "${alert.labels[key]?json_string}"<#if key?has_next>,</#if>\n        </#list>\n        </#if>\n      },\n      <#if alert.content?? && alert.content != "">\n      "content": "${alert.content?json_string}",\n      </#if>\n      "triggerTimes": ${alert.triggerTimes!0},\n      "startAt": "${((alert.startAt!0)?number_to_datetime)?string(\'yyyy-MM-dd HH:mm:ss\')}",\n      <#if alert.activeAt?? && alert.activeAt gt 0>\n      "activeAt": "${((alert.activeAt!0)?number_to_datetime)?string(\'yyyy-MM-dd HH:mm:ss\')}",\n      </#if>\n      <#if alert.endAt?? && alert.endAt gt 0>\n      "endAt": "${(alert.endAt?number_to_datetime)?string(\'yyyy-MM-dd HH:mm:ss\')}"<#if alert.annotations?? && alert.annotations?size gt 0>,</#if>\n      </#if>\n      <#if alert.annotations?? && alert.annotations?size gt 0>\n      "annotations": {\n        <#list alert.annotations?keys as key>\n        "${key}": "${alert.annotations[key]?json_string}"<#if key?has_next>,</#if>\n        </#list>\n      }\n      </#if>\n    }<#if alert?has_next>,</#if>\n    </#list>\n    </#if>\n  ],\n  "commonAnnotations": {\n    <#if commonAnnotations?? && commonAnnotations?size gt 0>\n    <#list commonAnnotations?keys as key>\n    "${key}": "${commonAnnotations[key]?json_string}"<#if key?has_next>,</#if>\n    </#list>\n    </#if>\n  }\n}\n')))}g.isMDXComponent=!0},707:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/alert-notification-template-1-en-dd01f8d7f2f889845ab99ba41f34dbb2.png"}}]);