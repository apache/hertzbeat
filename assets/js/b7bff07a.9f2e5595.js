"use strict";(self.webpackChunkhertzbeat=self.webpackChunkhertzbeat||[]).push([[6124],{15680:(e,t,r)=>{r.d(t,{xA:()=>d,yg:()=>u});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),g=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=g(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=g(r),u=a,c=p["".concat(s,".").concat(u)]||p[u]||m[u]||l;return r?n.createElement(c,o(o({ref:t},d),{},{components:r})):n.createElement(c,o({ref:t},d))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var g=2;g<l;g++)o[g]=r[g];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},59087:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>g});var n=r(58168),a=(r(96540),r(15680));const l={id:"modbus",title:"Monitoring Modbus",sidebar_label:"Modbus Monitor",keywords:["open source monitoring tool","Modbus monitoring"]},o=void 0,i={unversionedId:"help/modbus",id:"help/modbus",title:"Monitoring Modbus",description:"The response of Modbus service and other related indicators are monitored.",source:"@site/docs/help/modbus.md",sourceDirName:"help",slug:"/help/modbus",permalink:"/docs/help/modbus",draft:!1,editUrl:"https://github.com/apache/hertzbeat/edit/master/home/docs/help/modbus.md",tags:[],version:"current",frontMatter:{id:"modbus",title:"Monitoring Modbus",sidebar_label:"Modbus Monitor",keywords:["open source monitoring tool","Modbus monitoring"]},sidebar:"docs",previous:{title:"MQTT Connection",permalink:"/docs/help/mqtt"},next:{title:"Process",permalink:"/docs/help/process"}},s={},g=[{value:"Configuration Parameters",id:"configuration-parameters",level:3},{value:"Collected Metrics",id:"collected-metrics",level:3},{value:"Metric Set: holding-register",id:"metric-set-holding-register",level:4},{value:"Metric Set: coil",id:"metric-set-coil",level:4}],d={toc:g};function m(e){let{components:t,...r}=e;return(0,a.yg)("wrapper",(0,n.A)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"The response of Modbus service and other related indicators are monitored.")),(0,a.yg)("h3",{id:"configuration-parameters"},"Configuration Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Parameter Name"),(0,a.yg)("th",{parentName:"tr",align:null},"Parameter Help Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Host of Modbus Service"),(0,a.yg)("td",{parentName:"tr",align:null},"The IPv4, IPv6, or domain name of the Modbus device to be monitored. Note \u26a0\ufe0f do not include the protocol header (e.g., https://, http://).")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Task Name"),(0,a.yg)("td",{parentName:"tr",align:null},"A name that identifies this monitoring task; the name must be unique.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Port"),(0,a.yg)("td",{parentName:"tr",align:null},"The port used for Modbus network communication.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Slave ID (slaveId)"),(0,a.yg)("td",{parentName:"tr",align:null},"The ID of the slave device in the Modbus network.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Holding Register Address"),(0,a.yg)("td",{parentName:"tr",align:null},"Used for categorizing and managing monitored resources.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Coil Register Address"),(0,a.yg)("td",{parentName:"tr",align:null},"Additional notes and descriptions for this monitoring task; users can add remarks here.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Timeout"),(0,a.yg)("td",{parentName:"tr",align:null},"The allowed time for collecting a response.")))),(0,a.yg)("h3",{id:"collected-metrics"},"Collected Metrics"),(0,a.yg)("h4",{id:"metric-set-holding-register"},"Metric Set: holding-register"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"The number of parameters must match the total number of coil register addresses specified in the parameters."),(0,a.yg)("li",{parentName:"ol"},"Alias format for parameters: holding-register:m or holding-register:m-n")),(0,a.yg)("p",null,"Parameter example:"),(0,a.yg)("p",null,"Coil register addresses:  "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-text"},"1,2[3]\n")),(0,a.yg)("p",null,"Parameter alias names:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"aliasFields:\n  - responseTime\n  - holding-register:0\n  - holding-register:1-0\n  - holding-register:1-1\n  - holding-register:1-2\n")),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Metric Name"),(0,a.yg)("th",{parentName:"tr",align:null},"Metric Unit"),(0,a.yg)("th",{parentName:"tr",align:null},"Metric Help Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Response Time"),(0,a.yg)("td",{parentName:"tr",align:null},"Milliseconds"),(0,a.yg)("td",{parentName:"tr",align:null},"The time required by the Modbus server to respond to a request.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Holding Register Parameter"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Setpoint for analog output")))),(0,a.yg)("h4",{id:"metric-set-coil"},"Metric Set: coil"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"The number of parameters must match the total number of coil register addresses specified in the parameters."),(0,a.yg)("li",{parentName:"ol"},"Alias format for parameters: coil:m or coil:m-n")),(0,a.yg)("p",null,"Parameter example:  "),(0,a.yg)("p",null,"Coil register addresses:  "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-text"},"1,2[3]\n")),(0,a.yg)("p",null,"Parameter alias names:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"aliasFields:\n  - responseTime\n  - coil:0\n  - coil:1-0\n  - coil:1-1\n  - coil:1-2\n")),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Metric Name"),(0,a.yg)("th",{parentName:"tr",align:null},"Metric Unit"),(0,a.yg)("th",{parentName:"tr",align:null},"Metric Help Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Response Time"),(0,a.yg)("td",{parentName:"tr",align:null},"Milliseconds"),(0,a.yg)("td",{parentName:"tr",align:null},"The time required by the Modbus server to respond to a request.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Coil Status"),(0,a.yg)("td",{parentName:"tr",align:null}),(0,a.yg)("td",{parentName:"tr",align:null},"Coil status (0 or 1)")))))}m.isMDXComponent=!0}}]);