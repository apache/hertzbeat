"use strict";(self.webpackChunkhertzbeat=self.webpackChunkhertzbeat||[]).push([[63156],{15680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>m});var n=r(96540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||i;return r?n.createElement(h,a(a({ref:t},u),{},{components:r})):n.createElement(h,a({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},30535:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(58168),o=(r(96540),r(15680));const i={id:"extend-push",title:"Push Style Custom Monitoring",sidebar_label:"Push Style Custom Monitoring"},a=void 0,s={unversionedId:"advanced/extend-push",id:"advanced/extend-push",title:"Push Style Custom Monitoring",description:"Push style curstom monitor is a type of monitor which allow user to configure metrics format and push metrics to hertzbeat with their own service.",source:"@site/docs/advanced/extend-push.md",sourceDirName:"advanced",slug:"/advanced/extend-push",permalink:"/docs/advanced/extend-push",draft:!1,editUrl:"https://github.com/apache/hertzbeat/edit/master/home/docs/advanced/extend-push.md",tags:[],version:"current",frontMatter:{id:"extend-push",title:"Push Style Custom Monitoring",sidebar_label:"Push Style Custom Monitoring"}},l={},c=[{value:"Push style custom monitor collection process",id:"push-style-custom-monitor-collection-process",level:3},{value:"Data parsing method",id:"data-parsing-method",level:3},{value:"Create Monitor Steps",id:"create-monitor-steps",level:3},{value:"Monitor Configuration Example",id:"monitor-configuration-example",level:3}],u={toc:c};function p(e){let{components:t,...i}=e;return(0,o.yg)("wrapper",(0,n.A)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Push style curstom monitor is a type of monitor which allow user to configure metrics format and push metrics to hertzbeat with their own service.\nHere we will introduce how to use this feature.")),(0,o.yg)("h3",{id:"push-style-custom-monitor-collection-process"},"Push style custom monitor collection process"),(0,o.yg)("p",null,"\u3010Peer Server Start Pushing Metrics\u3011 -> \u3010HertzBeat Push Module Stage Metrics\u3011-> \u3010HertzBeat Collect Module collect Metrics Periodically\u3011"),(0,o.yg)("h3",{id:"data-parsing-method"},"Data parsing method"),(0,o.yg)("p",null,"HertzBeat will parsing metrics with the format configured by user while adding new monitor."),(0,o.yg)("h3",{id:"create-monitor-steps"},"Create Monitor Steps"),(0,o.yg)("p",null,"HertzBeat DashBoard -> Service Monitor -> Push Style Monitor -> New Push Style Monitor -> set Push Module Host (hertzbeat server ip, usually 127.0.0.1/localhost) -> set Push Module Port (hertzbeat server port, usually 1157) -> configure metrics field (unit: string, type: 0 number / 1 string) -> end"),(0,o.yg)("hr",null),(0,o.yg)("h3",{id:"monitor-configuration-example"},"Monitor Configuration Example"),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"HertzBeat",src:r(40789).A,width:"1310",height:"622"})))}p.isMDXComponent=!0},40789:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/extend-push-example-1-ed2ca911aa1f2006d018bff471c83440.png"}}]);