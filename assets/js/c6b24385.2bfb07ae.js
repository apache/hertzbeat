"use strict";(self.webpackChunkhertzbeat=self.webpackChunkhertzbeat||[]).push([[50802],{15680:(e,t,r)=>{r.d(t,{xA:()=>m,yg:()=>d});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),g=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=g(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),s=g(r),d=a,u=s["".concat(p,".").concat(d)]||s[d]||c[d]||i;return r?n.createElement(u,l(l({ref:t},m),{},{components:r})):n.createElement(u,l({ref:t},m))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=s;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var g=2;g<i;g++)l[g]=r[g];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},79398:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>g});var n=r(58168),a=(r(96540),r(15680));const i={id:"airflow",title:"Monitoring Apache Airflow Monitoring",sidebar_label:"Apache Airflow",keywords:["open source monitoring system","open source database monitoring","Apache Airflow monitoring"]},l=void 0,o={unversionedId:"help/airflow",id:"version-v1.6.x/help/airflow",title:"Monitoring Apache Airflow Monitoring",description:"Collect and monitor general performance metrics for the Apache Airflow.",source:"@site/versioned_docs/version-v1.6.x/help/airflow.md",sourceDirName:"help",slug:"/help/airflow",permalink:"/docs/v1.6.x/help/airflow",draft:!1,editUrl:"https://github.com/apache/hertzbeat/edit/master/home/versioned_docs/version-v1.6.x/help/airflow.md",tags:[],version:"v1.6.x",frontMatter:{id:"airflow",title:"Monitoring Apache Airflow Monitoring",sidebar_label:"Apache Airflow",keywords:["open source monitoring system","open source database monitoring","Apache Airflow monitoring"]},sidebar:"docs",previous:{title:"Zookeeper Monitor",permalink:"/docs/v1.6.x/help/zookeeper"},next:{title:"HbaseMaster Monitoring",permalink:"/docs/v1.6.x/help/hbase_master"}},p={},g=[{value:"Configuration Parameters",id:"configuration-parameters",level:3},{value:"Collection Metrics",id:"collection-metrics",level:3},{value:"Metric Set: airflow_health",id:"metric-set-airflow_health",level:4},{value:"Metric Set: airflow_version",id:"metric-set-airflow_version",level:4}],m={toc:g};function c(e){let{components:t,...r}=e;return(0,a.yg)("wrapper",(0,n.A)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"Collect and monitor general performance metrics for the Apache Airflow.")),(0,a.yg)("h3",{id:"configuration-parameters"},"Configuration Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Parameter Name"),(0,a.yg)("th",{parentName:"tr",align:null},"Parameter Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Monitor Host"),(0,a.yg)("td",{parentName:"tr",align:null},"IP address, IPV4, IPV6, or domain name of the host being monitored. Note \u26a0\ufe0f without protocol prefix (e.g., https://, http://).")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Task Name"),(0,a.yg)("td",{parentName:"tr",align:null},"Name identifying this monitoring, ensuring uniqueness.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Port"),(0,a.yg)("td",{parentName:"tr",align:null},"Port number of the database exposed to the outside, default is 8080.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Query Timeout"),(0,a.yg)("td",{parentName:"tr",align:null},"Set timeout for unresponsive connections, in milliseconds (ms), default is 3000ms.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"HTTPS"),(0,a.yg)("td",{parentName:"tr",align:null},"Whether to enable HTTPS.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Collection Interval"),(0,a.yg)("td",{parentName:"tr",align:null},"Interval for periodic data collection during monitoring, in seconds, with a minimum interval of 30 seconds.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Whether to detect"),(0,a.yg)("td",{parentName:"tr",align:null},"Whether to perform a probe check for monitoring availability before adding a new monitor; operations proceed if successful.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Description"),(0,a.yg)("td",{parentName:"tr",align:null},"Additional information to identify and describe this monitoring, where users can add remarks.")))),(0,a.yg)("h3",{id:"collection-metrics"},"Collection Metrics"),(0,a.yg)("h4",{id:"metric-set-airflow_health"},"Metric Set: airflow_health"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Metric Name"),(0,a.yg)("th",{parentName:"tr",align:null},"Metric Unit"),(0,a.yg)("th",{parentName:"tr",align:null},"Metric Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"metadatabase"),(0,a.yg)("td",{parentName:"tr",align:null},"N/A"),(0,a.yg)("td",{parentName:"tr",align:null},"Response time")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"scheduler"),(0,a.yg)("td",{parentName:"tr",align:null},"N/A"),(0,a.yg)("td",{parentName:"tr",align:null},"scheduler health")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"triggerer"),(0,a.yg)("td",{parentName:"tr",align:null},"N/A"),(0,a.yg)("td",{parentName:"tr",align:null},"triggerer health")))),(0,a.yg)("h4",{id:"metric-set-airflow_version"},"Metric Set: airflow_version"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Metric Name"),(0,a.yg)("th",{parentName:"tr",align:null},"Metric Unit"),(0,a.yg)("th",{parentName:"tr",align:null},"Metric Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"value"),(0,a.yg)("td",{parentName:"tr",align:null},"N/A"),(0,a.yg)("td",{parentName:"tr",align:null},"Airflow version")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"git_version"),(0,a.yg)("td",{parentName:"tr",align:null},"N/A"),(0,a.yg)("td",{parentName:"tr",align:null},"Airflow git version")))))}c.isMDXComponent=!0}}]);