"use strict";(self.webpackChunkhertzbeat=self.webpackChunkhertzbeat||[]).push([[20321],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>p});var a=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),g=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=g(e.components);return a.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=g(t),p=i,y=m["".concat(l,".").concat(p)]||m[p]||c[p]||r;return t?a.createElement(y,o(o({ref:n},u),{},{components:t})):a.createElement(y,o({ref:n},u))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var g=2;g<r;g++)o[g]=t[g];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},69266:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>g});var a=t(58168),i=(t(96540),t(15680));const r={id:"ai_agent_chat",title:"AI Agent Chat User Guide",sidebar_label:"AI Agent Chat",keywords:["AI","Chat","Agent","Monitoring","AI Agent","OpenAI"]},o=void 0,s={unversionedId:"help/ai_agent_chat",id:"help/ai_agent_chat",title:"AI Agent Chat User Guide",description:"HertzBeat AI Agent Chat is an intelligent monitoring AI Agent that helps you manage monitors, configure alerts, and optimize your infrastructure monitoring through natural language conversation.",source:"@site/docs/help/ai_agent_chat.md",sourceDirName:"help",slug:"/help/ai_agent_chat",permalink:"/docs/help/ai_agent_chat",draft:!1,editUrl:"https://github.com/apache/hertzbeat/edit/master/home/docs/help/ai_agent_chat.md",tags:[],version:"current",frontMatter:{id:"ai_agent_chat",title:"AI Agent Chat User Guide",sidebar_label:"AI Agent Chat",keywords:["AI","Chat","Agent","Monitoring","AI Agent","OpenAI"]},sidebar:"docs",previous:{title:"Collector",permalink:"/docs/help/collector"},next:{title:"AI QuickStart",permalink:"/docs/help/ai_config"}},l={},g=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Configuration",id:"configuration",level:2},{value:"OpenAI API Key Setup",id:"openai-api-key-setup",level:3},{value:"Method 1: Database Configuration via UI (Recommended)",id:"method-1-database-configuration-via-ui-recommended",level:4},{value:"Method 2: YAML Configuration",id:"method-2-yaml-configuration",level:4},{value:"Configuration Priority",id:"configuration-priority",level:3},{value:"Using the AI Agent Chat",id:"using-the-ai-agent-chat",level:2},{value:"Accessing the Chat Interface",id:"accessing-the-chat-interface",level:3},{value:"Sample Conversations",id:"sample-conversations",level:3},{value:"Adding a New Monitor",id:"adding-a-new-monitor",level:4},{value:"Listing Existing Monitors",id:"listing-existing-monitors",level:4},{value:"Getting Monitor Type Information",id:"getting-monitor-type-information",level:4},{value:"Alert Management",id:"alert-management",level:4},{value:"Metrics Analysis",id:"metrics-analysis",level:4},{value:"Alert Rule Configuration",id:"alert-rule-configuration",level:4},{value:"Best Practices",id:"best-practices",level:2},{value:"Effective Chat Usage",id:"effective-chat-usage",level:3},{value:"Monitor Management",id:"monitor-management",level:3},{value:"Security Considerations",id:"security-considerations",level:3},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Bulk Operations",id:"bulk-operations",level:3},{value:"Limitations",id:"limitations",level:2},{value:"Support",id:"support",level:2}],u={toc:g};function c(e){let{components:n,...t}=e;return(0,i.yg)("wrapper",(0,a.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"HertzBeat AI Agent Chat is an intelligent monitoring AI Agent that helps you manage monitors, configure alerts, and optimize your infrastructure monitoring through natural language conversation.")),(0,i.yg)("h2",{id:"overview"},"Overview"),(0,i.yg)("p",null,"The AI Agent Chat feature provides an interactive chat interface where you can:"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Monitor Management:")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"\ud83d\udd0d Query and filter existing monitors by status, type, host, and labels"),(0,i.yg)("li",{parentName:"ul"},"\u2795 Add new monitors for websites, APIs, databases, and services"),(0,i.yg)("li",{parentName:"ul"},"\ud83d\udcca Get detailed information about available monitor types and their parameters"),(0,i.yg)("li",{parentName:"ul"},"\u26a1 Check monitor status and troubleshoot monitoring issues")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Alert Management:")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"\ud83d\udea8 Query active alerts with comprehensive filtering (type, status, search)"),(0,i.yg)("li",{parentName:"ul"},"\ud83d\udcc8 Get alert summary statistics and distribution"),(0,i.yg)("li",{parentName:"ul"},"\ud83d\udd14 View both single and grouped alerts"),(0,i.yg)("li",{parentName:"ul"},"\ud83d\udccb Analyze alert patterns and trends")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Metrics Analysis:")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"\ud83d\udcca Retrieve real-time metrics data for any monitor"),(0,i.yg)("li",{parentName:"ul"},"\ud83d\udcc8 Access historical metrics with customizable time ranges"),(0,i.yg)("li",{parentName:"ul"},"\ud83d\udcbe Check warehouse storage system status"),(0,i.yg)("li",{parentName:"ul"},"\ud83d\udd0d Query specific metric fields and labels")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Alert Rule Management:")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"\u2699\ufe0f Configure alert rules and thresholds"),(0,i.yg)("li",{parentName:"ul"},"\ud83d\udcdd Manage alert definitions for different monitor types"),(0,i.yg)("li",{parentName:"ul"},"\ud83c\udfaf Set up custom alerting criteria")),(0,i.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.yg)("p",null,"Before using the AI Agent Chat, ensure:"),(0,i.yg)("p",null,"1 ",(0,i.yg)("strong",{parentName:"p"},"OpenAI Configuration"),": Valid OpenAI API key must be configured. Optionally, you can change the model in ",(0,i.yg)("inlineCode",{parentName:"p"},"application.yml")," under ",(0,i.yg)("inlineCode",{parentName:"p"},"spring.ai.openai.chat.options.model")," (default is ",(0,i.yg)("inlineCode",{parentName:"p"},"gpt-4.1-nano"),").\n2 ",(0,i.yg)("strong",{parentName:"p"},"Database Connection"),": HertzBeat database must be accessible for monitor operations"),(0,i.yg)("h2",{id:"configuration"},"Configuration"),(0,i.yg)("h3",{id:"openai-api-key-setup"},"OpenAI API Key Setup"),(0,i.yg)("p",null,"The AI Agent Chat uses OpenAI's GPT models. You need to configure an OpenAI API key in one of two ways:"),(0,i.yg)("h4",{id:"method-1-database-configuration-via-ui-recommended"},"Method 1: Database Configuration via UI (Recommended)"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Navigate to the AI Agent Chat interface"),(0,i.yg)("li",{parentName:"ol"},"If no API key is configured, you'll see a configuration dialog"),(0,i.yg)("li",{parentName:"ol"},"Enter your OpenAI API key"),(0,i.yg)("li",{parentName:"ol"},"Click ",(0,i.yg)("strong",{parentName:"li"},"Save Configuration"))),(0,i.yg)("h4",{id:"method-2-yaml-configuration"},"Method 2: YAML Configuration"),(0,i.yg)("p",null,"Add to your ",(0,i.yg)("inlineCode",{parentName:"p"},"application.yml"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"spring:\n  ai:\n    openai:\n      api-key: sk-your-openai-api-key-here\n")),(0,i.yg)("h3",{id:"configuration-priority"},"Configuration Priority"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Database configuration")," takes priority over YAML configuration"),(0,i.yg)("li",{parentName:"ul"},"Configuration changes are applied immediately without restart"),(0,i.yg)("li",{parentName:"ul"},"Invalid API keys are automatically validated before saving")),(0,i.yg)("h2",{id:"using-the-ai-agent-chat"},"Using the AI Agent Chat"),(0,i.yg)("h3",{id:"accessing-the-chat-interface"},"Accessing the Chat Interface"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Navigate to the ",(0,i.yg)("strong",{parentName:"li"},"AI Agent Chat")," section in HertzBeat web interface"),(0,i.yg)("li",{parentName:"ol"},"You'll see the HertzBeat Monitoring AI Agent welcome screen"),(0,i.yg)("li",{parentName:"ol"},"Start typing your questions in the chat input field")),(0,i.yg)("h3",{id:"sample-conversations"},"Sample Conversations"),(0,i.yg)("h4",{id:"adding-a-new-monitor"},"Adding a New Monitor"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-text"},"You: Add a new HTTP monitor for my website https://example.com\nAI Agent: I'll help you add an HTTP monitor for https://example.com. \nLet me create that monitor with the following configuration:\n- Name: example.com Website Monitor\n- Type: HTTP\n- Host: example.com\n- Port: 443 (HTTPS)\n- Path: /\n- Interval: 60 seconds\n\nMonitor created successfully with ID: 12345\n")),(0,i.yg)("h4",{id:"listing-existing-monitors"},"Listing Existing Monitors"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-text"},"You: Show me all my current monitors\nAI Agent: Here are your current monitors:\n\n1. **Linux Server** (ID: 1001)\n   - Status: \u2705 Online\n   - Host: 192.168.1.100\n   - Last Check: 2 minutes ago\n\n2. **MySQL Database** (ID: 1002) \n   - Status: \u26a0\ufe0f Warning\n   - Host: db.example.com\n   - Last Check: 30 seconds ago\n\n3. **Website Monitor** (ID: 1003)\n   - Status: \u2705 Online\n   - Host: https://example.com\n   - Last Check: 1 minute ago\n\nWould you like details on any specific monitor?\n")),(0,i.yg)("h4",{id:"getting-monitor-type-information"},"Getting Monitor Type Information"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-text"},"You: What parameters do I need to monitor a PostgreSQL database?\nAI Agent: To monitor a PostgreSQL database, you'll need these parameters:\n\n**Required Parameters:**\n- **Host**: Database server IP/hostname\n- **Port**: PostgreSQL port (default: 5432)\n- **Database**: Database name to connect to\n- **Username**: Database username\n- **Password**: Database password\n\n**Optional Parameters:**\n- **Timeout**: Connection timeout (default: 6000ms)\n- **Query Timeout**: SQL query timeout (default: 3000ms)\n- **SSL**: Enable SSL connection (default: false)\n\nWould you like me to help you add a PostgreSQL monitor?\n")),(0,i.yg)("h4",{id:"alert-management"},"Alert Management"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-text"},"You: Show me all critical alerts from the last 24 hours\nAI Agent: Here are the critical alerts from the last 24 hours:\n\n\ud83d\udea8 **Active Alerts (3 firing)**\n1. **High CPU Usage** - Linux Server (ID: 1001)\n   - Status: \ud83d\udd25 Firing\n   - Triggered: 2 hours ago\n   - Severity: Critical\n   - Message: CPU usage 95% > threshold 90%\n\n2. **Database Connection Failed** - MySQL Database (ID: 1002)\n   - Status: \ud83d\udd25 Firing  \n   - Triggered: 45 minutes ago\n   - Severity: Critical\n   - Message: Connection timeout after 10 seconds\n\n3. **Website Response Time** - Website Monitor (ID: 1003)\n   - Status: \u26a0\ufe0f Warning\n   - Triggered: 15 minutes ago\n   - Severity: Warning\n   - Message: Response time 5.2s > threshold 3s\n\n**Alert Summary:**\n- Total alerts: 12\n- Firing: 3 (2 critical, 1 warning)\n- Resolved: 9\n\nWould you like me to help you investigate any specific alert?\n")),(0,i.yg)("h4",{id:"metrics-analysis"},"Metrics Analysis"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-text"},"You: Show me the CPU usage for my Linux server over the last 6 hours\nAI Agent: Here's the CPU usage data for your Linux server (Monitor ID: 1001) over the last 6 hours:\n\n\ud83d\udcca **CPU Usage Metrics - Last 6 Hours**\n")),(0,i.yg)("p",null,"Time          | Usage (%) | Load Avg | Processes\n14:00-15:00   | 45.2%     | 1.2      | 156\n15:00-16:00   | 67.8%     | 2.1      | 178\n16:00-17:00   | 89.4%     | 3.8      | 195\n17:00-18:00   | 92.1%     | 4.2      | 203\n18:00-19:00   | 94.7%     | 4.8      | 210\n19:00-20:00   | 88.3%     | 3.5      | 188"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-text"},"\n**Analysis:**\n- Peak usage: 94.7% at 19:00\n- Average usage: 79.6%\n- Trend: High usage sustained for 3+ hours\n- Current status: Decreasing (88.3%)\n\n**Real-time metrics:**\n- Current CPU: 76.2%\n- Memory usage: 82.1%\n- Disk I/O: Normal\n\nWould you like me to check historical data for comparison or investigate the high usage cause?\n")),(0,i.yg)("h4",{id:"alert-rule-configuration"},"Alert Rule Configuration"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-text"},'You: Set up an alert rule for when my website response time exceeds 5 seconds\nAI Agent: I\'ll help you create an alert rule for website response time monitoring.\n\n**Alert Rule Configuration:**\n- **Monitor Type**: HTTP/Website\n- **Metric**: Response Time\n- **Condition**: Greater than 5 seconds\n- **Severity**: Warning\n- **Evaluation**: Check every 60 seconds\n- **Notification**: Email + Dashboard\n\n**Proposed Rule:**\n```yaml\nname: "Website Response Time Alert"\ncondition: "response_time > 5000ms"\nseverity: "warning"\ndescription: "Alert when website response time exceeds 5 seconds"\nevaluation_interval: 60s\nfor: 2m  # Alert after condition persists for 2 minutes\n')),(0,i.yg)("p",null,"This rule will:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Monitor response time every minute"),(0,i.yg)("li",{parentName:"ol"},"Trigger alert if response time > 5s for 2+ minutes"),(0,i.yg)("li",{parentName:"ol"},"Send notifications via configured channels"),(0,i.yg)("li",{parentName:"ol"},"Show in dashboard with warning status")),(0,i.yg)("p",null,"Would you like me to apply this configuration or modify any settings?"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-text"},'\n### Chat Features\n\n#### Message History\n\n- All conversations are automatically saved\n- Access previous conversations from the sidebar\n- Search through conversation history\n- Export conversation logs\n\n#### Real-time Responses\n\n- Streaming responses for immediate feedback\n- Typing indicators show when the assistant is processing\n- Cancel ongoing requests if needed\n\n#### Conversation Management\n\n- Create new conversations for different topics\n- Rename conversations for better organization\n- Delete old conversations to keep things clean\nNote: Conversations are not saved in the database\n\n## Troubleshooting\n\n### Common Issues\n\n#### Chat Interface Not Loading\n\n**Symptoms**: Chat interface shows loading spinner indefinitely\n**Solutions**:\n\n1. Check browser console for JavaScript errors\n2. Ensure network connectivity to HertzBeat server\n\n#### "Service Unavailable" Message\n\n**Symptoms**: Chat shows "HertzBeat AI monitoring service unavailable"\n**Solutions**:\n1.Verify OpenAI API key configuration\n2.Check application logs for errors\n3.Ensure database connectivity\n\n#### Invalid API Key Error\n\n**Symptoms**: Configuration dialog shows "Invalid API key" error\n**Solutions**:\n\n1. Verify your OpenAI API key starts with `sk-`\n2. Check API key has sufficient credits/quota\n3. Test API key directly with OpenAI API\n4. Ensure no extra spaces in the API key\n\n#### Monitor Creation Failures  \n\n**Symptoms**: AI suggests monitor configuration but creation fails\n**Solutions**:\n\n1. Verify you have permissions to create monitors\n2. Check if monitor with same name already exists\n3. Ensure target host/service is accessible\n4. Review monitor parameter validation errors\n\n### Debug Mode\n\nEnable debug logging by setting log level to DEBUG for:\n\n```yaml\nlogging:\n  level:\n    org.apache.hertzbeat.ai.agent: DEBUG\n')),(0,i.yg)("h2",{id:"best-practices"},"Best Practices"),(0,i.yg)("h3",{id:"effective-chat-usage"},"Effective Chat Usage"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("strong",{parentName:"li"},"Be Specific"),': "Add HTTP monitor for api.example.com port 8080" vs "add a monitor"'),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("strong",{parentName:"li"},"Provide Context"),": Mention if you want production vs test monitors"),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("strong",{parentName:"li"},"Ask Follow-ups"),": Request configuration details if needed"),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("strong",{parentName:"li"},"Use Natural Language"),": The AI understands conversational requests")),(0,i.yg)("h3",{id:"monitor-management"},"Monitor Management"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("strong",{parentName:"li"},"Naming Convention"),": Use descriptive monitor names"),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("strong",{parentName:"li"},"Documentation"),": Ask the AI to document complex configurations")),(0,i.yg)("h3",{id:"security-considerations"},"Security Considerations"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("strong",{parentName:"li"},"API Key Security"),": Store OpenAI API keys securely"),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("strong",{parentName:"li"},"Access Control"),": Limit AI chat access to authorized users"),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("strong",{parentName:"li"},"Data Privacy"),": Be mindful of sensitive information in chat logs"),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("strong",{parentName:"li"},"Network Security"),": Ensure secure connections to OpenAI API")),(0,i.yg)("h2",{id:"advanced-features"},"Advanced Features"),(0,i.yg)("h3",{id:"bulk-operations"},"Bulk Operations"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-text"},"You: Add HTTP monitors for all services in my staging environment:\n- api-staging.example.com:8080\n- web-staging.example.com:80  \n- admin-staging.example.com:3000\n")),(0,i.yg)("h2",{id:"limitations"},"Limitations"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Requires active internet connection for OpenAI API"),(0,i.yg)("li",{parentName:"ul"},"OpenAI API usage incurs costs based on token consumption"),(0,i.yg)("li",{parentName:"ul"},"Complex multi-step operations may require multiple interactions"),(0,i.yg)("li",{parentName:"ul"},"Some advanced configurations may need manual setup"),(0,i.yg)("li",{parentName:"ul"},"Rate limiting may apply based on OpenAI plan")),(0,i.yg)("h2",{id:"support"},"Support"),(0,i.yg)("p",null,"For issues with AI Agent Chat:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Check this documentation first"),(0,i.yg)("li",{parentName:"ol"},"Review application logs for errors"),(0,i.yg)("li",{parentName:"ol"},"Test OpenAI API connectivity independently  "),(0,i.yg)("li",{parentName:"ol"},"Contact HertzBeat support with specific error messages")),(0,i.yg)("hr",null))}c.isMDXComponent=!0}}]);