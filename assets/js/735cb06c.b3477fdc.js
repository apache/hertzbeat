"use strict";(self.webpackChunkhertzbeat=self.webpackChunkhertzbeat||[]).push([[94610],{15680:(e,t,n)=>{n.d(t,{xA:()=>m,yg:()=>g});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=p(n),g=r,d=u["".concat(s,".").concat(g)]||u[g]||c[g]||o;return n?a.createElement(d,i(i({ref:t},m),{},{components:n})):a.createElement(d,i({ref:t},m))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},88529:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(58168),r=(n(96540),n(15680));const o={id:"contribution",title:"Contributor Guide",sidebar_position:0},i=void 0,l={unversionedId:"community/contribution",id:"community/contribution",title:"Contributor Guide",description:"\x3c!--",source:"@site/docs/community/contribution.md",sourceDirName:"community",slug:"/community/contribution",permalink:"/docs/community/contribution",draft:!1,editUrl:"https://github.com/apache/hertzbeat/edit/master/home/docs/community/contribution.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"contribution",title:"Contributor Guide",sidebar_position:0},sidebar:"docs",previous:{title:"Development",permalink:"/docs/community/development"},next:{title:"Mailing Lists",permalink:"/docs/community/mailing_lists"}},s={},p=[{value:"Kinds of Contributions",id:"kinds-of-contributions",level:3},{value:"Getting HertzBeat up and running",id:"getting-hertzbeat-up-and-running",level:3},{value:"Backend start",id:"backend-start",level:4},{value:"Frontend start",id:"frontend-start",level:4},{value:"Find tasks",id:"find-tasks",level:3},{value:"Submit Pull Request",id:"submit-pull-request",level:3},{value:"Wait for the code to be merged",id:"wait-for-the-code-to-be-merged",level:3},{value:"After the code is merged",id:"after-the-code-is-merged",level:3},{value:"Get Contributor Certificate",id:"get-contributor-certificate",level:3},{value:"HertzBeat Improvement Proposal (HIP)",id:"hertzbeat-improvement-proposal-hip",level:3},{value:"How to become a Committer?",id:"how-to-become-a-committer",level:3},{value:"Join Discussion",id:"join-discussion",level:3}],m={toc:p};function c(e){let{components:t,...o}=e;return(0,r.yg)("wrapper",(0,a.A)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"We are committed to maintaining a happy community that helps each other, welcome every contributor to join us!")),(0,r.yg)("h3",{id:"kinds-of-contributions"},"Kinds of Contributions"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"In the HertzBeat community, there are many ways to contribute:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\ud83d\udcbb",(0,r.yg)("strong",{parentName:"p"},"Code"),": Can help the community complete some tasks, write new features or fix some bugs;")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\u26a0\ufe0f",(0,r.yg)("strong",{parentName:"p"},"Test"),": Can come to participate in the writing of test code, including unit testing, integration testing, e2e testing;")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\ud83d\udcd6",(0,r.yg)("strong",{parentName:"p"},"Docs"),": Can write or Documentation improved to help users better understand and use HertzBeat;")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\ud83d\udcdd",(0,r.yg)("strong",{parentName:"p"},"Blog"),": You can write articles about HertzBeat to help the community better promote;")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\ud83e\udd14",(0,r.yg)("strong",{parentName:"p"},"Discussion"),": You can participate in the discussion of new features of HertzBeat and integrate your ideas with HertzBeat;")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\ud83d\udca1",(0,r.yg)("strong",{parentName:"p"},"Preach"),": Can help publicize or promote the HertzBeat community, speak in meetup or summit;")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"\ud83d\udcac",(0,r.yg)("strong",{parentName:"p"},"Suggestion"),": You can also make some suggestions to the project or community to promote the healthy development of the community;"))),(0,r.yg)("p",null,"More see ",(0,r.yg)("a",{parentName:"p",href:"https://allcontributors.org/docs/en/emoji-key"},"Contribution Types")),(0,r.yg)("p",null,"Even small corrections to typos are very welcome :)"),(0,r.yg)("h3",{id:"getting-hertzbeat-up-and-running"},"Getting HertzBeat up and running"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"To get HertzBeat code running on your development tools, and able to debug with breakpoints.\nThis is a front-end and back-end separation project. To start the local code, the back-end manager and the front-end web-app must be started separately.")),(0,r.yg)("h4",{id:"backend-start"},"Backend start"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Requires ",(0,r.yg)("inlineCode",{parentName:"li"},"maven3+"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"java17")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"lombok")," environments"),(0,r.yg)("li",{parentName:"ol"},"(Optional) Modify the configuration file: ",(0,r.yg)("inlineCode",{parentName:"li"},"manager/src/main/resources/application.yml")),(0,r.yg)("li",{parentName:"ol"},"Execute under the project root directory: ",(0,r.yg)("inlineCode",{parentName:"li"},"mvn clean install -DskipTests")),(0,r.yg)("li",{parentName:"ol"},"Add VM Options: ",(0,r.yg)("inlineCode",{parentName:"li"},"--add-opens=java.base/java.nio=org.apache.arrow.memory.core,ALL-UNNAMED")),(0,r.yg)("li",{parentName:"ol"},"Start ",(0,r.yg)("inlineCode",{parentName:"li"},"springboot manager")," service: ",(0,r.yg)("inlineCode",{parentName:"li"},"manager/src/main/java/org/apache/hertzbeat/hertzbeat-manager/Manager.java"))),(0,r.yg)("h4",{id:"frontend-start"},"Frontend start"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Need ",(0,r.yg)("inlineCode",{parentName:"p"},"Node Yarn")," Environment, Make sure ",(0,r.yg)("inlineCode",{parentName:"p"},"Node.js >= 18"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Cd to the ",(0,r.yg)("inlineCode",{parentName:"p"},"web-app")," directory: ",(0,r.yg)("inlineCode",{parentName:"p"},"cd web-app"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Install yarn if not existed ",(0,r.yg)("inlineCode",{parentName:"p"},"npm install -g yarn"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Install Dependencies: ",(0,r.yg)("inlineCode",{parentName:"p"},"yarn install")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"yarn install --registry=https://registry.npmmirror.com")," in ",(0,r.yg)("inlineCode",{parentName:"p"},"web-app"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"After the local backend is started, start the local frontend in the web-app directory: ",(0,r.yg)("inlineCode",{parentName:"p"},"yarn start"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Browser access to localhost:4200 to start, default account/password is ",(0,r.yg)("em",{parentName:"p"},"admin/hertzbeat")))),(0,r.yg)("h3",{id:"find-tasks"},"Find tasks"),(0,r.yg)("p",null,"Find the issue you are interested in! On our GitHub repo issue list, we often publish some issues with the label good first issue or status: volunteer wanted.\nThese issues welcome the help of contributors. Among them, good first issues tend to have low thresholds and are suitable for novices."),(0,r.yg)("p",null,"Of course, if you have a good idea, you can also propose it directly on GitHub Discussion or contact with community."),(0,r.yg)("h3",{id:"submit-pull-request"},"Submit Pull Request"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"First you need to fork your target ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/apache/hertzbeat"},"hertzbeat repository"),".")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Then download the code locally with git command:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"git clone git@github.com:${YOUR_USERNAME}/hertzbeat.git #Recommended  \n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"After the download is complete, please refer to the getting started guide or README file of the target repository to initialize the project.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Then, you can refer to the following command to submit the code:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"git checkout -b a-feature-branch #Recommended  \n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Submit the coed as a commit, the commit message format specification required: ","[module name or type name]","feature or bugfix or doc: custom message."),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"git add <modified file/path> \ngit commit -m '[docs]feature: necessary instructions' #Recommended \n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Push to the remote repository"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"git push origin a-feature-branch   \n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Then you can initiate a new PR (Pull Request) on GitHub."),(0,r.yg)("p",{parentName:"li"},"Please note that the title of the PR needs to conform to our spec, and write the necessary description in the PR to facilitate code review by Committers and other contributors."))),(0,r.yg)("h3",{id:"wait-for-the-code-to-be-merged"},"Wait for the code to be merged"),(0,r.yg)("p",null,"After submitting the PR, the Committee or the community's friends will review the code you submitted (Code Review), and will propose some modification suggestions or conduct some discussions. Please pay attention to your PR in time."),(0,r.yg)("p",null,"If subsequent changes are required, there is no need to initiate a new PR. After submitting a commit on the original branch and pushing it to the remote repository, the PR will be automatically updated."),(0,r.yg)("p",null,"In addition, our project has a relatively standardized and strict CI inspection process. After submitting PR, CI will be triggered. Please pay attention to whether it passes the CI inspection."),(0,r.yg)("p",null,"Finally, the Committers can merge the PR into the master branch."),(0,r.yg)("h3",{id:"after-the-code-is-merged"},"After the code is merged"),(0,r.yg)("p",null,"After the code has been merged, you can delete the development branch on both the local and remote repositories:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"git branch -d a-dev-branch\ngit push origin --delete a-dev-branch\n")),(0,r.yg)("p",null,"On the master/main branch, you can do the following to sync the upstream repository:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"git remote add upstream https://github.com/apache/hertzbeat.git #Bind the remote warehouse, if it has been executed, it does not need to be executed again\ngit checkout master \ngit pull upstream master\n")),(0,r.yg)("h3",{id:"get-contributor-certificate"},"Get Contributor Certificate"),(0,r.yg)("p",null,"After your pr is merged, you can send an email  ",(0,r.yg)("inlineCode",{parentName:"p"},"dev@hertzbeat.apache.org")," to request your Apache HertzBeat\u2122 contributor electronic certificate."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"Title: [Contributor] Request for a Contributor Certificate: <Your Full Name>\nBody:\nHello,\nI would like to request a Contributor Certificate for my contributions to the Apache HertzBeat\u2122 project.\n\n- Full Name: <Your Full Name> # The Full Name will be printed on the certificate, any name you want.\n- GitHub Username: <Your GitHub Username>\n- Pull Request Links: <List the URLs of the pull requests you have submitted>\n- Email Address: <Your Email Address>\n\nBest regards,\n<Your Name>\n")),(0,r.yg)("p",null,"You will receive a reply with an electronic certificate within a few working days, and your name will also appear in the list of contributors.\nAttention contributor certificates are electronic, and certificates for you to become a ",(0,r.yg)("inlineCode",{parentName:"p"},"Committer")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"PMC")," are physical."),(0,r.yg)("p",null,"Certificate Sample:"),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"cert",src:n(47694).A,width:"2000",height:"1414"})),(0,r.yg)("h3",{id:"hertzbeat-improvement-proposal-hip"},"HertzBeat Improvement Proposal (HIP)"),(0,r.yg)("p",null,"If you have major new features(e.g., support metrics push gateway, support logs monitoring), you need to write a design document known as a HertzBeat Improvement Proposal (HIP). Before starting to write a HIP, make sure you follow the process ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/apache/hertzbeat/tree/master/hip"},"guide"),"."),(0,r.yg)("h3",{id:"how-to-become-a-committer"},"How to become a Committer?"),(0,r.yg)("p",null,"With the above steps, you are a contributor to HertzBeat. Repeat the previous steps to stay active in the community, keep at, you can become a Committer!"),(0,r.yg)("h3",{id:"join-discussion"},"Join Discussion"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"contact"},"Discussion")))}c.isMDXComponent=!0},47694:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/hertzbeat-cert-f46dbee7bf41166499e34cb52c86f490.png"}}]);