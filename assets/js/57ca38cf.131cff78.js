"use strict";(self.webpackChunkhertzbeat=self.webpackChunkhertzbeat||[]).push([[81517],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>c});var i=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=i.createContext({}),m=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=m(e.components);return i.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=m(t),c=a,h=u["".concat(l,".").concat(c)]||u[c]||d[c]||r;return t?i.createElement(h,o(o({ref:n},p),{},{components:t})):i.createElement(h,o({ref:n},p))}));function c(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var m=2;m<r;m++)o[m]=t[m];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},87432:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>m});var i=t(58168),a=(t(96540),t(15680));const r={id:"extend-http-xmlpath",title:"HTTP Protocol XmlPath Parsing Method",sidebar_label:"XmlPath Parsing Method"},o=void 0,s={unversionedId:"advanced/extend-http-xmlpath",id:"advanced/extend-http-xmlpath",title:"HTTP Protocol XmlPath Parsing Method",description:"After calling the HTTP API to obtain the response data, use the XmlPath script parsing method to parse the response data.",source:"@site/docs/advanced/extend-http-xmlpath.md",sourceDirName:"advanced",slug:"/advanced/extend-http-xmlpath",permalink:"/docs/advanced/extend-http-xmlpath",draft:!1,editUrl:"https://github.com/apache/hertzbeat/edit/master/home/docs/advanced/extend-http-xmlpath.md",tags:[],version:"current",frontMatter:{id:"extend-http-xmlpath",title:"HTTP Protocol XmlPath Parsing Method",sidebar_label:"XmlPath Parsing Method"},sidebar:"docs",previous:{title:"JsonPath Parsing Method",permalink:"/docs/advanced/extend-http-jsonpath"},next:{title:"Tutorial 1 Adapting an HTTP protocol monitoring",permalink:"/docs/advanced/extend-http-example-hertzbeat"}},l={},m=[{value:"XmlPath Parsing Logic",id:"xmlpath-parsing-logic",level:3},{value:"Example",id:"example",level:3}],p={toc:m};function d(e){let{components:n,...t}=e;return(0,a.yg)("wrapper",(0,i.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"After calling the HTTP API to obtain the response data, use the XmlPath script parsing method to parse the response data.")),(0,a.yg)("p",null,"Note\u26a0\ufe0f The response data must be in XML format."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Use XPath scripts to parse the response data into data that conforms to the data structure rules specified by HertzBeat.")),(0,a.yg)("h3",{id:"xmlpath-parsing-logic"},"XmlPath Parsing Logic"),(0,a.yg)("p",null,"The XmlPath parsing method in HertzBeat uses a two-step XPath process:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Main XPath Expression (",(0,a.yg)("inlineCode",{parentName:"strong"},"parseScript"),")"),": This XPath expression is defined in the ",(0,a.yg)("inlineCode",{parentName:"li"},"http")," configuration section under ",(0,a.yg)("inlineCode",{parentName:"li"},"parseScript"),". It is used to select one or more main XML nodes from the response. Each selected node will correspond to one row of metric data in HertzBeat."),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"Relative Field XPath Expressions (",(0,a.yg)("inlineCode",{parentName:"strong"},"xpath"),")"),": For each metric field defined in the ",(0,a.yg)("inlineCode",{parentName:"li"},"fields")," list, you can specify a relative ",(0,a.yg)("inlineCode",{parentName:"li"},"xpath"),". This XPath expression is evaluated ",(0,a.yg)("em",{parentName:"li"},"relative to each main node")," selected by the ",(0,a.yg)("inlineCode",{parentName:"li"},"parseScript")," in step 1. It extracts the specific value for that metric field from the current main node.")),(0,a.yg)("p",null,"This allows you to easily parse structured XML data where multiple records or items are present."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Special Metrics"),":"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"responseTime"),": This built-in metric represents the HTTP request's response time and is automatically collected. It does not require an ",(0,a.yg)("inlineCode",{parentName:"p"},"xpath"),".")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"keyword"),": This built-in metric counts the occurrences of a specified keyword (configured in ",(0,a.yg)("inlineCode",{parentName:"p"},"http.keyword"),") in the raw response body. It does not require an ",(0,a.yg)("inlineCode",{parentName:"p"},"xpath"),"."))),(0,a.yg)("h3",{id:"example"},"Example"),(0,a.yg)("p",null,"Assume the HTTP API returns the following XML data:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-xml"},'<DeviceStatus xmlns="http://www.isapi.org/ver20/XMLSchema" version="2.0">\n    <CPUList>\n        <CPU>\n            <cpuUtilization>36.400002</cpuUtilization>\n        </CPU>\n    </CPUList>\n    <MemoryList>\n        <Memory>\n            <memoryUsage>399640</memoryUsage>\n            <memoryAvailable>98792</memoryAvailable>\n            <cacheSize>228492</cacheSize>\n        </Memory>\n    </MemoryList>\n    <NetPortStatusList>\n        <NetPortStatus>\n            <id>1</id>\n            <workSpeed>1000</workSpeed>\n        </NetPortStatus>\n        <NetPortStatus>\n            <id>2</id>\n            <workSpeed>0</workSpeed>\n        </NetPortStatus>\n    </NetPortStatusList>\n    <bootTime>2025-01-06 10:27:48</bootTime>\n    <deviceUpTime>87\u59290\u65f655\u520659\u79d2</deviceUpTime>\n    <lastCalibrationTime>2025-04-03 11:09:18</lastCalibrationTime>\n    <lastCalibrationTimeDiff>1</lastCalibrationTimeDiff>\n    <uploadTimeConsumingList>\n        <avgTime>16</avgTime>\n        <maxTime>23</maxTime>\n        <minTime>12</minTime>\n    </uploadTimeConsumingList>\n    <lastCalibrationTimeMode>NTP</lastCalibrationTimeMode>\n    <lastCalibrationTimeAddress>34.191.45.101</lastCalibrationTimeAddress>\n</DeviceStatus>\n')),(0,a.yg)("p",null,"We want to monitor the device status and extract various metrics."),(0,a.yg)("p",null,"Here's how you would configure the monitoring template YML:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"category: server\n# The monitoring type eg: linux windows tomcat mysql aws...\napp: hikvision_isapi\n# The monitoring i18n name\nname:\n  zh-CN: \u6d77\u5eb7\u5a01\u89c6 ISAPI\n  en-US: Hikvision ISAPI\n# The description and help of this monitoring type\nhelp:\n  zh-CN: \u901a\u8fc7ISAPI\u63a5\u53e3\u76d1\u63a7\u6d77\u5eb7\u5a01\u89c6\u8bbe\u5907\u72b6\u6001\uff0c\u83b7\u53d6\u8bbe\u5907\u5065\u5eb7\u6570\u636e\u3002\n  en-US: Monitor Hikvision devices through ISAPI interface to collect health data.\n\n# Input params define for monitoring(render web ui by the definition)\nparams:\n  - field: host\n    name:\n      zh-CN: \u4e3b\u673aHost\n      en-US: Host\n    type: host\n    required: true\n  - field: port\n    name:\n      zh-CN: \u7aef\u53e3\n      en-US: Port\n    type: number\n    range: '[0,65535]'\n    required: true\n    defaultValue: 80\n  - field: timeout\n    name:\n      zh-CN: \u8d85\u65f6\u65f6\u95f4(ms)\n      en-US: Timeout(ms)\n    type: number\n    range: '[1000,60000]'\n    required: true\n    defaultValue: 5000\n  - field: username\n    name:\n      zh-CN: \u7528\u6237\u540d\n      en-US: Username\n    type: text\n    required: true\n  - field: password\n    name:\n      zh-CN: \u5bc6\u7801\n      en-US: Password\n    type: password\n    required: true\n  - field: ssl\n    name:\n      zh-CN: \u542f\u7528HTTPS\n      en-US: SSL\n    type: boolean\n    required: false\n    defaultValue: false\n\n# collect metrics config list\nmetrics:\n  - name: system_info\n    i18n:\n      zh-CN: \u7cfb\u7edf\u4fe1\u606f\n      en-US: System Info\n    priority: 0\n    protocol: http\n    http:\n      host: ^_^host^_^\n      port: ^_^port^_^\n      ssl: ^_^ssl^_^\n      url: /ISAPI/System/deviceInfo\n      method: GET\n      timeout: ^_^timeout^_^\n      authorization:\n        type: Digest Auth\n        digestAuthUsername: ^_^username^_^\n        digestAuthPassword: ^_^password^_^\n      parseType: xmlPath\n      parseScript: //DeviceInfo\n    fields:\n      - field: deviceName\n        type: 1\n        i18n:\n          zh-CN: \u8bbe\u5907\u540d\u79f0\n          en-US: Device Name\n      - field: deviceID\n        type: 1\n        i18n:\n          zh-CN: \u8bbe\u5907ID\n          en-US: Device ID\n      - field: firmwareVersion\n        type: 1\n        i18n:\n          zh-CN: \u56fa\u4ef6\u7248\u672c\n          en-US: Firmware Version\n      - field: model\n        type: 1\n        i18n:\n          zh-CN: \u8bbe\u5907\u578b\u53f7\n          en-US: Device Model\n      - field: macAddress\n        type: 1\n        i18n:\n          zh-CN: mac\u5730\u5740\n          en-US: Mac Address\n  - name: status\n    i18n:\n      zh-CN: \u8bbe\u5907\u72b6\u6001\n      en-US: Status\n    priority: 0\n    protocol: http\n    http:\n      host: ^_^host^_^\n      port: ^_^port^_^\n      ssl: ^_^ssl^_^\n      url: /ISAPI/System/status\n      method: GET\n      timeout: ^_^timeout^_^\n      authorization:\n        type: Digest Auth\n        digestAuthUsername: ^_^username^_^\n        digestAuthPassword: ^_^password^_^\n      parseType: xmlPath\n      parseScript: //DeviceStatus\n    fields:\n      - field: CPU_utilization\n        i18n:\n          zh-CN: CPU \u5229\u7528\u7387\n          en-US: CPU Utilization\n        type: 0\n        unit: '%'\n      - field: memory_usage\n        i18n:\n          zh-CN: \u5185\u5b58\u4f7f\u7528\u91cf\n          en-US: Memory Usage\n        type: 0\n        unit: MB\n      - field: memory_available\n        i18n:\n          zh-CN: \u53ef\u7528\u5185\u5b58\n          en-US: Memory Available\n        type: 0\n        unit: MB\n      - field: cache_size\n        i18n:\n          zh-CN: \u7f13\u5b58\u5927\u5c0f\n          en-US: Cache Size\n        type: 0\n        unit: MB\n      - field: net_port_1_speed\n        i18n:\n          zh-CN: \u7f51\u53e31\u901f\u5ea6\n          en-US: Net Port 1 Speed\n        type: 0\n        unit: Mbps\n      - field: net_port_2_speed\n        i18n:\n          zh-CN: \u7f51\u53e32\u901f\u5ea6\n          en-US: Net Port 2 Speed\n        type: 0\n        unit: Mbps\n      - field: boot_time\n        i18n:\n          zh-CN: \u542f\u52a8\u65f6\u95f4\n          en-US: Boot Time\n        type: 1\n      - field: device_uptime\n        i18n:\n          zh-CN: \u8fd0\u884c\u65f6\u957f\n          en-US: Device Uptime\n        type: 1\n      - field: last_calibration_time\n        i18n:\n          zh-CN: \u4e0a\u6b21\u6821\u65f6\u65f6\u95f4\n          en-US: Last Calibration Time\n        type: 1\n      - field: last_calibration_time_diff\n        i18n:\n          zh-CN: \u4e0a\u6b21\u6821\u65f6\u65f6\u95f4\u5dee\n          en-US: Last Calibration Time Diff\n        type: 0\n        unit: s\n      - field: avg_upload_time\n        i18n:\n          zh-CN: \u5e73\u5747\u4e0a\u4f20\u8017\u65f6\n          en-US: Avg Upload Time\n        type: 0\n        unit: ms\n      - field: max_upload_time\n        i18n:\n          zh-CN: \u6700\u5927\u4e0a\u4f20\u8017\u65f6\n          en-US: Max Upload Time\n        type: 0\n        unit: ms\n      - field: min_upload_time\n        i18n:\n          zh-CN: \u6700\u5c0f\u4e0a\u4f20\u8017\u65f6\n          en-US: Min Upload Time\n        type: 0\n        unit: ms\n      - field: last_calibration_mode\n        i18n:\n          zh-CN: \u4e0a\u6b21\u6821\u65f6\u6a21\u5f0f\n          en-US: Last Calibration Mode\n        type: 1\n      - field: last_calibration_address\n        i18n:\n          zh-CN: \u4e0a\u6b21\u6821\u65f6\u5730\u5740\n          en-US: Last Calibration Address\n        type: 1\n      - field: response_time\n        i18n:\n          zh-CN: \u54cd\u5e94\u65f6\u95f4\n          en-US: Response Time\n        type: 0\n        unit: ms\n    aliasFields:\n      - CPUList/CPU/cpuUtilization\n      - MemoryList/Memory/memoryUsage\n      - MemoryList/Memory/memoryAvailable\n      - MemoryList/Memory/cacheSize\n      - NetPortStatusList/NetPortStatus[id='1']/workSpeed\n      - NetPortStatusList/NetPortStatus[id='2']/workSpeed\n      - bootTime\n      - deviceUpTime\n      - lastCalibrationTime\n      - lastCalibrationTimeDiff\n      - uploadTimeConsumingList/avgTime\n      - uploadTimeConsumingList/maxTime\n      - uploadTimeConsumingList/minTime\n      - lastCalibrationTimeMode\n      - lastCalibrationTimeAddress\n      - responseTime\n    calculates:\n      - CPU_utilization=CPUList/CPU/cpuUtilization\n      - memory_usage=MemoryList/Memory/memoryUsage\n      - memory_available=MemoryList/Memory/memoryAvailable\n      - cache_size=MemoryList/Memory/cacheSize\n      - net_port_1_speed=NetPortStatusList/NetPortStatus[id='1']/workSpeed\n      - net_port_2_speed=NetPortStatusList/NetPortStatus[id='2']/workSpeed\n      - boot_time=bootTime\n      - device_uptime=deviceUpTime\n      - last_calibration_time=lastCalibrationTime\n      - last_calibration_time_diff=lastCalibrationTimeDiff\n      - avg_upload_time=uploadTimeConsumingList/avgTime\n      - max_upload_time=uploadTimeConsumingList/maxTime\n      - min_upload_time=uploadTimeConsumingList/minTime\n      - last_calibration_mode=lastCalibrationTimeMode\n      - last_calibration_address=lastCalibrationTimeAddress\n      - response_time=responseTime\n    units:\n      - memory_usage=KB->MB\n      - memory_available=KB->MB\n      - cache_size=KB->MB\n")))}d.isMDXComponent=!0}}]);