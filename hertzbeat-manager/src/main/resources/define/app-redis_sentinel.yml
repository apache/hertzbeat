# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The monitoring type category：service-application service monitoring db-database monitoring mid-middleware custom-custom monitoring os-operating system monitoring
category: cache
# The monitoring type eg: linux windows tomcat mysql aws...
app: redis_sentinel
# The monitoring i18n name
name:
  zh-CN: Redis Sentinel
  en-US: Redis Sentinel
  ja-JP: Redis Sentinel
# The description and help of this monitoring type
help:
  zh-CN: Hertzbeat 对 Redis Sentinel 的通用指标进行采集监控。<br>您可以点击 “<i>新建 Redis Sentinel</i>” 并进行配置，或者选择“<i>更多操作</i>”，导入已有配置。
  en-US: Hertzbeat monitors Redis Database Sentinel's general performance metrics. You could click the "<i>New Redis Sentinel</i>" button and proceed with the configuration or import an existing setup through the "<i>More Actions</i>" menu.
  zh-TW: Hertzbeat 對 Redis Sentinel 的通用指標進行采集監控。<br>您可以點擊 “<i>新建 Redis Sentinel</i>” 並進行配置，或者選擇“<i>更多操作</i>”，導入已有配置。
  ja-JP: Hertzbeat は Redis Sentinel の一般的なパフォーマンスのメトリクスを監視します。<br>「<i>新規 Redis Sentinel</i>」をクリックしてパラメタを設定した後、新規することができます。
helpLink:
  zh-CN: https://hertzbeat.apache.org/zh-cn/docs/help/influxdb_promql
  en-US: https://hertzbeat.apache.org/docs/help/influxdb_promql
# Input params define for monitoring(render web ui by the definition)
params:
  # field-param field key
  - field: host
    # name-param field display i18n name
    name:
      zh-CN: 目标Host
      en-US: Target Host
      ja-JP: 目標ホスト
    # type-param field type(most mapping the html input type)
    type: host
    # required-true or false
    required: true
  - field: port
    # name-param field display i18n name
    name:
      zh-CN: 端口
      en-US: Port
      ja-JP: ポート
    # type-param field type(most mapping the html input type)
    type: number
    # when type is number, range is required
    range: '[0,65535]'
    # required-true or false
    required: true
    # default value
    defaultValue: 26379
  # field-param field key
  - field: timeout
    # name-param field display i18n name
    name:
      zh-CN: 查询超时时间(ms)
      en-US: Query Timeout(ms)
      ja-JP: クエリタイムアウト（ｍｓ）
    # type-param field type(most mapping the html input type)
    type: number
    # when type is number, range is required
    range: '[0,100000]'
    # required-true or false
    required: true
    # default value
    defaultValue: 3000
  # field-param field key
  - field: username
    # name-param field display i18n name
    name:
      zh-CN: 用户名
      en-US: Username
      ja-JP: ユーザー名
    # type-param field type(most mapping the html input type)
    type: text
    # when type is text, use limit to limit string length
    limit: 50
    # required-true or false
    required: false
  # field-param field key
  - field: password
    # name-param field display i18n name
    name:
      zh-CN: 密码
      en-US: Password
      ja-JP: パスワード
    # type-param field type(most mapping the html input tag)
    type: password
    # required-true or false
    required: false
  # field-param field key
  - field: pattern
    # name-param field display i18n name
    name:
      zh-CN: 模式
      en-US: Pattern
      ja-JP: パターン
    # type-param field type(most mapping the html input type)
    type: number
    # required-true or false
    required: true
    # default value
    defaultValue: 2
    # hide-is hide this field and put it in advanced layout
    hide: true
  - field: enableSshTunnel
    name:
      zh-CN: 是否启用SSH隧道
      en-US: Enable SSH Tunnel
      ja-JP: SSHトンネルの有効化
    type: boolean
    required: true
    hide: true
  - field: sshHost
    name:
      zh-CN: SSH Host
      en-US: SSH Host
      ja-JP: SSHホスト
    type: text
    required: false
    placeholder: 'When Enable SSH Tunnel'
    hide: true
  - field: sshPort
    name:
      zh-CN: SSH端口
      en-US: SSH Port
      ja-JP: SSHポート
    type: number
    range: '[0,65535]'
    required: false
    defaultValue: 22
    placeholder: 'When Enable SSH tunnel'
    hide: true
  - field: sshTimeout
    name:
      zh-CN: SSH超时时间(ms)
      en-US: SSH Timeout(ms)
      ja-JP: SSHタイムアウト（ｍｓ）
    type: number
    required: false
    range: '[400,200000]'
    defaultValue: 6000
    hide: true
  - field: sshUsername
    name:
      zh-CN: SSH用户名
      en-US: SSH Username
      ja-JP: SSHユーザー名
    type: text
    required: false
    placeholder: 'When Enable SSH tunnel'
    hide: true
  - field: sshPassword
    name:
      zh-CN: SSH密码
      en-US: SSH Password
      ja-JP: SSHパスワード
    type: password
    required: false
    hide: true
  - field: sshShareConnection
    name:
      zh-CN: 是否共享SSH连接
      en-US: Share SSH Connection
      ja-JP: SSH接続共有
    type: boolean
    required: true
    defaultValue: true
    hide: true
  - field: sshPrivateKey
    name:
      zh-CN: SSH私钥
      en-US: SSH PrivateKey
      ja-JP: SSH秘密鍵
    type: textarea
    placeholder: -----BEGIN RSA PRIVATE KEY-----
    required: false
    hide: true
  - field: sshPrivateKeyPassphrase
    name:
      zh-CN: SSH密钥短语
      en-US: SSH PrivateKey PassPhrase
      ja-JP: SSH秘密鍵フレーズ
    type: password
    required: false
    hide: true
metrics:
  - name: server
    i18n:
      zh-CN: 服务器
      en-US: Server
      ja-JP: サーバー情報
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 0
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: identity
        type: 1
        i18n:
          zh-CN: 标识
          en-US: Identity
          ja-JP: ID
      - field: redis_version
        type: 1
        i18n:
          zh-CN: Redis 版本
          en-US: Redis Version
          ja-JP: Redisバージョン
      - field: redis_git_sha1
        type: 0
        i18n:
          zh-CN: Redis Git SHA1
          en-US: Redis Git SHA1
          ja-JP: Redis Git SHA1
      - field: redis_git_dirty
        type: 0
        i18n:
          zh-CN: Redis Git Dirty
          en-US: Redis Git Dirty
          ja-JP: RedisサーバーのGitリポジトリ状態
      - field: redis_build_id
        type: 1
        i18n:
          zh-CN: Redis Build ID
          en-US: Redis Build ID
          ja-JP: Redis ビルド Id
      - field: redis_mode
        type: 1
        i18n:
          zh-CN: Redis 模式
          en-US: Redis Mode
          ja-JP: Redis モード
      - field: os
        type: 1
        i18n:
          zh-CN: 操作系统
          en-US: Operating System
          ja-JP: オーエス
      - field: arch_bits
        type: 0
        i18n:
          zh-CN: 架构位数
          en-US: Architecture Bits
          ja-JP: アーキテクチャ
      - field: multiplexing_api
        type: 1
        i18n:
          zh-CN: 多路复用 API
          en-US: Multiplexing API
          ja-JP: IO多重化API
      - field: atomicvar_api
        type: 1
        i18n:
          zh-CN: 原子变量 API
          en-US: Atomicvar API
          ja-JP: 原子操作API
      - field: gcc_version
        type: 1
        i18n:
          zh-CN: GCC 版本
          en-US: GCC Version
          ja-JP: GCC バージョン
      - field: process_id
        type: 0
        i18n:
          zh-CN: 进程 ID
          en-US: Process ID
          ja-JP: プロセスID
      - field: process_supervised
        type: 1
        i18n:
          zh-CN: 进程监控
          en-US: Process Supervised
          ja-JP: プロセスの監視方法
      - field: run_id
        type: 1
        i18n:
          zh-CN: 运行 ID
          en-US: Run ID
          ja-JP: Run ID
      - field: tcp_port
        type: 0
        i18n:
          zh-CN: TCP 端口
          en-US: TCP Port
          ja-JP: TCP ポート
      - field: server_time_usec
        type: 0
        i18n:
          zh-CN: 基于纪元的系统时间
          en-US: Server Time Usec
          ja-JP: サーバーのタイムスタンプ
      - field: uptime_in_seconds
        type: 0
        i18n:
          zh-CN: 运行时间(秒)
          en-US: Uptime In Seconds
          ja-JP: アップタイム（秒）
      - field: uptime_in_days
        type: 0
        i18n:
          zh-CN: 运行时间(天)
          en-US: Uptime In Days
          ja-JP: アップタイム（日）
      - field: hz
        type: 0
        i18n:
          zh-CN: 定时器频率
          en-US: Hz
          ja-JP: イベントの実行頻度
      - field: configured_hz
        type: 0
        i18n:
          zh-CN: 配置定时器频率
          en-US: Configured Hz
          ja-JP: 設定されたイベントの実行頻度
      - field: lru_clock
        type: 0
        i18n:
          zh-CN: LRU 时钟
          en-US: LRU Clock
          ja-JP: LRU クロック
      - field: executable
        type: 1
        i18n:
          zh-CN: 可执行文件
          en-US: Executable
          ja-JP: サーバーの実行パス
      - field: config_file
        type: 1
        i18n:
          zh-CN: 配置文件
          en-US: Config File
          ja-JP: 設定されたサーバーの実行ファイル
      - field: io_threads_active
        type: 0
        i18n:
          zh-CN: 活动 IO 线程
          en-US: IO Threads Active
          ja-JP: 活動中のスレッド数
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    redis:
      # redis host: ipv4 ipv6 host
      host: ^_^host^_^
      # redis port
      port: ^_^port^_^
      # username
      username: ^_^username^_^
      # password
      password: ^_^password^_^
      # timeout unit：ms
      timeout: ^_^timeout^_^
      pattern: ^_^pattern^_^
      sshTunnel:
        enable: ^_^enableSshTunnel^_^
        host: ^_^sshHost^_^
        port: ^_^sshPort^_^
        timeout: ^_^sshTimeout^_^
        username: ^_^sshUsername^_^
        password: ^_^sshPassword^_^
        privateKey: ^_^sshPrivateKey^_^
        privateKeyPassphrase: ^_^sshPrivateKeyPassphrase^_^
        shareConnection: ^_^sshShareConnection^_^

  - name: clients
    i18n:
      zh-CN: 客户端
      en-US: Clients
      ja-JP: クライアント情報
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 1
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: connected_clients
        type: 0
        i18n:
          zh-CN: 已连接客户端
          en-US: Connected Clients
          ja-JP: 現在接続されているクライアントの数
      - field: cluster_connections
        type: 0
        i18n:
          zh-CN: 集群连接
          en-US: Cluster Connections
          ja-JP: クラスター内の接続数
      - field: maxclients
        type: 0
        i18n:
          zh-CN: 最大客户端数
          en-US: Maxclients
          ja-JP: 最大クライアント数
      - field: client_recent_max_input_buffer
        type: 0
        i18n:
          zh-CN: 客户端最近最大输入缓冲区
          en-US: Client Recent Max Input Buffer
          ja-JP: クライアントの最近の最大入力バッファサイズ
      - field: client_recent_max_output_buffer
        type: 0
        i18n:
          zh-CN: 客户端最近最大输出缓冲区
          en-US: Client Recent Max Output Buffer
          ja-JP: クライアントの最近の最大出力バッファサイズ
      - field: blocked_clients
        type: 0
        i18n:
          zh-CN: 阻塞客户端
          en-US: Blocked Clients
          ja-JP: ブロックされたクライアント数
      - field: tracking_clients
        type: 0
        i18n:
          zh-CN: 跟踪客户端
          en-US: Tracking Clients
          ja-JP: トラッキングを使用するクライアントの数
      - field: clients_in_timeout_table
        type: 0
        i18n:
          zh-CN: 超时表中的客户端
          en-US: Clients In Timeout Table
          ja-JP: タイムアウトテーブル内のクライアント数
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    redis:
      # redis host: ipv4 ipv6 host
      host: ^_^host^_^
      # redis port
      port: ^_^port^_^
      # username
      username: ^_^username^_^
      # password
      password: ^_^password^_^
      # timeout unit：ms
      timeout: ^_^timeout^_^
      pattern: ^_^pattern^_^
      sshTunnel:
        enable: ^_^enableSshTunnel^_^
        host: ^_^sshHost^_^
        port: ^_^sshPort^_^
        timeout: ^_^sshTimeout^_^
        username: ^_^sshUsername^_^
        password: ^_^sshPassword^_^
        privateKey: ^_^sshPrivateKey^_^
        privateKeyPassphrase: ^_^sshPrivateKeyPassphrase^_^
        shareConnection: ^_^sshShareConnection^_^

  - name: stats
    i18n:
      zh-CN: 统计
      en-US: Stats
      ja-JP: 統計情報
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 2
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: total_connections_received
        type: 0
        i18n:
          zh-CN: 收到总连接数
          en-US: Total Connections Received
          ja-JP: サーバーの起動後に受信された合計接続数
      - field: total_commands_processed
        type: 0
        i18n:
          zh-CN: 处理总命令数
          en-US: Total Commands Processed
          ja-JP: サーバーの起動後に処理した総コマンド数
      - field: instantaneous_ops_per_sec
        type: 0
        i18n:
          zh-CN: 瞬时每秒操作数
          en-US: Instantaneous Ops Per Sec
          ja-JP: 1秒当たりに処理されたコマンドの数
      - field: total_net_input_bytes
        type: 0
        i18n:
          zh-CN: 总网络输入字节
          en-US: Total Net Input Bytes
          ja-JP: 受信されたネットワークバイトの合計数
      - field: total_net_output_bytes
        type: 0
        i18n:
          zh-CN: 总网络输出字节
          en-US: Total Net Output Bytes
          ja-JP: 転送されたネットワークバイトの合計数
      - field: instantaneous_input_kbps
        type: 0
        i18n:
          zh-CN: 瞬时的输入 kbps
          en-US: Instantaneous Input Kbps
          ja-JP: 瞬間入力速度(kbps)
      - field: instantaneous_output_kbps
        type: 0
        i18n:
          zh-CN: 瞬时输出 kbps
          en-US: Instantaneous Output Kbps
          ja-JP: 瞬間出力速度(kbps)
      - field: rejected_connections
        type: 0
        i18n:
          zh-CN: 拒绝连接数
          en-US: Rejected Connections
          ja-JP: maxclients制限で拒否された接続数
      - field: sync_full
        type: 0
        i18n:
          zh-CN: 全量同步
          en-US: Sync Full
          ja-JP: 完全同期の回数
      - field: sync_partial_ok
        type: 0
        i18n:
          zh-CN: 部分同步成功
          en-US: Sync Partial Ok
          ja-JP: 部分同期の回数
      - field: sync_partial_err
        type: 0
        i18n:
          zh-CN: 部分同步失败
          en-US: Sync Partial Err
          ja-JP: 部分同期のエラー回数
      - field: expired_keys
        type: 0
        i18n:
          zh-CN: 过期键
          en-US: Expired Keys
          ja-JP: expireコマンドで削除されたキーの数
      - field: expired_stale_perc
        type: 0
        i18n:
          zh-CN: 过期key占比
          en-US: Expired Stale Perc
          ja-JP: 期限切れのステイルキーの比率
      - field: expired_time_cap_reached_count
        type: 0
        i18n:
          zh-CN: 达到过期时间上限计数
          en-US: Expired Time Cap Reached Count
          ja-JP: 満了時間の制限に達した回数
      - field: expire_cycle_cpu_milliseconds
        type: 0
        i18n:
          zh-CN: 过期周期 CPU 毫秒
          en-US: Expire Cycle CPU Milliseconds
          ja-JP: 満了サイクルでかかったCPU時間(ms)
      - field: evicted_keys
        type: 0
        i18n:
          zh-CN: 逐出键
          en-US: Evicted Keys
          ja-JP: メモリ不足で追放されたキーの数
      - field: keyspace_hits
        type: 0
        i18n:
          zh-CN: 命中键
          en-US: Keyspace Hits
          ja-JP: キースペースのヒット数
      - field: keyspace_misses
        type: 0
        i18n:
          zh-CN: 未命中键
          en-US: Keyspace Misses
          ja-JP: キースペースのミス数
      - field: pubsub_channels
        type: 0
        i18n:
          zh-CN: 发布订阅频道
          en-US: Pubsub Channels
          ja-JP: 有効になっているPub/Subチャネルに接続されているチャネルの数
      - field: pubsub_patterns
        type: 0
        i18n:
          zh-CN: 发布订阅模式
          en-US: Pubsub Patterns
          ja-JP: 有効になっているPub/Subパターンで接続されたパターンチャネルの数
      - field: latest_fork_usec
        type: 0
        i18n:
          zh-CN: 最新 fork 毫秒
          en-US: Latest Fork Usec
          ja-JP: 最後のフォーク作業にかかった時間
      - field: total_forks
        type: 0
        i18n:
          zh-CN: 总 fork 数
          en-US: Total Forks
          ja-JP: 実行されたフォーク作業の合計数
      - field: migrate_cached_sockets
        type: 0
        i18n:
          zh-CN: 迁移缓存套接字
          en-US: Migrate Cached Sockets
          ja-JP: マイグレーションされたソケット数
      - field: slave_expires_tracked_keys
        type: 0
        i18n:
          zh-CN: 从节点过期跟踪键
          en-US: Slave Expires Tracked Keys
          ja-JP: スレーブで満了した、トラッキングされたキーの数
      - field: active_defrag_hits
        type: 0
        i18n:
          zh-CN: 活跃碎片整理命中
          en-US: Active Defrag Hits
          ja-JP: アクティブなデフラグ操作中に発生したヒットの数
      - field: active_defrag_misses
        type: 0
        i18n:
          zh-CN: 活跃碎片整理未命中
          en-US: Active Defrag Misses
          ja-JP: アクティブなデフラグ操作中に見逃したヒットの数
      - field: active_defrag_key_hits
        type: 0
        i18n:
          zh-CN: 活跃碎片整理键命中
          en-US: Active Defrag Key Hits
          ja-JP: デフラグ操作でヒットしたキーの数
      - field: active_defrag_key_misses
        type: 0
        i18n:
          zh-CN: 活跃碎片整理键未命中
          en-US: Active Defrag Key Misses
          ja-JP: デフラグ操作で見逃したキーの数
      - field: tracking_total_keys
        type: 0
        i18n:
          zh-CN: 跟踪键总数
          en-US: Tracking Total Keys
          ja-JP: トラッキングされたキーの合計数
      - field: tracking_total_items
        type: 0
        i18n:
          zh-CN: 跟踪项总数
          en-US: Tracking Total Items
          ja-JP: トラッキングされたアイテムの合計数
      - field: tracking_total_prefixes
        type: 0
        i18n:
          zh-CN: 跟踪前缀总数
          en-US: Tracking Total Prefixes
          ja-JP: トラッキングされたプレフィックスの合計数
      - field: unexpected_error_replies
        type: 0
        i18n:
          zh-CN: 意外错误回复
          en-US: Unexpected Error Replies
          ja-JP: 予期しないエラー応答の数
      - field: total_error_replies
        type: 0
        i18n:
          zh-CN: 总错误回复
          en-US: Total Error Replies
          ja-JP: 発生したエラーの合計応答の数
      - field: dump_payload_sanitizations
        type: 0
        i18n:
          zh-CN: 转储有效负载深度完整性验证的总数
          en-US: Dump Payload Sanitizations
          ja-JP: ダンプペイロードで実行された整理作業の数
      - field: total_reads_processed
        type: 0
        i18n:
          zh-CN: 总读取处理
          en-US: Total Reads Processed
          ja-JP: 処理された読み取り作業の合計数
      - field: total_writes_processed
        type: 0
        i18n:
          zh-CN: 总写入处理
          en-US: Total Writes Processed
          ja-JP: 処理された書き込み作業の合計数
      - field: io_threaded_reads_processed
        type: 0
        i18n:
          zh-CN: IO 线程读取处理
          en-US: Io Threaded Reads Processed
          ja-JP: I/Oスレッドで処理された読み取り作業の数
      - field: io_threaded_writes_processed
        type: 0
        i18n:
          zh-CN: IO 线程写入处理
          en-US: Io Threaded Writes Processed
          ja-JP: I/Oスレッドで処理された書き込み作業の数
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    redis:
      # redis host: ipv4 ipv6 host
      host: ^_^host^_^
      # redis port
      port: ^_^port^_^
      # username
      username: ^_^username^_^
      # password
      password: ^_^password^_^
      # timeout unit：ms
      timeout: ^_^timeout^_^
      pattern: ^_^pattern^_^
      sshTunnel:
        enable: ^_^enableSshTunnel^_^
        host: ^_^sshHost^_^
        port: ^_^sshPort^_^
        timeout: ^_^sshTimeout^_^
        username: ^_^sshUsername^_^
        password: ^_^sshPassword^_^
        privateKey: ^_^sshPrivateKey^_^
        privateKeyPassphrase: ^_^sshPrivateKeyPassphrase^_^
        shareConnection: ^_^sshShareConnection^_^

  - name: cpu
    i18n:
      zh-CN: CPU
      en-US: CPU
      ja-JP: CPU情報
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 3
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: used_cpu_sys
        type: 0
        i18n:
          zh-CN: 系统已使用 CPU
          en-US: Sys CPU Used
          ja-JP: システムモードで使用されたCPUの合計時間
      - field: used_cpu_user
        type: 0
        i18n:
          zh-CN: 用户已使用 CPU
          en-US: User CPU Used
          ja-JP: ユーザーモードで使用されたCPUの合計時間
      - field: used_cpu_sys_children
        type: 0
        i18n:
          zh-CN: Sys 子进程已使用 CPU
          en-US: Sys Children CPU Used
          ja-JP: 子プロセスがシステムモードで使用したCPU時間
      - field: used_cpu_user_children
        type: 0
        i18n:
          zh-CN: 用户子进程已使用 CPU
          en-US: User Children CPU Used
          ja-JP: 子プロセスがユーザーモードで使用したCPU時間
      - field: used_cpu_sys_main_thread
        type: 0
        i18n:
          zh-CN: 系统主线程已使用 CPU
          en-US: Sys Main Thread CPU Used
          ja-JP: プロセスがシステムモードで使用したCPU時間
      - field: used_cpu_user_main_thread
        type: 0
        i18n:
          zh-CN: 用户主线程已使用 CPU
          en-US: User Main Thread CPU Used
          ja-JP: プロセスがユーザーモードで使用したCPU時間
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    redis:
      # redis host: ipv4 ipv6 host
      host: ^_^host^_^
      # redis port
      port: ^_^port^_^
      # username
      username: ^_^username^_^
      # password
      password: ^_^password^_^
      # timeout unit：ms
      timeout: ^_^timeout^_^
      pattern: ^_^pattern^_^
      sshTunnel:
        enable: ^_^enableSshTunnel^_^
        host: ^_^sshHost^_^
        port: ^_^sshPort^_^
        timeout: ^_^sshTimeout^_^
        username: ^_^sshUsername^_^
        password: ^_^sshPassword^_^
        privateKey: ^_^sshPrivateKey^_^
        privateKeyPassphrase: ^_^sshPrivateKeyPassphrase^_^
        shareConnection: ^_^sshShareConnection^_^

  - name: sentinel
    i18n:
      zh-CN: 哨兵
      en-US: Sentinel
      ja-JP: Sentinel
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 4
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: sentinel_masters
        type: 1
        i18n:
          zh-CN: 主节点
          en-US: Masters
          ja-JP: マスターノード
      - field: sentinel_tilt
        type: 1
        i18n:
          zh-CN: 倾斜
          en-US: Tilt
          ja-JP: マスターをダウン状態としてマークする前の待機時間
      - field: sentinel_running_scripts
        type: 1
        i18n:
          zh-CN: 运行脚本
          en-US: Running Scripts
          ja-JP: 実行するスクリプト
      - field: sentinel_scripts_queue_length
        type: 1
        i18n:
          zh-CN: 脚本队列长度
          en-US: Scripts Queue Length
          ja-JP: 実行するスクリプトのキューの長さ
      - field: sentinel_simulate_failure_flags
        type: 1
        i18n:
          zh-CN: 模拟失败标志
          en-US: Simulate Failure Flags
          ja-JP: フェイルオーバー機能をテスト用のフラグ
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    redis:
      # redis host: ipv4 ipv6 host
      host: ^_^host^_^
      # redis port
      port: ^_^port^_^
      # username
      username: ^_^username^_^
      # password
      password: ^_^password^_^
      # timeout unit：ms
      timeout: ^_^timeout^_^
      pattern: ^_^pattern^_^
      sshTunnel:
        enable: ^_^enableSshTunnel^_^
        host: ^_^sshHost^_^
        port: ^_^sshPort^_^
        timeout: ^_^sshTimeout^_^
        username: ^_^sshUsername^_^
        password: ^_^sshPassword^_^
        privateKey: ^_^sshPrivateKey^_^
        privateKeyPassphrase: ^_^sshPrivateKeyPassphrase^_^
        shareConnection: ^_^sshShareConnection^_^
