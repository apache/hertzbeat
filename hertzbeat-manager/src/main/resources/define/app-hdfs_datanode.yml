# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The monitoring type category：service-application service monitoring db-database monitoring custom-custom monitoring os-operating system monitoring
category: bigdata
# The monitoring type eg: linux windows tomcat mysql aws...
app: hdfs_datanode
# The monitoring i18n name
name:
  zh-CN: Apache HDFS DataNode
  en-US: Apache HDFS DataNode
# The description and help of this monitoring type
help:
  zh-CN: Hertzbeat 对 HDFS DataNode 节点监控指标进行监控。<br>您可以点击 “<i>新建 Apache HDFS DataNode</i>” 并进行配置，或者选择“<i>更多操作</i>”，导入已有配置。
  en-US: Hertzbeat monitors the HDFS DataNode metrics. <br>You can click "<i>New Apache HDFS DataNode</i>" to configure, or select "<i>More Actions</i>" to import an existing configuration.
  zh-TW: Hertzbeat 對 HDFS DataNode 節點監控指標進行監控。<br>您可以點擊 “<i>新建 Apache HDFS DataNode</i>” 並進行配置，或者選擇“<i>更多操作</i>”，導入已有配置。

helpLink:
  zh-CN: https://hertzbeat.apache.org/zh-cn/docs/help/hdfs_datanode/
  en-US: https://hertzbeat.apache.org/docs/help/hdfs_datanode/
# Input params define for monitoring(render web ui by the definition)
params:
  # field-param field key
  - field: host
    # name-param field display i18n name
    name:
      zh-CN: 目标Host
      en-US: Target Host
    # type-param field type(most mapping the html input type)
    type: host
    # required-true or false
    required: true
  # field-param field key
  - field: port
    # name-param field display i18n name
    name:
      zh-CN: 端口
      en-US: Port
    # type-param field type(most mapping the html input type)
    type: number
    # when type is number, range is required
    range: '[0,65535]'
    # required-true or false
    required: true
    # default value
    defaultValue: 50075
  # field-param field key
  - field: timeout
    # name-param field display i18n name
    name:
      zh-CN: 查询超时时间
      en-US: Query Timeout
    # type-param field type(most mapping the html input type)
    type: number
    # required-true or false
    required: false
    # hide param-true or false
    hide: true
    # default value
    defaultValue: 6000
# collect metrics config list
metrics:
  # metrics - Server
  - name: FSDatasetState
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 0
    # collect metrics content
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: DfsUsed
        type: 0
        unit: 'GB'
        i18n:
          zh-CN: DataNode HDFS使用量
          en-US: DfsUsed
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: Remaining
        type: 0
        unit: 'GB'
        i18n:
          zh-CN: DataNode HDFS剩余空间
          en-US: Remaining
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: Capacity
        type: 0
        unit: 'GB'
        i18n:
          zh-CN: DataNode HDFS空间总量
          en-US: Capacity
    units:
      - DfsUsed=B->GB
      - Remaining=B->GB
      - Capacity=B->GB
    # (optional)metrics field alias name, it is used as an alias field to map and convert the collected data and metrics field
    aliasFields:
      - $.DfsUsed
      - $.Remaining
      - $.Capacity
    calculates:
      - DfsUsed=$.DfsUsed
      - Remaining=$.Remaining
      - Capacity=$.Capacity
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: /jmx
      method: GET
      ssl: ^_^ssl^_^
      parseType: jsonPath
      parseScript: '$.beans[?(@.name == "Hadoop:service=DataNode,name=FSDatasetState")]'
  - name: JvmMetrics
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 0
    # collect metrics content
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: MemNonHeapUsedM
        type: 0
        i18n:
          zh-CN: JVM 当前已经使用的 NonHeapMemory 的大小
          en-US: MemNonHeapUsedM
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: MemNonHeapCommittedM
        type: 0
        i18n:
          zh-CN: JVM 配置的 NonHeapCommittedM 的大小
          en-US: MemNonHeapCommittedM
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: MemHeapUsedM
        type: 0
        i18n:
          zh-CN: JVM 当前已经使用的 HeapMemory 的大小
          en-US: MemHeapUsedM
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: MemHeapCommittedM
        type: 0
        i18n:
          zh-CN: JVM HeapMemory 提交大小
          en-US: MemHeapCommittedM
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: MemHeapMaxM
        type: 0
        i18n:
          zh-CN: JVM 配置的 HeapMemory 的大小
          en-US: MemHeapMaxM
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: MemMaxM
        type: 0
        i18n:
          zh-CN: JVM 运行时可以使用的最大内存大小
          en-US: MemMaxM
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: ThreadsRunnable
        type: 0
        i18n:
          zh-CN: 处于 RUNNABLE 状态的线程数量
          en-US: ThreadsRunnable
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: ThreadsBlocked
        type: 0
        i18n:
          zh-CN: 处于 BLOCKED 状态的线程数量
          en-US: ThreadsBlocked
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: ThreadsWaiting
        type: 0
        i18n:
          zh-CN: 处于 WAITING 状态的线程数量
          en-US: ThreadsWaiting
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: ThreadsTimedWaiting
        type: 0
        i18n:
          zh-CN: 处于 TIMED WAITING 状态的线程数量
          en-US: ThreadsTimedWaiting
    # (optional)metrics field alias name, it is used as an alias field to map and convert the collected data and metrics field
    aliasFields:
      - $.MemNonHeapUsedM
      - $.MemNonHeapCommittedM
      - $.MemHeapUsedM
      - $.MemHeapCommittedM
      - $.MemHeapMaxM
      - $.MemMaxM
      - $.ThreadsRunnable
      - $.ThreadsBlocked
      - $.ThreadsWaiting
      - $.ThreadsTimedWaiting
    calculates:
      - MemNonHeapUsedM=$.MemNonHeapUsedM
      - MemNonHeapCommittedM=$.MemNonHeapCommittedM
      - MemHeapUsedM=$.MemHeapUsedM
      - MemHeapCommittedM=$.MemHeapCommittedM
      - MemHeapMaxM=$.MemHeapMaxM
      - MemMaxM=$.MemMaxM
      - ThreadsRunnable=$.ThreadsRunnable
      - ThreadsBlocked=$.ThreadsBlocked
      - ThreadsWaiting=$.ThreadsWaiting
      - ThreadsTimedWaiting=$.ThreadsTimedWaiting
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: /jmx
      method: GET
      ssl: ^_^ssl^_^
      parseType: jsonPath
      parseScript: '$.beans[?(@.name == "Hadoop:service=DataNode,name=JvmMetrics")]'
  - name: runtime
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 0
    # collect metrics content
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: StartTime
        type: 1
        i18n:
          zh-CN: 启动时间
          en-US: StartTime
    # (optional)metrics field alias name, it is used as an alias field to map and convert the collected data and metrics field
    aliasFields:
      - $.beans[?(@.name == "java.lang:type=Runtime")].StartTime
    calculates:
      - StartTime=$.beans[?(@.name == "java.lang:type=Runtime")].StartTime
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: /jmx
      method: GET
      ssl: ^_^ssl^_^
      parseType: jsonPath
      parseScript: '$'