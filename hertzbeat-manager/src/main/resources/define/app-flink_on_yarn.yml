# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The monitoring type category：service-application service monitoring db-database monitoring custom-custom monitoring os-operating system monitoring
category: bigdata
# The monitoring type eg: linux windows tomcat mysql aws...
app: flink_on_yarn
# The monitoring i18n name
name:
  zh-CN: Apache Flink On Yarn
  en-US: Apache Flink On Yarn
  ja-JP: Apache Flink On Yarn
# The description and help of this monitoring type
help:
  zh-CN: Hertzbeat 对 Flink 流引擎 Yarn 模式的通用指标进行测量监控。<br>您可以点击 “<i>新建 Flink On Yarn</i>” 并进行配置，或者选择“<i>更多操作</i>”，导入已有配置。
  en-US: Hertzbeat monitoring Flink Stream through general performance metric. You could click the "<i>New Flink Stream</i>" button and proceed with the configuration or import an existing setup through the "<i>More Actions</i>" menu.
  zh-TW: Hertzbeat 對 Flink 流引擎 Yarn 模式的通用指標進行測量監控。<br>您可以點擊 “<i>新建 Flink On Yarn</i>” 並進行配置，或者選擇“<i>更多操作</i>”，導入已有配置。
  ja-JP: HertzBeat は Flink 「Yarn モード」の一般的なメトリクスを監視します。<br>「<i>新規 Flink</i>」をクリックしてパラメタを設定した後、新規することができます。
helpLink:
  zh-CN: https://hertzbeat.apache.org/zh-cn/docs/help/flink_on_yarn
  en-US: https://hertzbeat.apache.org/docs/help/flink_on_yarn
# Input params define for monitoring(render web ui by the definition)
params:
  # field-param field key
  - field: host
    # name-param field display i18n name
    name:
      zh-CN: 目标Host
      en-US: Target Host
      ja-JP: 目標ホスト
    # type-param field type(most mapping the html input type)
    type: host
    # required-true or false
    required: true
  # field-param field key
  - field: port
    # name-param field display i18n name
    name:
      zh-CN: Yarn端口
      en-US: Yarn Port
      ja-JP: Yarnポート
    # type-param field type(most mapping the html input type)
    type: number
    # when type is number, range is required
    range: '[0,65535]'
    # required-true or false
    required: true
    # default value
    defaultValue: 8088
  # field-param field key
  - field: application_id
    # name-param field display i18n name
    name:
      zh-CN: 应用ID
      en-US: Application ID
      ja-JP: 応用ID
    # type-param field type(most mapping the html input type)
    type: text
    # required-true or false
    required: true
  # field-param field key
  - field: ssl
    # name-param field display i18n name
    name:
      zh-CN: 启动SSL
      en-US: SSL
      ja-JP: SSL利用
    # type-param field type(boolean mapping the html switch tag)
    type: boolean
    # required-true or false
    required: false
  # field-param field key
  - field: authType
    name:
      zh-CN: 认证方式
      en-US: Auth Type
      ja-JP: 認証方法
    # type-param field type(most mapping the html input type)
    type: radio
    required: false
    hide: true
    # when type is radio checkbox, use option to show optional values {name1:value1,name2:value2}
    options:
      - label: Basic Auth
        value: Basic Auth
      - label: Digest Auth
        value: Digest Auth
  - field: username
    name:
      zh-CN: 用户名
      en-US: Username
      ja-JP: ユーザー名
    type: text
    limit: 50
    required: false
    hide: true
  - field: password
    name:
      zh-CN: 密码
      en-US: Password
      ja-JP: パスワード
    type: password
    required: false
    hide: true
# collect metrics config list
metrics:
  - name: jobmanager
    i18n:
      zh-CN: JobManager Metrics
      en-US: JobManager Metrics
      ja-JP: JobManagerメトリクス
    priority: 0
    fields:
      - field: id
        type: 1
        label: true
        i18n:
          zh-CN: 监控项
          en-US: key
          ja-JP: キー
      - field: value
        type: 0
        i18n:
          zh-CN: 值
          en-US: value
          ja-JP: 値
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: /proxy/^_^application_id^_^/jobmanager/metrics?get=Status.JVM.Memory.Heap.Used,Status.JVM.Memory.Heap.Max,Status.JVM.Memory.Metaspace.Used,Status.JVM.Memory.Metaspace.Max,Status.JVM.Memory.Heap.Committed,Status.JVM.Memory.Heap.Used,Status.JVM.Memory.Heap.Max,Status.JVM.Memory.NonHeap.Committed,Status.JVM.Memory.NonHeap.Used,Status.JVM.Memory.NonHeap.Max,Status.JVM.Memory.Direct.Count,Status.JVM.Memory.Direct.MemoryUsed,Status.JVM.Memory.Direct.TotalCapacity,Status.JVM.Memory.Mapped.Count,Status.JVM.Memory.Mapped.MemoryUsed,Status.JVM.Memory.Mapped.TotalCapacity,Status.JVM.GarbageCollector.G1_Young_Generation.Count,Status.JVM.GarbageCollector.G1_Old_Generation.Count,Status.JVM.GarbageCollector.G1_Old_Generation.Time,Status.JVM.GarbageCollector.G1_Young_Generation.Time
      method: GET
      ssl: ^_^ssl^_^
      authorization:
        type: ^_^authType^_^
        basicAuthUsername: ^_^username^_^
        basicAuthPassword: ^_^password^_^
        digestAuthUsername: ^_^username^_^
        digestAuthPassword: ^_^password^_^
      parseType: jsonPath
      parseScript: '$.*'
  - name: jobmanager_config
    i18n:
      zh-CN: JobManager Config
      en-US: JobManager Config
      ja-JP: JobManager設定
    priority: 1
    fields:
      - field: key
        type: 1
        i18n:
          zh-CN: 监控项
          en-US: key
          ja-JP: キー
      - field: value
        type: 1
        i18n:
          zh-CN: 值
          en-US: value
          ja-JP: 値
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: /proxy/^_^application_id^_^/jobmanager/config
      method: GET
      ssl: ^_^ssl^_^
      authorization:
        type: ^_^authType^_^
        basicAuthUsername: ^_^username^_^
        basicAuthPassword: ^_^password^_^
        digestAuthUsername: ^_^username^_^
        digestAuthPassword: ^_^password^_^
      parseType: jsonPath
      parseScript: '$.*'

  - name: taskmanager
    i18n:
      zh-CN: TaskManager
      en-US: TaskManager
      ja-JP: TaskManager
    priority: 2
    fields:
      - field: id
        type: 1
        label: true
        i18n:
          zh-CN: Container ID
          en-US: Container ID
          ja-JP: コンテナID
      - field: path
        type: 1
        i18n:
          zh-CN: Path
          en-US: Path
          ja-JP: パス
      - field: dataPort
        type: 1
        i18n:
          zh-CN: Data Port
          en-US: Data Port
          ja-JP: データポート
      - field: jmxPort
        type: 1
        i18n:
          zh-CN: JMX Port
          en-US: JMX Port
          ja-JP: JMXポート
      - field: timeSinceLastHeartbeat
        type: 0
        i18n:
          zh-CN: Last Heartbeat
          en-US: Last Heartbeat
          ja-JP: 最後のハートビート
      - field: slotsNumber
        type: 0
        i18n:
          zh-CN: All Slots
          en-US: All Slots
          ja-JP: スロット
      - field: freeSlots
        type: 0
        i18n:
          zh-CN: Free Slots
          en-US: Free Slots
          ja-JP: 利用可能なスロット
      - field: totalResourceCpuCores
        type: 0
        i18n:
          zh-CN: totalResourceCpuCores
          en-US: totalResourceCpuCores
          ja-JP: totalResourceCpuCores
      - field: totalResourceTaskHeapMemory
        type: 0
        i18n:
          zh-CN: totalResourceTaskHeapMemory
          en-US: totalResourceTaskHeapMemory
          ja-JP: totalResourceTaskHeapMemory
        unit: MB
      - field: totalResourceManagedMemory
        type: 0
        i18n:
          zh-CN: totalResourceManagedMemory
          en-US: totalResourceManagedMemory
          ja-JP: totalResourceManagedMemory
        unit: MB
      - field: totalResourceNetworkMemory
        type: 0
        i18n:
          zh-CN: totalResourceNetworkMemory
          en-US: totalResourceNetworkMemory
          ja-JP: totalResourceNetworkMemory
        unit: MB
      - field: freeResourceCpuCores
        type: 0
        i18n:
          zh-CN: freeResourceCpuCores
          en-US: freeResourceCpuCores
          ja-JP: freeResourceCpuCores
      - field: freeResourceTaskHeapMemory
        type: 0
        i18n:
          zh-CN: freeResourceTaskHeapMemory
          en-US: freeResourceTaskHeapMemory
          ja-JP: freeResourceTaskHeapMemory
        unit: MB
      - field: freeResourceTaskOffHeapMemory
        type: 0
        i18n:
          zh-CN: freeResourceTaskOffHeapMemory
          en-US: freeResourceTaskOffHeapMemory
          ja-JP: freeResourceTaskOffHeapMemory
        unit: MB
      - field: freeResourceManagedMemory
        type: 0
        i18n:
          zh-CN: freeResourceManagedMemory
          en-US: freeResourceManagedMemory
          ja-JP: freeResourceManagedMemory
        unit: MB
      - field: freeResourceNetworkMemory
        type: 0
        i18n:
          zh-CN: freeResourceNetworkMemory
          en-US: freeResourceNetworkMemory
          ja-JP: freeResourceNetworkMemory
        unit: MB
      - field: hardwareCpuCores
        type: 0
        i18n:
          zh-CN: CPU Cores
          en-US: CPU Cores
          ja-JP: Cpuコア数
      - field: hardwarePhysicalMemory
        type: 0
        i18n:
          zh-CN: Physical MEM
          en-US: Physical MEM
          ja-JP: 物理メモリ
        unit: GB
      - field: hardwareFreeMemory
        type: 0
        i18n:
          zh-CN: JVM Heap Size
          en-US: JVM Heap Size
          ja-JP: Java仮想マシンのヒープサイズ
        unit: MB
      - field: hardwareManagedMemory
        type: 0
        i18n:
          zh-CN: Flink Managed MEM
          en-US: Flink Managed MEM
          ja-JP: Flink管理メモリ
        unit: MB
      - field: memoryConfigurationFrameworkHeap
        type: 0
        i18n:
          zh-CN: Framework Heap
          en-US: Framework Heap
          ja-JP: フレームワークのヒープ
        unit: MB
      - field: memoryConfigurationTaskHeap
        type: 0
        i18n:
          zh-CN: Task Heap
          en-US: Task Heap
          ja-JP: タスクヒープ
        unit: MB
      - field: memoryConfigurationFrameworkOffHeap
        type: 0
        i18n:
          zh-CN: Framework Off-Heap
          en-US: Framework Off-Heap
          ja-JP: フレームワークのオフヒープ
        unit: MB
      - field: memoryConfigurationTaskOffHeap
        type: 0
        i18n:
          zh-CN: Task Off-Heap
          en-US: Task Off-Heap
          ja-JP: タスクオフヒープ
        unit: MB
      - field: memoryConfigurationNetworkMemory
        type: 0
        i18n:
          zh-CN: Network
          en-US: Network
          ja-JP: ネットワーク
        unit: MB
      - field: memoryConfigurationManagedMemory
        type: 0
        i18n:
          zh-CN: Managed Memory
          en-US: Managed Memory
          ja-JP: 管理メモリ
        unit: MB
      - field: memoryConfigurationJvmMetaspace
        type: 0
        i18n:
          zh-CN: JVM Metaspace
          en-US: JVM Metaspace
          ja-JP: Java仮想マシンのメタスペース
        unit: MB
      - field: memoryConfigurationJvmOverhead
        type: 0
        i18n:
          zh-CN: JVM Overhead
          en-US: JVM Overhead
          ja-JP: Java仮想マシンのオーバーヘッド
      - field: memoryConfigurationTotalFlinkMemory
        type: 0
        i18n:
          zh-CN: memoryConfigurationTotalFlinkMemory
          en-US: memoryConfigurationTotalFlinkMemory
          ja-JP: memoryConfigurationTotalFlinkMemory
      - field: memoryConfigurationTotalProcessMemory
        type: 0
        i18n:
          zh-CN: memoryConfigurationTotalProcessMemory
          en-US: memoryConfigurationTotalProcessMemory
          ja-JP: memoryConfigurationTotalProcessMemory
    aliasFields:
      - $.id
      - $.path
      - $.dataPort
      - $.jmxPort
      - $.timeSinceLastHeartbeat
      - $.slotsNumber
      - $.freeSlots
      - $.totalResource.cpuCores
      - $.totalResource.taskHeapMemory
      - $.totalResource.managedMemory
      - $.totalResource.networkMemory
      - $.freeResource.cpuCores
      - $.freeResource.taskHeapMemory
      - $.freeResource.taskOffHeapMemory
      - $.freeResource.managedMemory
      - $.freeResource.networkMemory
      - $.hardware.cpuCores
      - $.hardware.physicalMemory
      - $.hardware.freeMemory
      - $.hardware.managedMemory
      - $.memoryConfiguration.frameworkHeap
      - $.memoryConfiguration.taskHeap
      - $.memoryConfiguration.frameworkOffHeap
      - $.memoryConfiguration.taskOffHeap
      - $.memoryConfiguration.networkMemory
      - $.memoryConfiguration.managedMemory
      - $.memoryConfiguration.jvmMetaspace
      - $.memoryConfiguration.jvmOverhead
      - $.memoryConfiguration.totalFlinkMemory
      - $.memoryConfiguration.totalProcessMemory
    calculates:
      - id=$.id
      - path=$.path
      - dataPort=$.dataPort
      - jmxPort=$.jmxPort
      - timeSinceLastHeartbeat=$.timeSinceLastHeartbeat
      - slotsNumber=$.slotsNumber
      - freeSlots=$.freeSlots
      - totalResourceCpuCores=$.totalResource.cpuCores
      - totalResourceTaskHeapMemory=$.totalResource.taskHeapMemory
      - totalResourceManagedMemory=$.totalResource.managedMemory
      - totalResourceNetworkMemory=$.totalResource.networkMemory
      - freeResourceCpuCores=$.freeResource.cpuCores
      - freeResourceTaskHeapMemory=$.freeResource.taskHeapMemory
      - freeResourceTaskOffHeapMemory=$.freeResource.taskOffHeapMemory
      - freeResourceManagedMemory=$.freeResource.managedMemory
      - freeResourceNetworkMemory=$.freeResource.networkMemory
      - hardwareCpuCores=$.hardware.cpuCores
      - hardwarePhysicalMemory=$.hardware.physicalMemory
      - hardwareFreeMemory=$.hardware.freeMemory
      - hardwareManagedMemory=$.hardware.managedMemory
      - memoryConfigurationFrameworkHeap=$.memoryConfiguration.frameworkHeap
      - memoryConfigurationTaskHeap=$.memoryConfiguration.taskHeap
      - memoryConfigurationFrameworkOffHeap=$.memoryConfiguration.frameworkOffHeap
      - memoryConfigurationTaskOffHeap=$.memoryConfiguration.taskOffHeap
      - memoryConfigurationNetworkMemory=$.memoryConfiguration.networkMemory
      - memoryConfigurationManagedMemory=$.memoryConfiguration.managedMemory
      - memoryConfigurationJvmMetaspace=$.memoryConfiguration.jvmMetaspace
      - memoryConfigurationJvmOverhead=$.memoryConfiguration.jvmOverhead
      - memoryConfigurationTotalFlinkMemory=$.memoryConfiguration.totalFlinkMemory
      - memoryConfigurationTotalProcessMemory=$.memoryConfiguration.totalProcessMemory
    units:
      - hardwarePhysicalMemory = B->GB
      - hardwareFreeMemory = B->MB
      - hardwareManagedMemory = B->MB
      - memoryConfigurationFrameworkHeap = B->MB
      - memoryConfigurationTaskHeap = B->MB
      - memoryConfigurationManagedMemory = B->MB
      - memoryConfigurationFrameworkOffHeap = B->MB
      - memoryConfigurationTaskOffHeap = B->MB
      - memoryConfigurationNetworkMemory = B->MB
      - memoryConfigurationJvmMetaspace = B->MB
      - memoryConfigurationJvmOverhead = B->MB
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: /proxy/^_^application_id^_^/taskmanagers
      method: GET
      ssl: ^_^ssl^_^
      authorization:
        type: ^_^authType^_^
        basicAuthUsername: ^_^username^_^
        basicAuthPassword: ^_^password^_^
        digestAuthUsername: ^_^username^_^
        digestAuthPassword: ^_^password^_^
      parseType: jsonPath
      parseScript: '$.taskmanagers.*'

  - name: taskmanager_metrics
    i18n:
      zh-CN: TaskManager Metrics
      en-US: TaskManager Metrics
      ja-JP: TaskManagerメトリクス
    priority: 3
    fields:
      - field: container_id
        i18n:
          zh-CN: Container ID
          en-US: Container ID
          ja-JP: コンテナID
        type: 1
        label: true
      - field: id
        type: 1
        i18n:
          zh-CN: 监控项
          en-US: key
          ja-JP: キー
        label: true
      - field: value
        type: 0
        i18n:
          zh-CN: 值
          en-US: value
          ja-JP: 値
        unit: MB
    units:
      - value=B->MB
    calculates:
      - container_id="^o^id^o^"
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: /proxy/^_^application_id^_^/taskmanagers/^o^id^o^/metrics?get=Status.JVM.Memory.Heap.Used,Status.JVM.Memory.Heap.Max,Status.Shuffle.Netty.UsedMemory,Status.Shuffle.Netty.TotalMemory,Status.Flink.Memory.Managed.Used,Status.Flink.Memory.Managed.Total,Status.JVM.Memory.Metaspace.Used,Status.JVM.Memory.Metaspace.Max
      method: GET
      ssl: ^_^ssl^_^
      authorization:
        type: ^_^authType^_^
        basicAuthUsername: ^_^username^_^
        basicAuthPassword: ^_^password^_^
        digestAuthUsername: ^_^username^_^
        digestAuthPassword: ^_^password^_^
      parseType: jsonPath
      parseScript: '$.*'
