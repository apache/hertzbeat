# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The monitoring type category：service-application service monitoring db-database monitoring custom-custom monitoring os-operating system monitoring
category: server
# The monitoring type eg: linux windows tomcat mysql aws...
app: redfish
# The monitoring i18n name
name:
  zh-CN: Redfish
  en-US: Redfish
  ja-JP: Redfish
# The description and help of this monitoring type
help:
  zh-CN: Hertzbeat 对支持 Redfish 服务的服务器进行测量监控。<br>您可以点击 “<i>新建 Redfish</i>” 并进行配置，或者选择“<i>更多操作</i>”，导入已有配置。
  en-US: Hertzbeat monitoring servers supporting Redfish services. You could click the "<i>New Redfish</i>" button and proceed with the configuration or import an existing setup through the "<i>More Actions</i>" menu.
  zh-TW: Hertzbeat 對支援 Redfish 服務的伺服器進行測量監控。<br>您可以點擊“<i>Redfish</i>”並進行配寘，或者選擇“<i>更多操作</i>”，導入已有配寘。
  ja-JP: Hertzbeat は Redfishをサポートするサーバーの一般的なメトリクスを監視します。<br>「<i>新規 FTPサーバー</i>」をクリックしてパラメタを設定した後、新規することができます。
helpLink:
  zh-CN: https://hertzbeat.apache.org/zh-cn/docs/help/redfish
  en-US: https://hertzbeat.apache.org/docs/help/redfish
# Input params define for monitoring(render web ui by the definition)
params:
  # field-param field key
  - field: host
    # name-param field display i18n name
    name:
      zh-CN: 目标Host
      en-US: Target Host
      ja-JP: 目標ホスト
    # type-param field type(most mapping the html input type)
    type: host
    # required-true or false
    required: true
  # field-param field key
  - field: port
    # name-param field display i18n name
    name:
      zh-CN: 端口
      en-US: Port
      ja-JP: ポート
    # type-param field type(most mapping the html input type)
    type: number
    # when type is number, range is required
    range: '[0,65535]'
    # required-true or false
    required: true
    # default value
    defaultValue: 443
  # field-param field key
  - field: timeout
    # name-param field display i18n name
    name:
      zh-CN: 查询超时时间
      en-US: Query Timeout
      ja-JP: クエリタイムアウト
    # type-param field type(most mapping the html input type)
    type: number
    # required-true or false
    required: false
    # hide param-true or false
    hide: true
    # default value
    defaultValue: 6000
  # field-param field key
  - field: username
    # name-param field display i18n name
    name:
      zh-CN: 用户名
      en-US: Username
      ja-JP: ユーザー名
    # type-param field type(most mapping the html input type)
    type: text
    # when type is text, use limit to limit string length
    limit: 50
    # required-true or false
    required: false
  # field-param field key
  - field: password
    # name-param field display i18n name
    name:
      zh-CN: 密码
      en-US: Password
      ja-JP: パスワード
    # type-param field type(most mapping the html input tag)
    type: password
    # required-true or false
    required: false
# collect metrics config list
metrics:
  # metrics - cpu
  - name: Chassis
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 0
    # collect metrics content
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: id
        type: 1
        i18n:
          zh-CN: 机箱唯一标识符
          en-US: Chassis Unique Identifier
          ja-JP: シャーシID
      - field: name
        type: 1
        i18n:
          zh-CN: 机箱名称
          en-US: Chassis Name
          ja-JP: シャーシ名
      - field: type
        type: 1
        i18n:
          zh-CN: 机箱类型
          en-US: Chassis Type
          ja-JP: シャーシタイプ
      - field: state
        type: 1
        i18n:
          zh-CN: 机箱状态
          en-US: Chassis State
          ja-JP: シャーシ状態
      - field: health
        type: 1
        i18n:
          zh-CN: 机箱健康状态
          en-US: Chassis Health
          ja-JP: シャーシ健全状態
    # (optional)metrics field alias name, it is used as an alias field to map and convert the collected data and metrics field
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redfish
    # the config content when protocol is redfish
    redfish:
      # redfish host: ipv4 ipv6 domain
      host: ^_^host^_^
      # redfish port
      port: ^_^port^_^
      # redfish username
      username: ^_^username^_^
      # redfish password
      password: ^_^password^_^
      # timeout unit：ms
      timeout: ^_^timeout^_^
      jsonPath:
        - $.['@odata.id']
        - $.Name
        - $.ChassisType
        - $.Status.State
        - $.Status.Health

  - name: Battery
    priority: 1
    fields:
      - field: id
        type: 1
        i18n:
          zh-CN: 电池唯一标识符
          en-US: Battery Unique Identifier
          ja-JP: 電池ID
      - field: name
        type: 1
        i18n:
          zh-CN: 电池名称
          en-US: Battery Name
          ja-JP: 電池名
      - field: state
        type: 1
        i18n:
          zh-CN: 电池状态
          en-US: Battery State
          ja-JP: 電池状態
      - field: health
        type: 1
        i18n:
          zh-CN: 电池健康状态
          en-US: Battery Health
          ja-JP: 電池健全状態
      - field: charge_status
        type: 1
        i18n:
          zh-CN: 电池充电状态
          en-US: Battery Charge Status
          ja-JP: 電池充電状況
    protocol: redfish
    redfish:
      # redfish host: ipv4 ipv6 domain
      host: ^_^host^_^
      # redfish port
      port: ^_^port^_^
      # redfish username
      username: ^_^username^_^
      # redfish password
      password: ^_^password^_^
      # timeout unit：ms
      timeout: ^_^timeout^_^
      jsonPath:
        - $.['@odata.id']
        - $.Name
        - $.Status.State
        - $.Status.Health
        - $.ChargeState

  - name: Fan
    priority: 2
    fields:
      - field: id
        type: 1
        i18n:
          zh-CN: 风扇唯一标识符
          en-US: Fan Unique Identifier
          ja-JP: ファンID
      - field: name
        type: 1
        i18n:
          zh-CN: 风扇名称
          en-US: Fan Name
          ja-JP: ファン名
      - field: state
        type: 1
        i18n:
          zh-CN: 风扇状态
          en-US: Fan State
          ja-JP: ファン状態
      - field: health
        type: 1
        i18n:
          zh-CN: 风扇健康状态
          en-US: Fan Health
          ja-JP: ファン健全状態
      - field: temperature
        type: 0
        i18n:
          zh-CN: 传感器温度
          en-US: Sensor Temperature
          ja-JP: センサー温度
      - field: speed
        type: 0
        i18n:
          zh-CN: 风扇转速
          en-US: Fan Speed
          ja-JP: ファンスピード
    protocol: redfish
    redfish:
      # redfish host: ipv4 ipv6 domain
      host: ^_^host^_^
      # redfish port
      port: ^_^port^_^
      # redfish username
      username: ^_^username^_^
      # redfish password
      password: ^_^password^_^
      # timeout unit：ms
      timeout: ^_^timeout^_^
      # redfish fan collection schema
      schema: /redfish/v1/Chassis/{ChassisId}/ThermalSubsystem/Fans
      jsonPath:
        - $.['@odata.id']
        - $.Name
        - $.Status.State
        - $.Status.Health
        - $.SpeedPercent.Reading
        - $.SpeedPercent.SpeedRPM
