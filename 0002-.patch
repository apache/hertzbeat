From e333cf6ed5fac59525e16803434fc240df17028c Mon Sep 17 00:00:00 2001
From: cuijianzhong <shangyuancjz@126.com>
Date: Fri, 28 Mar 2025 15:13:49 +0800
Subject: [PATCH 2/2] =?UTF-8?q?=E5=A2=9E=E5=8A=A0=E8=AE=BE=E5=A4=87?=
 =?UTF-8?q?=E7=B1=BB=E5=9E=8B?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../collector/collect/s7/S7CollectImpl.java   | 10 ++-
 .../entity/job/protocol/S7Protocol.java       |  2 +
 .../src/main/resources/define/app-s7.yml      | 72 +++++++++++--------
 3 files changed, 51 insertions(+), 33 deletions(-)

diff --git a/hertzbeat-collector/hertzbeat-collector-basic/src/main/java/org/apache/hertzbeat/collector/collect/s7/S7CollectImpl.java b/hertzbeat-collector/hertzbeat-collector-basic/src/main/java/org/apache/hertzbeat/collector/collect/s7/S7CollectImpl.java
index 6496d62d..30706b7f 100644
--- a/hertzbeat-collector/hertzbeat-collector-basic/src/main/java/org/apache/hertzbeat/collector/collect/s7/S7CollectImpl.java
+++ b/hertzbeat-collector/hertzbeat-collector-basic/src/main/java/org/apache/hertzbeat/collector/collect/s7/S7CollectImpl.java
@@ -49,6 +49,10 @@ public class S7CollectImpl extends AbstractPlcCollectImpl {
         if (!StringUtils.hasText(s7.getSlotId())) {
             s7.setSlotId("0");
         }
+        // check controllerType
+        if (!StringUtils.hasText(s7.getControllerType())) {
+            s7.setControllerType("S7_1500");
+        }
         if (!StringUtils.hasText(s7.getTimeout())) {
             s7.setTimeout("5000");
         }
@@ -72,8 +76,8 @@ public class S7CollectImpl extends AbstractPlcCollectImpl {
     @Override
     protected String getConnectionString(Metrics metrics) {
         S7Protocol s7Protocol = metrics.getS7();
-        return "s7://" + s7Protocol.getHost() + ":" + s7Protocol.getPort() + "?remote-rack:" + s7Protocol.getRackId() +
-                "&remote-slot:" + s7Protocol.getSlotId() + "&controller-type=S7-1500";
+        return "s7://" + s7Protocol.getHost() + ":" + s7Protocol.getPort() + "?remote-rack:" + s7Protocol.getRackId()
+                + "&remote-slot:" + s7Protocol.getSlotId() + "&controller-type=" + s7Protocol.getControllerType();
     }
 
     @Override
@@ -83,7 +87,7 @@ public class S7CollectImpl extends AbstractPlcCollectImpl {
         // Create a new read request:
         PlcReadRequest.Builder requestBuilder = connection.readRequestBuilder();
         for (int i = 0; i < registerAddressList.size(); i++) {
-            String s1 = s7Protocol.getAddressSyntax() + ":" + registerAddressList.get(i);
+            String s1 = registerAddressList.get(i);
             requestBuilder.addTagAddress(metrics.getS7().getAddressSyntax() + ":" + i, s1);
         }
         return requestBuilder.build();
diff --git a/hertzbeat-common/src/main/java/org/apache/hertzbeat/common/entity/job/protocol/S7Protocol.java b/hertzbeat-common/src/main/java/org/apache/hertzbeat/common/entity/job/protocol/S7Protocol.java
index dd7f1481..cebe9e8a 100644
--- a/hertzbeat-common/src/main/java/org/apache/hertzbeat/common/entity/job/protocol/S7Protocol.java
+++ b/hertzbeat-common/src/main/java/org/apache/hertzbeat/common/entity/job/protocol/S7Protocol.java
@@ -51,6 +51,8 @@ public class S7Protocol implements Protocol {
 
     private String slotId;
 
+    private String controllerType;
+
     private String timeout;
 
     private List<String> registerAddresses;
diff --git a/hertzbeat-manager/src/main/resources/define/app-s7.yml b/hertzbeat-manager/src/main/resources/define/app-s7.yml
index c2c69fa6..63fa1b64 100644
--- a/hertzbeat-manager/src/main/resources/define/app-s7.yml
+++ b/hertzbeat-manager/src/main/resources/define/app-s7.yml
@@ -73,6 +73,16 @@ params:
     # required-true or false
     required: false
     defaultValue: 0
+  - field: controllerType
+    # name-param field display i18n name
+    name:
+      zh-CN: controllerType
+      en-US: controllerType
+    # type-param field type(most mapping the html input type)
+    type: text
+    # required-true or false
+    required: false
+    defaultValue: S7_1500
   - field: timeout
     name:
       zh-CN: 请求超时时间(ms)
@@ -135,37 +145,37 @@ metrics:
           zh-CN: address-0
           en-US: address-0
       # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
-      - field: address-1-0
+      - field: address-1
         type: 0
         i18n:
-          zh-CN: address-1-0
-          en-US: address-1-0
-      - field: address-1-1
+          zh-CN: address-1
+          en-US: address-1
+      - field: address-2
         type: 0
         i18n:
-          zh-CN: address-1-1
-          en-US: address-1-1
-      - field: address-1-2
+          zh-CN: address-2
+          en-US: address-2
+      - field: address-3
         type: 0
         i18n:
-          zh-CN: address-1-2
-          en-US: address-1-2
+          zh-CN: address-3
+          en-US: address-3
     # 指标别名列表，按照寄存器地址来进行命名的
     # 例如 地址为下标为0 ，值为m  holding-register:0
     # 地址为下标为1，值为m[2]  holding-register:1-0  holding-register:1-1
     aliasFields:
       - responseTime
       - holding-register:0
-      - holding-register:1-0
-      - holding-register:1-1
-      - holding-register:1-2
+      - holding-register:1
+      - holding-register:2
+      - holding-register:3
       # mapping and conversion expressions, use thesand aliasField above to calculate metrics value# (可选)指标映射转换计算表达式，与上面的别名一起作用，计算出最终需要的指标值# eg: cores=core1+core2, usage=usage, waitTimeallTime-runningTime
     calculates:
       - responseTime=responseTime
       - address-0=holding-register:0
-      - address-1-0=holding-register:1-0
-      - address-1-1=holding-register:1-1
-      - address-1-2=holding-register:1-2
+      - address-1=holding-register:1
+      - address-2=holding-register:2
+      - address-3=holding-register:3
     protocol: s7
     # the config content when protocol is http
     s7:
@@ -177,6 +187,7 @@ metrics:
       addressSyntax: holding-register
       rackId: ^_^rackId^_^
       slotId: ^_^slotId^_^
+      controllerType: ^_^controllerType^_^
       timeout: ^_^timeout^_^
       registerAddresses: [ ^_^holdingRegisterAddresses^_^ ]
 
@@ -203,37 +214,37 @@ metrics:
           zh-CN: address-0
           en-US: address-0
       # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
-      - field: address-1-0
+      - field: address-1
         type: 0
         i18n:
-          zh-CN: address-1-0
-          en-US: address-1-0
-      - field: address-1-1
+          zh-CN: address-1
+          en-US: address-1
+      - field: address-2
         type: 0
         i18n:
-          zh-CN: address-1-1
-          en-US: address-1-1
-      - field: address-1-2
+          zh-CN: address-2
+          en-US: address-2
+      - field: address-3
         type: 0
         i18n:
-          zh-CN: address-1-2
-          en-US: address-1-2
+          zh-CN: address-3
+          en-US: address-3
     # 指标别名列表，按照寄存器地址来进行命名的
     # 例如 地址为下标为0 ，值为m  coil:0
     # 地址为下标为1，值为m[2]  coil:1-0  coil:1-1
     aliasFields:
       - responseTime
       - coil:0
-      - coil:1-0
-      - coil:1-1
-      - coil:1-2
+      - coil:1
+      - coil:2
+      - coil:3
       # mapping and conversion expressions, use thesand aliasField above to calculate metrics value# (可选)指标映射转换计算表达式，与上面的别名一起作用，计算出最终需要的指标值# eg: cores=core1+core2, usage=usage, waitTimeallTime-runningTime
     calculates:
       - responseTime=responseTime
       - address-0=coil:0
-      - address-1-0=coil:1-0
-      - address-1-1=coil:1-1
-      - address-1-2=coil:1-2
+      - address-1=coil:1
+      - address-2=coil:2
+      - address-3=coil:3
     protocol: s7
     # the config content when protocol is http
     s7:
@@ -245,6 +256,7 @@ metrics:
       addressSyntax: coil
       rackId: ^_^rackId^_^
       slotId: ^_^slotId^_^
+      controllerType: ^_^controllerType^_^
       timeout: ^_^timeout^_^
       registerAddresses: [ ^_^coilRegisterAddresses^_^ ]
 
-- 
2.43.0.windows.1

