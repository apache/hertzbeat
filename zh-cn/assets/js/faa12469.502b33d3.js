"use strict";(self.webpackChunkhertzbeat=self.webpackChunkhertzbeat||[]).push([[40579],{15680:(e,n,t)=>{t.d(n,{xA:()=>m,yg:()=>d});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=s(t),d=r,h=c["".concat(p,".").concat(d)]||c[d]||u[d]||i;return t?a.createElement(h,l(l({ref:n},m),{},{components:t})):a.createElement(h,l({ref:n},m))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=c;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},41702:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=t(58168),r=(t(96540),t(15680));const i={id:"extend-http-default",title:"HTTP\u534f\u8bae\u7cfb\u7edf\u9ed8\u8ba4\u89e3\u6790\u65b9\u5f0f",sidebar_label:"\u7cfb\u7edf\u9ed8\u8ba4\u89e3\u6790\u65b9\u5f0f"},l=void 0,o={unversionedId:"advanced/extend-http-default",id:"advanced/extend-http-default",title:"HTTP\u534f\u8bae\u7cfb\u7edf\u9ed8\u8ba4\u89e3\u6790\u65b9\u5f0f",description:"HTTP\u63a5\u53e3\u8c03\u7528\u83b7\u53d6\u54cd\u5e94\u6570\u636e\u540e\uff0c\u7528 Apache HertzBeat\u2122 \u9ed8\u8ba4\u7684\u89e3\u6790\u65b9\u5f0f\u53bb\u89e3\u6790\u54cd\u5e94\u6570\u636e\u3002",source:"@site/i18n/zh-cn/docusaurus-plugin-content-docs/current/advanced/extend-http-default.md",sourceDirName:"advanced",slug:"/advanced/extend-http-default",permalink:"/zh-cn/docs/advanced/extend-http-default",draft:!1,editUrl:"https://github.com/apache/hertzbeat/edit/master/home/i18n/zh-cn/docusaurus-plugin-content-docs/current/advanced/extend-http-default.md",tags:[],version:"current",frontMatter:{id:"extend-http-default",title:"HTTP\u534f\u8bae\u7cfb\u7edf\u9ed8\u8ba4\u89e3\u6790\u65b9\u5f0f",sidebar_label:"\u7cfb\u7edf\u9ed8\u8ba4\u89e3\u6790\u65b9\u5f0f"},sidebar:"docs",previous:{title:"HTTP\u534f\u8bae\u81ea\u5b9a\u4e49\u76d1\u63a7",permalink:"/zh-cn/docs/advanced/extend-http"},next:{title:"JsonPath\u89e3\u6790\u65b9\u5f0f",permalink:"/zh-cn/docs/advanced/extend-http-jsonpath"}},p={},s=[{value:"HertzBeat\u6570\u636e\u683c\u5f0f\u89c4\u8303",id:"hertzbeat\u6570\u636e\u683c\u5f0f\u89c4\u8303",level:3}],m={toc:s};function u(e){let{components:n,...t}=e;return(0,r.yg)("wrapper",(0,a.A)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"HTTP\u63a5\u53e3\u8c03\u7528\u83b7\u53d6\u54cd\u5e94\u6570\u636e\u540e\uff0c\u7528 Apache HertzBeat\u2122 \u9ed8\u8ba4\u7684\u89e3\u6790\u65b9\u5f0f\u53bb\u89e3\u6790\u54cd\u5e94\u6570\u636e\u3002")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"\u6b64\u9700\u63a5\u53e3\u54cd\u5e94\u6570\u636e\u7ed3\u6784\u7b26\u5408HertzBeat\u6307\u5b9a\u7684\u6570\u636e\u7ed3\u6784\u89c4\u5219")),(0,r.yg)("h3",{id:"hertzbeat\u6570\u636e\u683c\u5f0f\u89c4\u8303"},"HertzBeat\u6570\u636e\u683c\u5f0f\u89c4\u8303"),(0,r.yg)("p",null,"\u6ce8\u610f\u26a0\ufe0f \u54cd\u5e94\u6570\u636e\u4e3aJSON"),(0,r.yg)("p",null,"\u5355\u5c42\u683c\u5f0f\uff1akey-value"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "metricName1": "metricValue",\n  "metricName2": "metricValue",\n  "metricName3": "metricValue",\n  "metricName4": "metricValue"\n}\n')),(0,r.yg)("p",null,"\u591a\u5c42\u683c\u5f0f\uff1a\u6570\u7ec4\u91cc\u9762\u5957key-value"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "metricName1": "metricValue",\n    "metricName2": "metricValue",\n    "metricName3": "metricValue",\n    "metricName4": "metricValue"\n  },\n  {\n    "metricName1": "metricValue",\n    "metricName2": "metricValue",\n    "metricName3": "metricValue",\n    "metricName4": "metricValue"\n  }\n]\n')),(0,r.yg)("p",null,"\u6837\u4f8b\uff1a\n\u67e5\u8be2\u81ea\u5b9a\u4e49\u7cfb\u7edf\u7684CPU\u4fe1\u606f\uff0c\u5176\u66b4\u9732\u63a5\u53e3\u4e3a ",(0,r.yg)("inlineCode",{parentName:"p"},"/metrics/cpu"),"\uff0c\u6211\u4eec\u9700\u8981\u5176\u4e2d\u7684",(0,r.yg)("inlineCode",{parentName:"p"},"hostname,core,useage"),"\u6307\u6807\n\u82e5\u53ea\u6709\u4e00\u53f0\u865a\u62df\u673a\uff0c\u5176\u5355\u5c42\u683c\u5f0f\u4e3a:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "hostname": "linux-1",\n  "core": 1,\n  "usage": 78.0,\n  "allTime": 200,\n  "runningTime": 100\n}\n')),(0,r.yg)("p",null,"\u82e5\u6709\u591a\u53f0\u865a\u62df\u673a\uff0c\u5176\u591a\u5c42\u683c\u5f0f\u4e3a:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "hostname": "linux-1",\n    "core": 1,\n    "usage": 78.0,\n    "allTime": 200,\n    "runningTime": 100\n  },\n  {\n    "hostname": "linux-2",\n    "core": 3,\n    "usage": 78.0,\n    "allTime": 566,\n    "runningTime": 34\n  },\n  {\n    "hostname": "linux-3",\n    "core": 4,\n    "usage": 38.0,\n    "allTime": 500,\n    "runningTime": 20\n  }\n]\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"\u5bf9\u5e94\u7684\u76d1\u63a7\u6a21\u677fYML\u53ef\u4ee5\u914d\u7f6e\u4e3a\u5982\u4e0b")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"category: custom\n# The monitoring type eg: linux windows tomcat mysql aws...\napp: a_example\n# The monitoring i18n name\nname:\n  zh-CN: \u6a21\u62df\u5e94\u7528\n  en-US: EXAMPLE APP\n# The description and help of this monitoring type\nhelp:\n  zh-CN: HertzBeat \u652f\u6301\u81ea\u5b9a\u4e49\u76d1\u63a7\uff0c\u60a8\u53ea\u9700\u914d\u7f6e\u76d1\u63a7\u6a21\u677f YML \u5c31\u80fd\u9002\u914d\u4e00\u6b3e\u81ea\u5b9a\u4e49\u7684\u76d1\u63a7\u7c7b\u578b\u3002<br>\u5b9a\u4e49\u6d41\u7a0b\u5982\u4e0b\uff1aHertzBeat \u9875\u9762 -> \u76d1\u63a7\u6a21\u677f\u83dc\u5355 -> \u65b0\u589e\u76d1\u63a7\u7c7b\u578b -> \u914d\u7f6e\u81ea\u5b9a\u4e49\u76d1\u63a7\u6a21\u677fYML -> \u70b9\u51fb\u4fdd\u5b58\u5e94\u7528 -> \u4f7f\u7528\u65b0\u76d1\u63a7\u7c7b\u578b\u6dfb\u52a0\u76d1\u63a7\u3002\n  en-US: \"HertzBeat supports custom monitoring, and you only need to configure the monitoring template YML to adapt to a custom monitoring type. <br>Definition process as follow: HertzBeat Pages -> Main Menu -> Monitor Template -> edit and save -> apply this template.\"\n  zh-TW: HertzBeat\u652f\u6301\u81ea\u5b9a\u7fa9\u76e3\u63a7\uff0c\u60a8\u53ea\u9700\u914d\u5bd8\u76e3\u63a7\u6a21\u677fYML\u5c31\u80fd\u9069\u914d\u4e00\u6b3e\u81ea\u5b9a\u7fa9\u7684\u76e3\u63a7\u985e\u578b\u3002<br>\u5b9a\u7fa9\u6d41\u7a0b\u5982\u4e0b\uff1aHertzBeat\u9801\u9762->\u76e3\u63a7\u6a21\u677f\u9078\u55ae->\u65b0\u589e\u76e3\u63a7\u985e\u578b->\u914d\u5bd8\u81ea\u5b9a\u7fa9\u76e3\u63a7\u6a21\u677fYML ->\u9ede\u64ca\u4fdd\u5b58\u61c9\u7528->\u4f7f\u7528\u65b0\u76e3\u63a7\u985e\u578b\u6dfb\u52a0\u76e3\u63a7\u3002\nhelpLink:\n  zh-CN: https://hertzbeat.apache.org/zh-cn/docs/advanced/extend-point/\n  en-US: https://hertzbeat.apache.org/docs/advanced/extend-point/\n# Input params define for monitoring(render web ui by the definition)\nparams:\n  # field-param field key\n  - field: host\n    # name-param field display i18n name\n    name:\n      zh-CN: \u76ee\u6807Host\n      en-US: Target Host\n    # type-param field type(most mapping the html input type)\n    type: host\n    # required-true or false\n    required: true\n  # field-param field key\n  - field: port\n    # name-param field display i18n name\n    name:\n      zh-CN: \u7aef\u53e3\n      en-US: Port\n    # type-param field type(most mapping the html input type)\n    type: number\n    # when type is number, range is required\n    range: '[0,65535]'\n    # required-true or false\n    required: true\n    # default value\n    defaultValue: 80\n    # param field input placeholder\n    placeholder: 'Please Input Port'\n  # field-param field key\n  - field: username\n    # name-param field display i18n name\n    name:\n      zh-CN: \u7528\u6237\u540d\n      en-US: Username\n    # type-param field type(most mapping the html input type)\n    type: text\n    # when type is text, use limit to limit string length\n    limit: 50\n    # required-true or false\n    required: false\n    # hide param-true or false\n    hide: true\n  # field-param field key\n  - field: password\n    # name-param field display i18n name\n    name:\n      zh-CN: \u7528\u6237\u5bc6\u7801\n      en-US: Password\n    # type-param field type(most mapping the html input tag)\n    type: password\n    # required-true or false\n    required: false\n    # hide param-true or false\n    hide: true\n  # field-param field key\n  - field: ssl\n    # name-param field display i18n name\n    name:\n      zh-CN: \u542f\u52a8SSL\n      en-US: SSL\n    # type-param field type(boolean mapping the html switch tag)\n    type: boolean\n    # required-true or false\n    required: false\n  # field-param field key\n  - field: method\n    # name-param field display i18n name\n    name:\n      zh-CN: \u8bf7\u6c42\u65b9\u5f0f\n      en-US: Method\n    # type-param field type(radio mapping the html radio tag)\n    type: radio\n    # required-true or false\n    required: true\n    # when type is radio checkbox, use option to show optional values {name1:value1,name2:value2}\n    options:\n      - label: GET\n        value: GET\n      - label: POST\n        value: POST\n      - label: PUT\n        value: PUT\n      - label: DELETE\n        value: DELETE\n  # field-param field key\n  - field: headers\n    # name-param field display i18n name\n    name:\n      zh-CN: \u8bf7\u6c42Headers\n      en-US: Headers\n    # type-param field type(key-value mapping the html key-value input tags)\n    type: key-value\n    # required-true or false\n    required: false\n    # when type is key-value, use keyAlias to config key alias name\n    keyAlias: Header Name\n    # when type is key-value, use valueAlias to config value alias name\n    valueAlias: Header Value\n# collect metrics config list\nmetrics:\n  # metrics - cpu\n  - name: cpu\n    # metrics name i18n label\n    i18n:\n      zh-CN: CPU \u4fe1\u606f\n      en-US: CPU Info\n    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel\n    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue\n    priority: 0\n    # collect metrics content\n    fields:\n      # field-metric name, i18n-metric name i18n label, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field\n      - field: hostname\n        type: 1\n        label: true\n        i18n:\n          zh-CN: \u4e3b\u673a\u540d\u79f0\n          en-US: Host Name\n      - field: usage\n        type: 0\n        unit: '%'\n        i18n:\n          zh-CN: \u4f7f\u7528\u7387\n          en-US: Usage\n      - field: cores\n        type: 0\n        i18n:\n          zh-CN: \u6838\u6570\n          en-US: Cores\n      - field: waitTime\n        type: 0\n        unit: s\n        i18n:\n          zh-CN: \u4e3b\u673a\u540d\u79f0\n          en-US: Host Name\n    # (optional)metrics field alias name, it is used as an alias field to map and convert the collected data and metrics field\n    aliasFields:\n      - hostname\n      - core1\n      - core2\n      - usage\n      - allTime\n      - runningTime\n    # mapping and conversion expressions, use these and aliasField above to calculate metrics value\n    # eg: cores=core1+core2, usage=usage, waitTime=allTime-runningTime\n    calculates:\n      - hostname=hostname\n      - cores=core1+core2\n      - usage=usage\n      - waitTime=allTime-runningTime\n    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk\n    protocol: http\n    # the config content when protocol is http\n    http:\n      # http host: ipv4 ipv6 domain\n      host: ^_^host^_^\n      # http port\n      port: ^_^port^_^\n      # http url\n      url: /metrics/cpu\n      # http method: GET POST PUT DELETE PATCH\n      method: GET\n      # if enabled https\n      ssl: false\n      # http request header content\n      headers:\n        ^_^headers^_^: ^_^headers^_^\n      # http request params\n      params:\n        param1: param1\n        param2: param2\n      # http auth\n      authorization:\n        # http auth type: Basic Auth, Digest Auth, Bearer Token\n        type: Basic Auth\n        basicAuthUsername: ^_^username^_^\n        basicAuthPassword: ^_^password^_^\n      # http response data parse type: default-hertzbeat rule, jsonpath-jsonpath script, website-for website monitoring, prometheus-prometheus exporter rule\n      parseType: jsonPath\n      parseScript: '$'\n")))}u.isMDXComponent=!0}}]);