# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The monitoring type category: service-application service monitoring, db-database monitoring, custom-custom monitoring.
category: mid
# The monitoring application type name (consistent with the file name)
app: pulsar
name:
  zh-CN: Pulsar
  en-US: Pulsar
# The description and help of this monitoring type
help:
  zh-CN: Hertzbeat 使用 Prometheus PromQL 从 Prometheus 服务器中查询到 Pulsar 的通用指标数据来进行监控。此方案适用于 Prometheus 已监控 Pulsar，需要从 Prometheus 服务器抓取 Pulsar 的监控数据。<br>您可以点击 “<i>新建 Pulsar</i>” 并进行配置，或者选择“<i>更多操作</i>”，导入已有配置。
  en-US: HertzBeat uses Prometheus PromQL query metrics data from Prometheus Server to monitoring Pulsar. This solution is suitable for Prometheus to monitor Pulsar, and it need to capture Pulsar monitoring data from the Prometheus server. <br>You could click the "<i>New Pulsar</i>" button and proceed with the configuration or import an existing setup through the "<i>More Actions</i>" menu.
  zh-TW: Hertzbeat 使用 Prometheus PromQL 從 Prometheus 服務器中查詢到 Pulsar 的通用指標數據來進行監控。此方案適用于 Prometheus 已監控 Pulsar，需要從 Prometheus 服務器抓取 Pulsar 的監控數據。<br>您可以點擊 “<i>新建 Pulsar</i>” 並進行配置，或者選擇“<i>更多操作</i>”，導入已有配置。
helpLink:
  zh-CN: https://hertzbeat.apache.org/zh-cn/docs/help/pulsar
  en-US: https://hertzbeat.apache.org/docs/help/pulsar
# Input params define for monitoring(render web ui by the definition)
params:
  # field-param field key
  - field: host
    # name-param field display i18n name
    name:
      zh-CN: 目标Host
      en-US: Target Host
    # type-param field type(most mapping the html input type)
    type: host
    # required-true or false
    required: true
  - field: port
    name:
      zh-CN: 端口
      en-US: Port
    # type-param field type(most mapping the html input type)
    type: number
    # when type is number, range is required
    range: '[0,65535]'
    # default value
    defaultValue: 8030
    required: true
  - field: timeout
    name:
      zh-CN: 查询超时时间
      en-US: Query Timeout
    type: number
    required: false
    # hide param-true or false
    hide: true
    defaultValue: 6000
metrics:
  - name: pulsar_version_info
    i18n:
      zh-CN: 版本信息
      en-US: Version Info
    priority: 0
    fields:
      - field: version
        i18n:
          zh-CN: 版本信息
          en-US: Version Info
        type: 1
        label: false
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: http
    # the config content when protocol is http
    http:
      # http host: ipv4 ipv6 domain
      host: ^_^host^_^
      # port
      port: ^_^port^_^
      # url request interface path
      url: '/metrics'
      timeout: ^_^timeout^_^
      method: GET
      parseType: prometheus
  - name: process_start_time_seconds
    priority: 0
    fields:
      - field: value
        i18n:
          zh-CN: 进程启动时间
          en-US: Process Start Time
        type: 0
        label: false
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: http
    # the config content when protocol is http
    http:
      # http host: ipv4 ipv6 domain
      host: ^_^host^_^
      # port
      port: ^_^port^_^
      # url request interface path
      url: '/metrics'
      timeout: ^_^timeout^_^
      method: GET
      parseType: prometheus
  - name: process_open_fds
    priority: 0
    fields:
      - field: value
        type: 0
        i18n:
          zh-CN: 打开的文件描述符
          en-US: Open File Descriptors
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: http
    # the config content when protocol is http
    http:
      # http host: ipv4 ipv6 domain
      host: ^_^host^_^
      # port
      port: ^_^port^_^
      # url request interface path
      url: '/metrics'
      timeout: ^_^timeout^_^
      method: GET
      parseType: prometheus
  - name: process_max_fds
    priority: 0
    fields:
      - field: value
        type: 0
        i18n:
          zh-CN: 最大文件描述符
          en-US: Max File Descriptors
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: http
    # the config content when protocol is http
    http:
      # http host: ipv4 ipv6 domain
      host: ^_^host^_^
      # port
      port: ^_^port^_^
      # url request interface path
      url: '/metrics'
      timeout: ^_^timeout^_^
      method: GET
      parseType: prometheus
  - name: jvm_memory_pool_allocated_bytes
    priority: 0
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: http
    fields:
      - field: pool
        type: 1
      - field: value
        type: 0
    # the config content when protocol is http
    http:
      # http host: ipv4 ipv6 domain
      host: ^_^host^_^
      # port
      port: ^_^port^_^
      # url request interface path
      url: '/metrics'
      timeout: ^_^timeout^_^
      method: GET
      parseType: prometheus
  - name: jvm_memory_pool_bytes_used
    priority: 0
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: http
    fields:
      - field: pool
        type: 1
      - field: value
        type: 0
    # the config content when protocol is http
    http:
      # http host: ipv4 ipv6 domain
      host: ^_^host^_^
      # port
      port: ^_^port^_^
      # url request interface path
      url: '/metrics'
      timeout: ^_^timeout^_^
      method: GET
      parseType: prometheus
  - name: jvm_memory_pool_bytes_committed
    priority: 0
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: http
    fields:
      - field: pool
        type: 1
      - field: value
        type: 0
    # the config content when protocol is http
    http:
      # http host: ipv4 ipv6 domain
      host: ^_^host^_^
      # port
      port: ^_^port^_^
      # url request interface path
      url: '/metrics'
      timeout: ^_^timeout^_^
      method: GET
      parseType: prometheus
  - name: jvm_memory_pool_bytes_max

    priority: 0
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: http
    fields:
      - field: pool
        type: 1
      - field: value
        type: 0
    # the config content when protocol is http
    http:
      # http host: ipv4 ipv6 domain
      host: ^_^host^_^
      # port
      port: ^_^port^_^
      # url request interface path
      url: '/metrics'
      timeout: ^_^timeout^_^
      method: GET
      parseType: prometheus
