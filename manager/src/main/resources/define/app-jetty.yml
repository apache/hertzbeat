# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The monitoring type category：service-application service monitoring db-database monitoring custom-custom monitoring os-operating system monitoring
category: webserver
# The monitoring type eg: linux windows tomcat mysql aws...
app: jetty
# The monitoring i18n name
name:
  zh-CN: Jetty应用服务器
  en-US: Jetty AppServer
# The description and help of this monitoring type
help:
  zh-CN: HertzBeat 使用 <a class='help_module_content' href='https://hertzbeat.apache.org/zh-cn/docs/advanced/extend-jmx'>JMX 协议</a> 对 Jetty 应用服务器的通用性能指标（内存信息，类加载，线程状态，JVM等）进行采集监控。<br><span class='help_module_span'>注意⚠️：您需要在 Jetty 应用开启 JMX 服务, <a class='help_module_content' href='https://eclipse.dev/jetty/documentation/jetty-10/operations-guide/index.html#og-jmx-remote'>点击查看开启步骤</a>。</span>
  en-US: HertzBeat monitoring general performance metrics(memory pool, class loading, thread, jvm etc) of Jetty application server through <a class='help_module_content' href='https://hertzbeat.apache.org/zh-cn/docs/advanced/extend-jmx'>JMX protocol</a>. <br><span class='help_module_span'>Note⚠️:You should enable the JMX service in Jetty application. <a class='help_module_content' href='https://eclipse.dev/jetty/documentation/jetty-10/operations-guide/index.html#og-jmx-remote'>Click here to view the specific steps.</a></span>
  zh-TW: HertzBeat 使用 <a class='help_module_content' href='https://hertzbeat.apache.org/zh-cn/docs/advanced/extend-jmx'>JMX 協議</a> 對 Jetty 應用服務器的通用性能指標（內存信息，類加載，線程狀態，JVM等）進行采集監控。<br><span class='help_module_span'>注意⚠️：您需要在 Jetty 應用開啓 JMX 服務, <a class='help_module_content' href='https://eclipse.dev/jetty/documentation/jetty-10/operations-guide/index.html#og-jmx-remote'>點擊查看開啓步驟</a>。</span>
helpLink:
  zh-CN: https://hertzbeat.apache.org/zh-cn/docs/help/jetty/
  en-US: https://hertzbeat.apache.org/docs/help/jetty/
# Input params define for monitoring(render web ui by the definition)
params:
  # field-param field key
  - field: host
    # name-param field display i18n name
    name:
      zh-CN: 目标Host
      en-US: Target Host
    # type-param field type(most mapping the html input type)
    type: host
    # required-true or false
    required: true
    # field-param field key
  - field: port
    # name-param field display i18n name
    name:
      zh-CN: JMX端口
      en-US: JMX Port
    # type-param field type(most mapping the html input type)
    type: number
    # when type is number, range is required
    range: '[0,65535]'
    # required-true or false
    required: true
    # port default value
    defaultValue: 1099
    # field-param field key
  - field: url
    # name-param field display i18n name
    name:
      zh-CN: JMX URL
      en-US: JMX URL
    # type-param field type(most mapping the html input type)
    type: text
    # required-true or false
    required: false
    # hide param-true or false
    hide: true
    # param field input placeholder
    placeholder: 'service:jmx:rmi:///jndi/rmi://host:port/jmxrmi'
    # field-param field key
  - field: username
    # name-param field display i18n name
    name:
      zh-CN: 用户名
      en-US: Username
    # type-param field type(most mapping the html input type)
    type: text
    # when type is text, use limit to limit string length
    limit: 20
    # required-true or false
    required: false
    # hide param-true or false
    hide: true
    # field-param field key
  - field: password
    # name-param field display i18n name
    name:
      zh-CN: 密码
      en-US: Password
    # type-param field type(most mapping the html input type)
    type: password
    # required-true or false
    required: false
    # hide param-true or false
    hide: true
# collect metrics config list
metrics:
  # metrics - basic
  - name: basic
    i18n:
      zh-CN: 虚拟机基础信息
      en-US: JVM Basic
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 0
    # monitor metric content in metrics
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: VmName
        type: 1
        i18n:
          zh-CN: 名称
          en-US: Vm Name
      - field: VmVendor
        type: 1
        i18n:
          zh-CN: 厂商
          en-US: Vm Vendor
      - field: VmVersion
        type: 1
        i18n:
          zh-CN: 版本
          en-US: Vm Version
      - field: Uptime
        type: 0
        unit: ms
        i18n:
          zh-CN: 运行时长
          en-US: Up time
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: jmx
    # the config content when protocol is http
    jmx:
      # Host: ipv4 ipv6 domain name
      host: ^_^host^_^
      # port
      port: ^_^port^_^
      username: ^_^username^_^
      password: ^_^password^_^
      # jmx mbean object name
      objectName: java.lang:type=Runtime
      url: ^_^url^_^
    # metrics - server
  - name: server
    i18n:
      zh-CN: Jetty Server
      en-US: Jetty Server
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 1
    # monitor metric content in metrics
    fields:
    # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: version
        type: 1
        i18n:
          zh-CN: 版本
          en-US: Vm Version
      - field: state
        type: 1
        i18n:
          zh-CN: 运行状态
          en-US: Run State
      - field: startupTime
        type: 0
        i18n:
          zh-CN: 启动时间
          en-US: Startup Time
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: jmx
    # the config content when protocol is http
    jmx:
      # Host: ipv4 ipv6 domain name
      host: ^_^host^_^
      # port
      port: ^_^port^_^
      username: ^_^username^_^
      password: ^_^password^_^
      # jmx mbean object name
      objectName: org.eclipse.jetty.server:type=server,id=0
      url: ^_^url^_^
    # metrics - server
  - name: memory_pool
    i18n:
      zh-CN: 内存池
      en-US: Memory Pool
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 1
    # monitor metric content in metrics
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: name
        type: 1
        label: true
        i18n:
          zh-CN: 指标名称
          en-US: Name
      - field: committed
        type: 0
        i18n:
          zh-CN: 已分配内存
          en-US: Committed
      - field: init
        type: 0
        i18n:
          zh-CN: 初始化内存
          en-US: Init
      - field: max
        type: 0
        i18n:
          zh-CN: 最大内存
          en-US: Max
      - field: used
        type: 0
        i18n:
          zh-CN: 已使用内存
          en-US: Used
    # (optional)metrics field alias name, it is used as an alias field to map and convert the collected data and metrics field
    aliasFields:
      - Name
      - Usage->committed
      - Usage->init
      - Usage->max
      - Usage->used
    # mapping and conversion expressions, use these and aliasField above to calculate metrics value
    # eg: cores=core1+core2, usage=usage, waitTime=allTime-runningTime
    calculates:
      - name=Name
      - committed=Usage->committed
      - init=Usage->init
      - max=Usage->max
      - used=Usage->used
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: jmx
    # the config content when protocol is http
    jmx:
      # Host: ipv4 ipv6 domain name
      host: ^_^host^_^
      # port
      port: ^_^port^_^
      username: ^_^username^_^
      password: ^_^password^_^
      objectName: java.lang:type=MemoryPool,name=*
      url: ^_^url^_^
    # metrics - class_loading
  - name: class_loading
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 1
    # monitor metric content in metrics
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: LoadedClassCount
        type: 0
      - field: TotalLoadedClassCount
        type: 0
      - field: UnloadedClassCount
        type: 0
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: jmx
    # the config content when protocol is http
    jmx:
      # Host: ipv4 ipv6 domain name
      host: ^_^host^_^
      # port
      port: ^_^port^_^
      username: ^_^username^_^
      password: ^_^password^_^
      objectName: java.lang:type=ClassLoading
      url: ^_^url^_^
    # metrics - thread
  - name: thread
    i18n:
      zh-CN: 线程信息
      en-US: Thread
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 1
    # monitor metric content in metrics
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: TotalStartedThreadCount
        type: 0
        i18n:
          zh-CN: 已启动线程总数
          en-US: Total Started Thread Count
      - field: ThreadCount
        type: 0
        i18n:
          zh-CN: 活跃线程数
          en-US: Thread Count
      - field: PeakThreadCount
        type: 0
        i18n:
          zh-CN: 最大峰值线程数
          en-US: Peak Thread Count
      - field: DaemonThreadCount
        type: 0
        i18n:
          zh-CN: 活跃守护线程数
          en-US: Daemon Thread Count
      - field: CurrentThreadUserTime
        type: 0
        unit: s
        i18n:
          zh-CN: 线程占用的CPU时间(用户态)
          en-US: Current Thread User Time
      - field: CurrentThreadCpuTime
        type: 0
        unit: s
        i18n:
          zh-CN: 线程占用的CPU时间
          en-US: Current Thread CPU Time
    units:
      - CurrentThreadUserTime=NS->S
      - CurrentThreadCpuTime=NS->S
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: jmx
    # the config content when protocol is http
    jmx:
      # Host: ipv4 ipv6 domain name
      host: ^_^host^_^
      # port
      port: ^_^port^_^
      username: ^_^username^_^
      password: ^_^password^_^
      objectName: java.lang:type=Threading
      url: ^_^url^_^
    # metrics - webapp
  - name: webapp
    i18n:
      zh-CN: Web应用
      en-US: Webapp
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 2
    # monitor metric content in metrics
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: displayName
        type: 1
        label: true
        i18n:
          zh-CN: 应用名称
          en-US: App Name
      - field: contextPath
        type: 1
        i18n:
          zh-CN: 上下文路径
          en-US: Context Path
      - field: state
        type: 1
        i18n:
          zh-CN: 状态
          en-US: State
      - field: resourceBase
        type: 1
        i18n:
          zh-CN: 资源
          en-US: Resource Base
      - field: shutdown
        type : 1
        i18n:
          zh-CN: 是否关闭
          en-US: Shutdown
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: jmx
    # the config content when protocol is http
    jmx:
      host: ^_^host^_^
      port: ^_^port^_^
      username: ^_^username^_^
      password: ^_^password^_^
      objectName: org.eclipse.jetty.webapp:context=*,type=webappcontext,id=0
      url: ^_^url^_^
