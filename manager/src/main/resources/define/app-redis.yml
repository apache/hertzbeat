# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The monitoring type category：service-application service monitoring db-database monitoring custom-custom monitoring os-operating system monitoring
# 监控类型所属类别：service-应用服务监控 db-数据库监控 custom-自定义监控 os-操作系统监控 cn-云原生cloud native network-网络监控
category: db
# The monitoring type eg: linux windows tomcat mysql aws...
# 监控类型 eg: linux windows tomcat mysql aws..
app: redis
# The monitoring i18n name
# 监控类型国际化名称
name:
  zh-CN: Redis数据库
  en-US: Redis
# 监控所需输入参数定义(根据定义渲染页面UI)
# Input params define for monitoring(render web ui by
params:
  # field-param field key
  # field-变量字段标识符
  - field: host
    # name-param field display i18n name
    # name-参数字段显示名称
    name:
      zh-CN: 主机Host
      en-US: Host
    # type-param field type(most mapping the html input type)
    # type-字段类型,样式(大部分映射input标签type属性)
    type: host
    # required-true or false
    # required-是否是必输项 true-必填 false-可选
    required: true
  # field-param field key
  # field-变量字段标识符
  - field: port
    # name-param field display i18n name
    # name-参数字段显示名称
    name:
      zh-CN: 端口
      en-US: Port
    # type-param field type(most mapping the html input type)
    # type-字段类型,样式(大部分映射input标签type属性)
    type: number
    # when type is number, range is required
    # 当type为number时,用range表示范围
    range: '[0,65535]'
    # required-true or false
    # required-是否是必输项 true-必填 false-可选
    required: true
    # default value
    # 默认值
    defaultValue: 6379
  # field-param field key
  # field-变量字段标识符
  - field: timeout
    # name-param field display i18n name
    # name-参数字段显示名称
    name:
      zh-CN: 超时时间
      en-US: Timeout
    # type-param field type(most mapping the html input type)
    # type-字段类型,样式(大部分映射input标签type属性)
    type: number
    # when type is number, range is required
    # 当type为number时,用range表示范围
    range: '[0,100000]'
    # required-true or false
    # required-是否是必输项 true-必填 false-可选
    required: true
    # default value
    # 默认值
    defaultValue: 3000
  # field-param field key
  # field-变量字段标识符
  - field: username
    name:
      zh-CN: 用户名
      en-US: Username
    type: text
    limit: 20
    required: false
  # field-param field key
  # field-变量字段标识符
  - field: password
    name:
      zh-CN: 密码
      en-US: Password
    type: password
    required: false

# collect metrics config list
# 采集指标组配置列表
metrics:
  # metrics - server
  # 监控指标组 - server
  - name: server
    # metrics group scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics group is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    # 指标组调度优先级(0->127)->(优先级高->低) 优先级低的指标组会等优先级高的指标组采集完成后才会被调度, 相同优先级的指标组会并行调度采集
    # 优先级为0的指标组为可用性指标组,即它会被首先调度,采集成功才会继续调度其它指标组,采集失败则中断调度
    priority: 0
    # collect metrics content
    # 具体监控指标列表
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), instance-if is metrics group unique identifier
      # field-指标名称, type-指标类型(0-number数字,1-string字符串), unit-指标单位('%','ms','MB'), instance-是否是指标集合唯一标识符字段
      - field: redis_version
        type: 1
      - field: redis_git_sha1
        type: 0
      - field: redis_git_dirty
        type: 0
      - field: redis_build_id
        type: 1
      - field: redis_mode
        type: 1
      - field: os
        type: 1
      - field: arch_bits
        type: 0
      - field: multiplexing_api
        type: 1
      - field: atomicvar_api
        type: 1
      - field: gcc_version
        type: 1
      - field: process_id
        type: 0
      - field: process_supervised
        type: 1
      - field: run_id
        type: 1
      - field: tcp_port
        type: 0
      - field: server_time_usec
        type: 0
      - field: uptime_in_seconds
        type: 0
      - field: uptime_in_days
        type: 0
      - field: hz
        type: 0
      - field: configured_hz
        type: 0
      - field: lru_clock
        type: 0
      - field: executable
        type: 1
      - field: config_file
        type: 1
      - field: io_threads_active
        type: 0
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    # 用于监控的协议, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    # 协议为redis时的配置内容
    redis:
      # redis host: ipv4 ipv6 host
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # redis port
      # 端口
      port: ^_^port^_^
      # username
      # 用户名
      username: ^_^username^_^
      # password
      # 密码
      password: ^_^password^_^
      # timeout unit：ms
      # 超时时间 单位：ms
      timeout: ^_^timeout^_^
  # metrics - clients
  # 监控指标组 - clients
  - name: clients
    # metrics group scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics group is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    # 指标组调度优先级(0->127)->(优先级高->低) 优先级低的指标组会等优先级高的指标组采集完成后才会被调度, 相同优先级的指标组会并行调度采集
    # 优先级为0的指标组为可用性指标组,即它会被首先调度,采集成功才会继续调度其它指标组,采集失败则中断调度
    priority: 1
    # collect metrics content
    # 具体监控指标列表
    fields:
      - field: connected_clients
        type: 0
      - field: cluster_connections
        type: 0
      - field: maxclients
        type: 0
      - field: client_recent_max_input_buffer
        type: 0
      - field: client_recent_max_output_buffer
        type: 0
      - field: blocked_clients
        type: 0
      - field: tracking_clients
        type: 0
      - field: clients_in_timeout_table
        type: 0
    protocol: redis
    redis:
      host: ^_^host^_^
      port: ^_^port^_^
      username: ^_^username^_^
      password: ^_^password^_^
      timeout: ^_^timeout^_^
  # metrics - memory
  # 监控指标组 - memory
  - name: memory
    # metrics group scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics group is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    # 指标组调度优先级(0->127)->(优先级高->低) 优先级低的指标组会等优先级高的指标组采集完成后才会被调度, 相同优先级的指标组会并行调度采集
    # 优先级为0的指标组为可用性指标组,即它会被首先调度,采集成功才会继续调度其它指标组,采集失败则中断调度
    priority: 2
    # collect metrics content
    # 具体监控指标列表
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), instance-if is metrics group unique identifier
      # field-指标名称, type-指标类型(0-number数字,1-string字符串), unit-指标单位('%','ms','MB'), instance-是否是指标集合唯一标识符字段
      - field: used_memory
        type: 0
      - field: used_memory_human
        type: 0
        unit: MB
      - field: used_memory_rss
        type: 0
      - field: used_memory_rss_human
        type: 0
        unit: MB
      - field: used_memory_peak
        type: 0
      - field: used_memory_peak_human
        type: 0
        unit: MB
      - field: used_memory_peak_perc
        type: 0
        unit: '%'
      - field: used_memory_overhead
        type: 0
      - field: used_memory_startup
        type: 0
      - field: used_memory_dataset
        type: 0
      - field: used_memory_dataset_perc
        type: 0
        unit: '%'
      - field: allocator_allocated
        type: 0
      - field: allocator_active
        type: 0
      - field: allocator_resident
        type: 0
      - field: total_system_memory
        type: 0
      - field: total_system_memory_human
        type: 0
        unit: GB
      - field: used_memory_lua
        type: 0
      - field: used_memory_lua_human
        type: 0
        unit: KB
      - field: used_memory_scripts
        type: 0
      - field: used_memory_scripts_human
        type: 0
        unit: KB
      - field: number_of_cached_scripts
        type: 0
      - field: maxmemory
        type: 0
      - field: maxmemory_human
        type: 0
        unit: MB
      - field: maxmemory_policy
        type: 1
      - field: allocator_frag_ratio
        type: 0
      - field: allocator_frag_bytes
        type: 0
      - field: allocator_rss_ratio
        type: 0
      - field: allocator_rss_bytes
        type: 0
      - field: rss_overhead_ratio
        type: 0
      - field: rss_overhead_bytes
        type: 0
      - field: mem_fragmentation_ratio
        type: 0
      - field: mem_fragmentation_bytes
        type: 0
      - field: mem_not_counted_for_evict
        type: 0
      - field: mem_replication_backlog
        type: 0
      - field: mem_clients_slaves
        type: 0
      - field: mem_clients_normal
        type: 0
      - field: mem_aof_buffer
        type: 0
      - field: mem_allocator
        type: 1
      - field: active_defrag_running
        type: 0
      - field: lazyfree_pending_objects
        type: 0
      - field: lazyfreed_objects
        type: 0
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    # 用于监控的协议, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    # 协议为redis时的配置内容
    redis:
      # redis host: ipv4 ipv6 host
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # redis port
      # 端口
      port: ^_^port^_^
      # username
      # 用户名
      username: ^_^username^_^
      # password
      # 密码
      password: ^_^password^_^
      # timeout unit：ms
      # 超时时间 单位：ms
      timeout: ^_^timeout^_^

  # metrics - persistence
  # 监控指标组 - persistence
  - name: persistence
    # metrics group scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics group is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    # 指标组调度优先级(0->127)->(优先级高->低) 优先级低的指标组会等优先级高的指标组采集完成后才会被调度, 相同优先级的指标组会并行调度采集
    # 优先级为0的指标组为可用性指标组,即它会被首先调度,采集成功才会继续调度其它指标组,采集失败则中断调度
    priority: 3
    # collect metrics content
    # 具体监控指标列表
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), instance-if is metrics group unique identifier
      # field-指标名称, type-指标类型(0-number数字,1-string字符串), unit-指标单位('%','ms','MB'), instance-是否是指标集合唯一标识符字段
      - field: loading
        type: 0
      - field: current_cow_size
        type: 0
      - field: current_cow_size_age
        type: 0
      - field: current_fork_perc
        type: 0
      - field: current_save_keys_processed
        type: 0
      - field: current_save_keys_total
        type: 0
      - field: rdb_changes_since_last_save
        type: 0
      - field: rdb_bgsave_in_progress
        type: 0
      - field: rdb_last_save_time
        type: 0
      - field: rdb_last_bgsave_status
        type: 1
      - field: rdb_last_bgsave_time_sec
        type: 0
      - field: rdb_current_bgsave_time_sec
        type: 0
      - field: rdb_last_cow_size
        type: 0
      - field: aof_enabled
        type: 0
      - field: aof_rewrite_in_progress
        type: 0
      - field: aof_rewrite_scheduled
        type: 0
      - field: aof_last_rewrite_time_sec
        type: 0
      - field: aof_current_rewrite_time_sec
        type: 0
      - field: aof_last_bgrewrite_status
        type: 1
      - field: aof_last_write_status
        type: 1
      - field: aof_last_cow_size
        type: 0
      - field: module_fork_in_progress
        type: 0
      - field: module_fork_last_cow_size
        type: 0
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    # 用于监控的协议, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    # 协议为redis时的配置内容
    redis:
      # redis host: ipv4 ipv6 host
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # redis port
      # 端口
      port: ^_^port^_^
      # username
      # 用户名
      username: ^_^username^_^
      # password
      # 密码
      password: ^_^password^_^
      # timeout unit：ms
      # 超时时间 单位：ms
      timeout: ^_^timeout^_^

  # metrics - stats
  # 监控指标组 - stats
  - name: stats
    # metrics group scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics group is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    # 指标组调度优先级(0->127)->(优先级高->低) 优先级低的指标组会等优先级高的指标组采集完成后才会被调度, 相同优先级的指标组会并行调度采集
    # 优先级为0的指标组为可用性指标组,即它会被首先调度,采集成功才会继续调度其它指标组,采集失败则中断调度
    priority: 4
    # collect metrics content
    # 具体监控指标列表
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), instance-if is metrics group unique identifier
      # field-指标名称, type-指标类型(0-number数字,1-string字符串), unit-指标单位('%','ms','MB'), instance-是否是指标集合唯一标识符字段
      - field: total_connections_received
        type: 0
      - field: total_commands_processed
        type: 0
      - field: instantaneous_ops_per_sec
        type: 0
      - field: total_net_input_bytes
        type: 0
      - field: total_net_output_bytes
        type: 0
      - field: instantaneous_input_kbps
        type: 0
      - field: instantaneous_output_kbps
        type: 0
      - field: rejected_connections
        type: 0
      - field: sync_full
        type: 0
      - field: sync_partial_ok
        type: 0
      - field: sync_partial_err
        type: 0
      - field: expired_keys
        type: 0
      - field: expired_stale_perc
        type: 0
      - field: expired_time_cap_reached_count
        type: 0
      - field: expire_cycle_cpu_milliseconds
        type: 0
      - field: evicted_keys
        type: 0
      - field: keyspace_hits
        type: 0
      - field: keyspace_misses
        type: 0
      - field: pubsub_channels
        type: 0
      - field: pubsub_patterns
        type: 0
      - field: latest_fork_usec
        type: 0
      - field: total_forks
        type: 0
      - field: migrate_cached_sockets
        type: 0
      - field: slave_expires_tracked_keys
        type: 0
      - field: active_defrag_hits
        type: 0
      - field: active_defrag_misses
        type: 0
      - field: active_defrag_key_hits
        type: 0
      - field: active_defrag_key_misses
        type: 0
      - field: tracking_total_keys
        type: 0
      - field: tracking_total_items
        type: 0
      - field: tracking_total_prefixes
        type: 0
      - field: unexpected_error_replies
        type: 0
      - field: total_error_replies
        type: 0
      - field: dump_payload_sanitizations
        type: 0
      - field: total_reads_processed
        type: 0
      - field: total_writes_processed
        type: 0
      - field: io_threaded_reads_processed
        type: 0
      - field: io_threaded_writes_processed
        type: 0
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    # 用于监控的协议, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    # 协议为redis时的配置内容
    redis:
      # redis host: ipv4 ipv6 host
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # redis port
      # 端口
      port: ^_^port^_^
      # username
      # 用户名
      username: ^_^username^_^
      # password
      # 密码
      password: ^_^password^_^
      # timeout unit：ms
      # 超时时间 单位：ms
      timeout: ^_^timeout^_^

  # metrics - replication
  # 监控指标组 - replication
  - name: replication
    # metrics group scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics group is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    # 指标组调度优先级(0->127)->(优先级高->低) 优先级低的指标组会等优先级高的指标组采集完成后才会被调度, 相同优先级的指标组会并行调度采集
    # 优先级为0的指标组为可用性指标组,即它会被首先调度,采集成功才会继续调度其它指标组,采集失败则中断调度
    priority: 5
    # collect metrics content
    # 具体监控指标列表
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), instance-if is metrics group unique identifier
      # field-指标名称, type-指标类型(0-number数字,1-string字符串), unit-指标单位('%','ms','MB'), instance-是否是指标集合唯一标识符字段
      - field: role
        type: 1
      - field: connected_slaves
        type: 0
      - field: master_failover_state
        type: 1
      - field: master_replid
        type: 1
      - field: master_replid2
        type: 0
      - field: master_repl_offset
        type: 0
      - field: second_repl_offset
        type: 0
      - field: repl_backlog_active
        type: 0
      - field: repl_backlog_size
        type: 0
      - field: repl_backlog_first_byte_offset
        type: 0
      - field: repl_backlog_histlen
        type: 0
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    # 用于监控的协议, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    # 协议为redis时的配置内容
    redis:
      # redis host: ipv4 ipv6 host
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # redis port
      # 端口
      port: ^_^port^_^
      # username
      # 用户名
      username: ^_^username^_^
      # password
      # 密码
      password: ^_^password^_^
      # timeout unit：ms
      # 超时时间 单位：ms
      timeout: ^_^timeout^_^

  # metrics - cpu
  # 监控指标组 - cpu
  - name: cpu
    # metrics group scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics group is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    # 指标组调度优先级(0->127)->(优先级高->低) 优先级低的指标组会等优先级高的指标组采集完成后才会被调度, 相同优先级的指标组会并行调度采集
    # 优先级为0的指标组为可用性指标组,即它会被首先调度,采集成功才会继续调度其它指标组,采集失败则中断调度
    priority: 6
    # collect metrics content
    # 具体监控指标列表
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), instance-if is metrics group unique identifier
      # field-指标名称, type-指标类型(0-number数字,1-string字符串), unit-指标单位('%','ms','MB'), instance-是否是指标集合唯一标识符字段
      - field: used_cpu_sys
        type: 0
      - field: used_cpu_user
        type: 0
      - field: used_cpu_sys_children
        type: 0
      - field: used_cpu_user_children
        type: 0
      - field: used_cpu_sys_main_thread
        type: 0
      - field: used_cpu_user_main_thread
        type: 0
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    # 用于监控的协议, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    # 协议为redis时的配置内容
    redis:
      # redis host: ipv4 ipv6 host
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # redis port
      # 端口
      port: ^_^port^_^
      # username
      # 用户名
      username: ^_^username^_^
      # password
      # 密码
      password: ^_^password^_^
      # timeout unit：ms
      # 超时时间 单位：ms
      timeout: ^_^timeout^_^

  # metrics - errorstats
  # 监控指标组 - errorstats
  - name: errorstats
    # metrics group scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics group is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    # 指标组调度优先级(0->127)->(优先级高->低) 优先级低的指标组会等优先级高的指标组采集完成后才会被调度, 相同优先级的指标组会并行调度采集
    # 优先级为0的指标组为可用性指标组,即它会被首先调度,采集成功才会继续调度其它指标组,采集失败则中断调度
    priority: 8
    # collect metrics content
    # 具体监控指标列表
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), instance-if is metrics group unique identifier
      # field-指标名称, type-指标类型(0-number数字,1-string字符串), unit-指标单位('%','ms','MB'), instance-是否是指标集合唯一标识符字段
      - field: errorstat_ERR
        type: 1
      - field: errorstat_MISCONF
        type: 1
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    # 用于监控的协议, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    # 协议为redis时的配置内容
    redis:
      # redis host: ipv4 ipv6 host
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # redis port
      # 端口
      port: ^_^port^_^
      # username
      # 用户名
      username: ^_^username^_^
      # password
      # 密码
      password: ^_^password^_^
      # timeout unit：ms
      # 超时时间 单位：ms
      timeout: ^_^timeout^_^

  # metrics - cluster
  # 监控指标组 - cluster
  - name: cluster
    # collect metrics content
    # 具体监控指标列表
    priority: 9
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), instance-if is metrics group unique identifier
      # field-指标名称, type-指标类型(0-number数字,1-string字符串), unit-指标单位('%','ms','MB'), instance-是否是指标集合唯一标识符字段
      - field: cluster_enabled
        type: 0
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    # 用于监控的协议, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    # 协议为redis时的配置内容
    redis:
      # redis host: ipv4 ipv6 host
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # redis port
      # 端口
      port: ^_^port^_^
      # username
      # 用户名
      username: ^_^username^_^
      # password
      # 密码
      password: ^_^password^_^
      # timeout unit：ms
      # 超时时间 单位：ms
      timeout: ^_^timeout^_^

  # metrics - commandstats
  # 监控指标组 - commandstats
  - name: commandstats
    # metrics group scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics group is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    # 指标组调度优先级(0->127)->(优先级高->低) 优先级低的指标组会等优先级高的指标组采集完成后才会被调度, 相同优先级的指标组会并行调度采集
    # 优先级为0的指标组为可用性指标组,即它会被首先调度,采集成功才会继续调度其它指标组,采集失败则中断调度
    priority: 9
    # collect metrics content
    # 具体监控指标列表
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), instance-if is metrics group unique identifier
      # field-指标名称, type-指标类型(0-number数字,1-string字符串), unit-指标单位('%','ms','MB'), instance-是否是指标集合唯一标识符字段
      - field: cmdstat_set
        type: 1
      - field: cmdstat_get
        type: 1
      - field: cmdstat_setnx
        type: 1
      - field: cmdstat_hset
        type: 1
      - field: cmdstat_hget
        type: 1
      - field: cmdstat_lpush
        type: 1
      - field: cmdstat_rpush
        type: 1
      - field: cmdstat_lpop
        type: 1
      - field: cmdstat_rpop
        type: 1
      - field: cmdstat_llen
        type: 1
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    # 用于监控的协议, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    # 协议为redis时的配置内容
    redis:
      # redis host: ipv4 ipv6 host
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # redis port
      # 端口
      port: ^_^port^_^
      # username
      # 用户名
      username: ^_^username^_^
      # password
      # 密码
      password: ^_^password^_^
      # timeout unit：ms
      # 超时时间 单位：ms
      timeout: ^_^timeout^_^

  # metrics - keyspace
  # 监控指标组 - keyspace
  - name: keyspace
    # metrics group scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics group is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    # 指标组调度优先级(0->127)->(优先级高->低) 优先级低的指标组会等优先级高的指标组采集完成后才会被调度, 相同优先级的指标组会并行调度采集
    # 优先级为0的指标组为可用性指标组,即它会被首先调度,采集成功才会继续调度其它指标组,采集失败则中断调度
    priority: 9
    # collect metrics content
    # 具体监控指标列表
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), instance-if is metrics group unique identifier
      # field-指标名称, type-指标类型(0-number数字,1-string字符串), unit-指标单位('%','ms','MB'), instance-是否是指标集合唯一标识符字段
      - field: db0
        type: 1
      - field: db1
        type: 1
      - field: db2
        type: 1
      - field: db3
        type: 1
      - field: db4
        type: 1
      - field: db5
        type: 1
      - field: db6
        type: 1
      - field: db7
        type: 1
      - field: db8
        type: 1
      - field: db9
        type: 1
      - field: db10
        type: 1
      - field: db11
        type: 1
      - field: db12
        type: 1
      - field: db13
        type: 1
      - field: db14
        type: 1
      - field: db15
        type: 1
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    # 用于监控的协议, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: redis
    # the config content when protocol is redis
    # 协议为redis时的配置内容
    redis:
      # redis host: ipv4 ipv6 host
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # redis port
      # 端口
      port: ^_^port^_^
      # username
      # 用户名
      username: ^_^username^_^
      # password
      # 密码
      password: ^_^password^_^
      # timeout unit：ms
      # 超时时间 单位：ms
      timeout: ^_^timeout^_^
