# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The monitoring type category：service-application service monitoring db-database monitoring custom-custom monitoring os-operating system monitoring
category: program
# The monitoring type eg: springboot2 linux windows tomcat mysql aws...
app: springboot3

# The monitoring i18n name
name:
  zh-CN: SpringBoot3.0
  en-US: SpringBoot3.0
# The description and help of this monitoring type
help:
  zh-CN: HertzBeat 对 <a class='help_module_content' href='http://www.tutorialspoint.com/spring_boot/spring_boot_actuator.htm'> SpringBoot3.0 Actuator </a> 暴露的通用性能指标(health、environment、threads、memory_used)进行采集监控。<span class='help_module_span'>注意⚠️：如果要监控 SpringBoot 中的信息，需要您的 SpringBoot 应用集成并开启 SpringBoot Actuator, <a class='help_module_content'  href='https://hertzbeat.apache.org/zh-cn/docs/help/springboot3'>点击查看具体步骤</a>。</span>
  en-US: HertzBeat collect and monitors SpringBoot through general performance metric that exposed by the SpringBoot3.0 Actuator. <br><span class='help_module_span'><br>Note⚠️:You should make sure that your SpringBoot application have already integrated and enabled the SpringBoot Actuator, <a class='help_module_content'  href='https://hertzbeat.apache.org/docs/help/springboot3'>click here to see the specific steps.</a></span>
  zh-TW: HertzBeat 對<a class='help_module_content' href='http://www.tutorialspoint.com/spring_boot/spring_boot_actuator.htm'> SpringBoot3.0 Actuator </a>暴露的通用性能指標（health、environment、threads、memory_used）進行採集監控。< span class='help_module_span'>注意⚠️：如果要監控SpringBoot中的指標，需要您的SpringBoot應用集成並開啟SpringBoot Actuator，<a class='help_module_content' href='https://hertzbeat.apache.org/zh-cn/docs/help/springboot3'>點擊查看具體步驟</a>。</span>
helpLink:
  zh-CN: https://hertzbeat.apache.org/zh-cn/docs/help/springboot3
  en-US: https://hertzbeat.apache.org/docs/help/springboot3
# Input params define for monitoring(render web ui by the definition)
params:
  # field-param field key
  - field: host
    # name-param field display i18n name
    name:
      zh-CN: 目标Host
      en-US: Target Host
    # type-param field type(most mapping the html input type)
    type: host
    # required-true or false
    required: true
  # field-param field key
  - field: port
    # name-param field display i18n name
    name:
      zh-CN: 端口
      en-US: Port
    # type-param field type(most mapping the html input type)
    type: number
    # when type is number, range is required
    range: '[0,65535]'
    # required-true or false
    required: true
    # default value
    defaultValue: 8080
  # field-param field key
  - field: ssl
    # name-param field display i18n name
    name:
      zh-CN: 启动SSL
      en-US: SSL
    # When the type is boolean, the frontend will display a switch for it.
    type: boolean
    # required-true or false
    required: false
  # field-param field key
  - field: base_path
    # name-param field display i18n name
    name:
      zh-CN: Base Path
      en-US: Base Path
    # type-param field type(most mapping the html input type) The type "text" belongs to a text input field.
    type: text
    # default value
    defaultValue: /actuator
    # required-true or false
    required: true
    # hide-true or false
    hide: true
# collect metrics config list
metrics:
  # metrics - available
  - name: available
    i18n:
      zh-CN: 可用性
      en-US: available
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 0
    # collect metrics content
    fields:
      # field-metric name, type-metric type(0-number,1-string), instance-is instance primary key, unit-metric unit
      - field: responseTime
        i18n:
          zh-CN: 响应时间
          en-US: Response Time
        type: 0
        unit: ms
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: http
    # Specific collection configuration when protocol is http protocol
    http:
      # http host: ipv4 ipv6 domain
      host: ^_^host^_^
      # http port
      port: ^_^port^_^
      # http url
      url: ^_^base_path^_^
      # http request method GET POST PUT DELETE PATCH
      method: GET
      # enable SSL/TLS, that is, whether it is http or https, the default is false
      ssl: ^_^ssl^_^
      # http response data parse type: default-hertzbeat rule, jsonpath-jsonpath script, website-api availability monitoring
      parseType: default


  - name: thread_state
    visible: false
    priority: 1
    fields:
      - field: state
        i18n:
          zh-CN: 状态
          en-US: state
        type: 1
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: ^_^base_path^_^/metrics/jvm.threads.states
      method: GET
      ssl: ^_^ssl^_^
      parseType: jsonPath
      parseScript: '$.availableTags[?(@.tag == "state")].values[*]'

  - name: threads
    i18n:
      zh-CN: 线程
      en-US: threads
    priority: 2
    fields:
      - field: state
        i18n:
          zh-CN: 状态
          en-US: state
        type: 1
        label: true
      - field: size
        i18n:
          zh-CN: 大小
          en-US: size
        type: 0
    aliasFields:
      - $.measurements[?(@.statistic == "VALUE")].value
    calculates:
      - state='^o^state^o^'
      - size=$.measurements[?(@.statistic == "VALUE")].value
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: ^_^base_path^_^/metrics/jvm.threads.states?tag=state:^o^state^o^
      method: GET
      ssl: ^_^ssl^_^
      parseType: jsonPath
      parseScript: '$'

  - name: space_name
    i18n:
      zh-CN: 空间名称
      en-US: space name
    visible: false
    priority: 3
    fields:
      - field: id
        i18n:
          zh-CN: ID
          en-US: ID
        type: 1
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: ^_^base_path^_^/metrics/jvm.memory.used
      method: GET
      ssl: ^_^ssl^_^
      parseType: jsonPath
      parseScript: '$.availableTags[?(@.tag == "id")].values[*]'

  - name: memory_used
    i18n:
      zh-CN: 内存使用
      en-US: memory used
    priority: 4
    fields:
      - field: space
        i18n:
          zh-CN: 空间
          en-US: space
        type: 1
        label: true
      - field: mem_used
        i18n:
          zh-CN: 已使用
          en-US: memory used
        type: 0
        unit: MB
    aliasFields:
      - $.measurements[?(@.statistic == "VALUE")].value
    calculates:
      - space="^o^id^o^"
      - mem_used=$.measurements[?(@.statistic == "VALUE")].value
    units:
      - mem_used=B->MB
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: ^_^base_path^_^/metrics/jvm.memory.used?tag=id:^o^id^o^
      method: GET
      ssl: ^_^ssl^_^
      parseType: jsonPath
      parseScript: '$'

  - name: health
    i18n:
      zh-CN: 健康状态
      en-US: health
    priority: 5
    fields:
      - field: status
        i18n:
          zh-CN: 状态
          en-US: status
        type: 1
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: ^_^base_path^_^/health
      method: GET
      ssl: ^_^ssl^_^
      parseType: default
