# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# The monitoring type category：service-application service monitoring db-database monitoring custom-custom monitoring os-operating system monitoring
category: custom
# The monitoring type eg: linux windows tomcat mysql aws...
app: hertzbeat_token
# The monitoring i18n name
name:
  zh-CN: HertzBeat(Token)
  en-US: HertzBeat(Token)
# The description and help of this monitoring type
help:
  zh-CN: Hertzbeat 对 HertzBeat监控(Token)进行测量监控。<br>您可以点击 “<i>新建 HertzBeat监控(Token)</i>” 并进行配置，或者选择“<i>更多操作</i>”，导入已有配置。
  en-US: Hertzbeat monitors HertzBeat Monitor(Token). You could click the "<i>New HertzBeat Monitor(Token)</i>" button and proceed with the configuration or import an existing setup through the "<i>More Actions</i>" menu.
  zh-TW: Hertzbeat對HertzBeat監控（Token）進行量測監控。<br>您可以點擊“<i>新建HertzBeat監控（Token）</i>”並進行配寘，或者選擇“<i>更多操作</i>”，導入已有配寘。
helpLink:
  zh-CN: https://hertzbeat.apache.org/zh-cn/docs/help/hertzbeat_token
  en-US: https://hertzbeat.apache.org/docs/help/hertzbeat_token
# Input params define for monitoring(render web ui by the definition)
params:
  # field-param field key
  - field: host
    # name-param field display i18n name
    name:
      zh-CN: 目标Host
      en-US: Target Host
    # type-param field type(most mapping the html input type)
    type: host
    # required-true or false
    required: true
  - field: port
    name:
      zh-CN: 端口
      en-US: Port
    # type-param field type(most mapping the html input type)
    type: number
    # when type is number, range is required
    range: '[0,65535]'
    required: true
    defaultValue: 1157
    placeholder: 'Please input port'
  - field: ssl
    name:
      zh-CN: 启动SSL
      en-US: SSL
    # type-param field type(boolean mapping the html switch tag)
    type: boolean
    required: false
  - field: contentType
    name:
      zh-CN: Content-Type
      en-US: Content-Type
    type: text
    placeholder: 'Request Body Type'
    required: false
  - field: payload
    name:
      zh-CN: 请求BODY
      en-US: BODY
    type: textarea
    placeholder: 'Available When POST PUT'
    required: false
# collect metrics config list
metrics:
  # metrics - auth
  - name: auth
    i18n:
      zh-CN: 认证
      en-US: Auth
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 0
    # collect metrics content
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: token
        type: 1
        i18n:
          zh-CN: 令牌
          en-US: Token
      - field: refreshToken
        type: 1
        i18n:
          zh-CN: 刷新令牌
          en-US: Refresh Token
    # the protocol used for monitoring, eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: http
    # the config content when protocol is http
    http:
      # http host: ipv4 ipv6 domain
      host: ^_^host^_^
      # http port
      port: ^_^port^_^
      # http url
      url: /api/account/auth/form
      # http method: GET POST PUT DELETE PATCH
      method: POST
      # if enabled https
      ssl: ^_^ssl^_^
      payload: ^_^payload^_^
      # http request header content
      headers:
        content-type: ^_^contentType^_^
        ^_^headers^_^: ^_^headers^_^
      # http request params
      params:
        ^_^params^_^: ^_^params^_^
      # http response data parse type: default-hertzbeat rule, jsonpath-jsonpath script, website-for website monitoring, prometheus-prometheus exporter rule
      parseType: jsonPath
      parseScript: '$.data'


  - name: summary
    i18n:
      zh-CN: 概要信息
      en-US: Summary
    priority: 1
    fields:
      - field: app
        type: 1
        label: true
        i18n:
          zh-CN: 应用
          en-US: App
      - field: category
        type: 1
        i18n:
          zh-CN: 类别
          en-US: Category
      - field: status
        type: 0
        i18n:
          zh-CN: 状态
          en-US: Status
      - field: size
        type: 0
        i18n:
          zh-CN: 数量
          en-US: Size
      - field: availableSize
        type: 0
        i18n:
          zh-CN: 可用数量
          en-US: Available Size
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: /api/summary
      method: GET
      ssl: ^_^ssl^_^
      authorization:
        type: Bearer Token
        # ^o^xxx^o^ ^o^ substitution represents the value of the acquisition metric xxx of the previous priority
        bearerTokenToken: ^o^token^o^
      parseType: jsonPath
      parseScript: '$.data.apps.*'

  - name: inner_queue
    i18n:
      zh-CN: 内部队列
      en-US: Inner Queue
    priority: 1
    fields:
      - field: responseTime
        type: 0
        unit: ms
        i18n:
          zh-CN: 响应时间
          en-US: Response Time
      - field: alertDataQueue
        type: 0
        i18n:
          zh-CN: 变更数据队列
          en-US: Alert Data Queue
      - field: metricsDataToAlertQueue
        type: 0
        i18n:
          zh-CN: 指标数据到变更队列
          en-US: Metrics Data to Alert Queue
      - field: metricsDataToPersistentStorageQueue
        type: 0
        i18n:
          zh-CN: 指标数据到持久化队列
          en-US: Metrics Data to Persistent Storage Queue
      - field: metricsDataToMemoryStorageQueue
        type: 0
        i18n:
          zh-CN: 指标数据到内存存储队列
          en-US: Metrics Data to Memory Storage Queue
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: /api/metrics
      timeout: ^_^timeout^_^
      method: GET
      ssl: ^_^ssl^_^
      authorization:
        type: Bearer Token
        # ^o^xxx^o^ ^o^ substitution represents the value of the acquisition metric xxx of the previous priority
        bearerTokenToken: ^o^token^o^
      parseType: jsonPath
      parseScript: '$.data'

  - name: thread_state
    i18n:
      zh-CN: 指标数据到内存存储队列
      en-US: Metrics Data to Memory Storage Queue
    visible: false
    priority: 2
    fields:
      - field: state
        type: 1
        i18n:
          zh-CN: 状态
          en-US: State
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: /actuator/metrics/jvm.threads.states
      method: GET
      ssl: ^_^ssl^_^
      authorization:
        type: Bearer Token
        # ^o^xxx^o^ ^o^ substitution represents the value of the acquisition metric xxx of the previous priority
        bearerTokenToken: ^o^token^o^
      parseType: jsonPath
      parseScript: '$.availableTags[?(@.tag == "state")].values[*]'

  - name: threads
    i18n:
      zh-CN: 线程
      en-US: Threads
    priority: 3
    fields:
      - field: state
        type: 1
        i18n:
          zh-CN: 状态
          en-US: State
      - field: number
        type: 0
        i18n:
          zh-CN: 数量
          en-US: Number
    aliasFields:
      - $.measurements[?(@.statistic == "VALUE")].value
    calculates:
      - state='^o^state^o^'
      - number=$.measurements[?(@.statistic == "VALUE")].value
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: /actuator/metrics/jvm.threads.states?tag=state:^o^state^o^
      method: GET
      ssl: ^_^ssl^_^
      authorization:
        type: Bearer Token
        # ^o^xxx^o^ ^o^ substitution represents the value of the acquisition metric xxx of the previous priority
        bearerTokenToken: ^o^token^o^
      parseType: jsonPath
      parseScript: '$'

  - name: space_name
    i18n:
      zh-CN: 空间名称
      en-US: Space Name
    visible: false
    priority: 4
    fields:
      - field: id
        type: 1
        i18n:
          zh-CN: ID
          en-US: ID
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: /actuator/metrics/jvm.memory.used
      method: GET
      ssl: ^_^ssl^_^
      authorization:
        type: Bearer Token
        # ^o^xxx^o^ ^o^ substitution represents the value of the acquisition metric xxx of the previous priority
        bearerTokenToken: ^o^token^o^
      parseType: jsonPath
      parseScript: '$.availableTags[?(@.tag == "id")].values[*]'

  - name: memory_used
    i18n:
      zh-CN: 内存使用
      en-US: Memory Used
    priority: 5
    fields:
      - field: space
        type: 1
        i18n:
          zh-CN: 空间
          en-US: Space
      - field: mem_used
        type: 0
        unit: MB
        i18n:
          zh-CN: 内存使用量
          en-US: Memory Used
    aliasFields:
      - $.measurements[?(@.statistic == "VALUE")].value
    calculates:
      - space="^o^id^o^"
      - mem_used=$.measurements[?(@.statistic == "VALUE")].value
    units:
      - mem_used=B->MB
    protocol: http
    http:
      host: ^_^host^_^
      port: ^_^port^_^
      url: /actuator/metrics/jvm.memory.used?tag=id:^o^id^o^
      method: GET
      ssl: ^_^ssl^_^
      authorization:
        type: Bearer Token
        # ^o^xxx^o^ ^o^ substitution represents the value of the acquisition metric xxx of the previous priority
        bearerTokenToken: ^o^token^o^
      parseType: jsonPath
      parseScript: '$'
