# 此监控类型所属类别：service-应用服务监控 db-数据库监控 custom-自定义监控
category: mid
# 监控应用类型名称(与文件名保持一致)
app: docker
name:
  zh-CN: Docker
  en-US: Docker
# 参数映射map. type是参数类型: 0-number数字, 1-string明文字符串, 2-secret加密字符串
# 强制固定必须参数 - host
configmap:
  - key: host
    type: 1
  - key: port
    type: 0
  - key: ssl
    type: 1
  - key: username
    type: 1
  - key: password
    type: 2
  - key: authType
    type: 1
# 指标组列表
metrics:
  # 第一个监控指标组 cpu
  # 注意：内置监控指标有 (responseTime - 响应时间)
  - name: containers
    # 指标组调度优先级(0-127)越小优先级越高,优先级低的指标组会等优先级高的指标组采集完成后才会被调度,相同优先级的指标组会并行调度采集
    # 优先级为0的指标组为可用性指标组,即它会被首先调度,采集成功才会继续调度其它指标组,采集失败则中断调度
    priority: 0
    # 指标组中的具体监控指标
    fields:
      # 指标信息 包括 field名称   type字段类型:0-number数字,1-string字符串   instance是否为实例主键   unit:指标单位
      - field: id
        type: 1
      - field: name
        type: 1
      - field: image
        type: 1
      - field: command
        type: 1
      - field: state
        type: 1
      - field: status
        type: 1
    aliasFields:
      - Id
      - $.Names[0]
      - Image
      - Command
      - State
      - Status
    calculates:
      - id = Id
      - name = $.Names[0]
      - image = Image
      - command = Command
      - state = State
      - status = Status
    # 监控采集使用协议 eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: http
    # 当protocol为http协议时具体的采集配置
    http:
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # 端口
      port: ^_^port^_^
      # url请求接口路径
      url: /containers/json
      # 请求方式 GET POST PUT DELETE PATCH
      method: GET
      # 是否启用ssl/tls,即是http还是https,默认false
      ssl: ^_^ssl^_^
      # 认证
      authorization:
        # 认证方式: Basic Auth, Digest Auth, Bearer Token
        type: ^_^authType^_^
        basicAuthUsername: ^_^username^_^
        basicAuthPassword: ^_^password^_^
        digestAuthUsername: ^_^username^_^
        digestAuthPassword: ^_^password^_^
      # 响应数据解析方式: default-系统规则,jsonPath-jsonPath脚本,website-api可用性指标监控
      parseType: jsonPath
      parseScript: '$.*'

  - name: stats
    priority: 1
    fields:
      - field: name
        type: 1
      - field: available_memory
        type: 0
      - field: used_memory
        type: 0
      - field: memory_usage
        type: 0
        unit: '%'
      - field: cpu_delta
        type: 0
      - field: number_cpus
        type: 0
      - field: cpu_usage
        type: 0
        unit: '%'
    aliasFields:
      - $.memory_stats.usage
      - $.memory_stats.stats.cache
      - $.memory_stats.limit
      - $.cpu_stats.cpu_usage.total_usage
      - $.precpu_stats.cpu_usage.total_usage
      - $.cpu_stats.online_cpus
      - $.cpu_stats.system_cpu_usage
      - $.precpu_stats.system_cpu_usage
    calculates:
      - available_memory = $.memory_stats.limit
      - used_memory=$.memory_stats.usage - $.memory_stats.stats.cache
      - memory_usage=(($.memory_stats.usage - $.memory_stats.stats.cache)/$.memory_stats.limit) * 100
      - cpu_delta=$.cpu_stats.cpu_usage.total_usage - $.precpu_stats.cpu_usage.total_usage
      - number_cpus=$.cpu_stats.online_cpus
      - cpu_usage=(($.cpu_stats.cpu_usage.total_usage - $.precpu_stats.cpu_usage.total_usage) / ($.cpu_stats.system_cpu_usage - $.precpu_stats.system_cpu_usage)) * online_cpus * 100
    protocol: http
    http:
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # 端口
      port: ^_^port^_^
      # url请求接口路径
      url: /containers/-_-id-_-/stats
      # 请求方式 GET POST PUT DELETE PATCH
      method: GET
      # 是否启用ssl/tls,即是http还是https,默认false
      ssl: ^_^ssl^_^
      params:
        stream: false
        one-shot: true
      # 认证
      authorization:
        # 认证方式: Basic Auth, Digest Auth, Bearer Token
        type: ^_^authType^_^
        basicAuthUsername: ^_^username^_^
        basicAuthPassword: ^_^password^_^
        digestAuthUsername: ^_^username^_^
        digestAuthPassword: ^_^password^_^
      # 响应数据解析方式: default-系统规则,jsonPath-jsonPath脚本,website-api可用性指标监控
      parseType: jsonPath
      parseScript: '$'