# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

category: cn
app: docker
name:
  zh-CN: Docker
  en-US: Docker
# 参数映射map. type是参数类型: 0-number数字, 1-string明文字符串, 2-secret加密字符串
# 强制固定必须参数 - host
configmap:
  - key: host
    type: 1
  - key: port
    type: 0
  - key: ssl
    type: 1
metrics:
  - name: system
    # 指标组调度优先级(0-127)越小优先级越高,优先级低的指标组会等优先级高的指标组采集完成后才会被调度,相同优先级的指标组会并行调度采集
    # 优先级为0的指标组为可用性指标组,即它会被首先调度,采集成功才会继续调度其它指标组,采集失败则中断调度
    priority: 0
    # 指标组中的具体监控指标
    fields:
      # 指标信息 包括 field名称   type字段类型:0-number数字,1-string字符串   instance是否为实例主键   unit:指标单位
      - field: name
        type: 1
      - field: version
        type: 1
      - field: os
        type: 1
      - field: root_dir
        type: 1
      - field: containers
        type: 0
      - field: containers_running
        type: 0
      - field: containers_paused
        type: 0
      - field: containers_stopped
        type: 0
      - field: images
        type: 0
      - field: ncpu
        type: 0
      - field: mem_total
        type: 0
        unit: MB
      - field: system_time
        type: 1
    aliasFields:
      - Name
      - ServerVersion
      - OperatingSystem
      - OSType
      - Architecture
      - DockerRootDir
      - Containers
      - ContainersRunning
      - ContainersPaused
      - ContainersStopped
      - Images
      - NCPU
      - MemTotal
      - SystemTime
    calculates:
      - name = Name
      - version = OperatingSystem + " " + ServerVersion
      - os = OSType + " " + Architecture
      - root_dir = DockerRootDir
      - containers = Containers
      - containers_running = ContainersRunning
      - containers_paused = ContainersPaused
      - containers_stopped = ContainersStopped
      - images = Images
      - ncpu = NCPU
      - mem_total = MemTotal
      - system_time = SystemTime
    units:
      - mem_total=B->MB
    protocol: http
    # 当protocol为http协议时具体的采集配置
    http:
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # 端口
      port: ^_^port^_^
      # url请求接口路径
      url: /info
      # 请求方式 GET POST PUT DELETE PATCH
      method: GET
      # 是否启用ssl/tls,即是http还是https,默认false
      ssl: ^_^ssl^_^
      # 响应数据解析方式: default-系统规则,jsonPath-jsonPath脚本,website-api可用性指标监控
      parseType: default

  - name: containers
    # 指标组调度优先级(0-127)越小优先级越高,优先级低的指标组会等优先级高的指标组采集完成后才会被调度,相同优先级的指标组会并行调度采集
    # 优先级为0的指标组为可用性指标组,即它会被首先调度,采集成功才会继续调度其它指标组,采集失败则中断调度
    priority: 1
    # 指标组中的具体监控指标
    fields:
      # 指标信息 包括 field名称   type字段类型:0-number数字,1-string字符串   instance是否为实例主键   unit:指标单位
      - field: id
        type: 1
      - field: name
        type: 1
      - field: image
        type: 1
      - field: command
        type: 1
      - field: state
        type: 1
      - field: status
        type: 1
    aliasFields:
      - Id
      - $.Names[0]
      - Image
      - Command
      - State
      - Status
    calculates:
      - id = Id
      - name=#`$.Names[0]`
      - image = Image
      - command = Command
      - state = State
      - status = Status
    # 监控采集使用协议 eg: sql, ssh, http, telnet, wmi, snmp, sdk
    protocol: http
    # 当protocol为http协议时具体的采集配置
    http:
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # 端口
      port: ^_^port^_^
      # url请求接口路径
      url: /containers/json
      # 请求方式 GET POST PUT DELETE PATCH
      method: GET
      # 是否启用ssl/tls,即是http还是https,默认false
      ssl: ^_^ssl^_^
      # 响应数据解析方式: default-系统规则,jsonPath-jsonPath脚本,website-api可用性指标监控
      parseType: jsonPath
      parseScript: '$.*'

  - name: stats
    priority: 2
    fields:
      - field: name
        type: 1
      - field: available_memory
        type: 0
        unit: MB
      - field: used_memory
        type: 0
        unit: MB
      - field: memory_usage
        type: 0
        unit: '%'
      - field: cpu_delta
        type: 0
      - field: number_cpus
        type: 0
      - field: cpu_usage
        type: 0
        unit: '%'
    aliasFields:
      - $.name
      - $.memory_stats.usage
      - $.memory_stats.limit
      - $.cpu_stats.cpu_usage.total_usage
      - $.precpu_stats.cpu_usage.total_usage
      - $.cpu_stats.online_cpus
      - $.cpu_stats.system_cpu_usage
      - $.precpu_stats.system_cpu_usage
    calculates:
      - name=$.name
      - available_memory = $.memory_stats.limit
      - used_memory=$.memory_stats.usage
      - memory_usage=($.memory_stats.usage / $.memory_stats.limit) * 100
      - cpu_delta=$.cpu_stats.cpu_usage.total_usage - $.precpu_stats.cpu_usage.total_usage
      - number_cpus=$.cpu_stats.online_cpus
      - cpu_usage=(($.cpu_stats.cpu_usage.total_usage - $.precpu_stats.cpu_usage.total_usage) / ($.cpu_stats.system_cpu_usage - $.precpu_stats.system_cpu_usage)) * $.cpu_stats.online_cpus * 100
    units:
      - available_memory=B->MB
      - used_memory=B->MB
    protocol: http
    http:
      # 主机host: ipv4 ipv6 域名
      host: ^_^host^_^
      # 端口
      port: ^_^port^_^
      # url请求接口路径
      url: /containers/^o^id^o^/stats
      # 请求方式 GET POST PUT DELETE PATCH
      method: GET
      # 是否启用ssl/tls,即是http还是https,默认false
      ssl: ^_^ssl^_^
      params:
        stream: false
      # 响应数据解析方式: default-系统规则,jsonPath-jsonPath脚本,website-api可用性指标监控
      parseType: jsonPath
      parseScript: '$'